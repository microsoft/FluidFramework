{
	"name": "@fluid-example/data-object-grid",
	"version": "2.1.0",
	"private": true,
	"description": "Data object grid creates child data objects from a registry and lays them out in a grid.",
	"homepage": "https://fluidframework.com",
	"repository": {
		"type": "git",
		"url": "https://github.com/microsoft/FluidFramework.git",
		"directory": "examples/apps/data-object-grid"
	},
	"license": "MIT",
	"author": "Microsoft and contributors",
	"type": "module",
	"scripts": {
		"build": "fluid-build . --task build",
		"build:compile": "fluid-build . --task compile",
		"build:copy": "copyfiles -u 1 \"src/**/*.css\" lib/",
		"build:esnext": "tsc --project ./tsconfig.json",
		"check:biome": "biome check . --formatter-enabled=true",
		"check:format": "npm run check:biome",
		"check:prettier": "prettier --check . --cache --ignore-path ../../../.prettierignore",
		"clean": "rimraf --glob dist lib \"**/*.tsbuildinfo\" \"**/*.build.log\" nyc",
		"dev": "npm run webpack:dev",
		"eslint": "eslint --format stylish src",
		"eslint:fix": "eslint --format stylish src --fix --fix-type problem,suggestion,layout",
		"format": "npm run format:biome",
		"format:biome": "biome check . --formatter-enabled=true --apply",
		"format:prettier": "prettier --write . --cache --ignore-path ../../../.prettierignore",
		"lint": "fluid-build . --task lint",
		"lint:fix": "fluid-build . --task eslint:fix --task format",
		"prepack": "npm run webpack",
		"start": "webpack serve",
		"start:test": "webpack serve --config webpack.test.cjs",
		"test": "npm run test:jest",
		"test:jest": "jest",
		"test:jest:verbose": "cross-env FLUID_TEST_VERBOSE=1 jest",
		"webpack": "webpack --env production",
		"webpack:dev": "webpack --env development"
	},
	"dependencies": {
		"@fluentui/react-components": "^9.47.5",
		"@fluentui/react-icons": "^2.0.233",
		"@fluid-example/clicker": "workspace:~",
		"@fluid-example/codemirror": "workspace:~",
		"@fluid-example/collaborative-textarea": "workspace:~",
		"@fluid-example/example-utils": "workspace:~",
		"@fluid-example/multiview-coordinate-model": "workspace:~",
		"@fluid-example/multiview-slider-coordinate-view": "workspace:~",
		"@fluid-example/prosemirror": "workspace:~",
		"@fluidframework/aqueduct": "workspace:~",
		"@fluidframework/container-definitions": "workspace:~",
		"@fluidframework/container-runtime-definitions": "workspace:~",
		"@fluidframework/core-interfaces": "workspace:~",
		"@fluidframework/datastore-definitions": "workspace:~",
		"@fluidframework/runtime-definitions": "workspace:~",
		"@fluidframework/runtime-utils": "workspace:~",
		"prop-types": "^15.8.1",
		"react": "^17.0.1",
		"react-collapsible": "^2.7.0",
		"react-dom": "^17.0.1",
		"react-grid-layout": "^0.18.3",
		"scheduler": "^0.20.0",
		"uuid": "^9.0.0"
	},
	"devDependencies": {
		"@biomejs/biome": "^1.7.3",
		"@fluid-tools/build-cli": "^0.39.0",
		"@fluidframework/build-common": "^2.0.3",
		"@fluidframework/build-tools": "^0.39.0",
		"@fluidframework/eslint-config-fluid": "^5.3.0",
		"@fluidframework/test-tools": "^1.0.195075",
		"@types/jest": "29.5.3",
		"@types/jest-environment-puppeteer": "workspace:~",
		"@types/node": "^18.19.0",
		"@types/prop-types": "^15",
		"@types/react": "^17.0.44",
		"@types/react-dom": "^17.0.18",
		"@types/uuid": "^9.0.2",
		"copyfiles": "^2.4.1",
		"cross-env": "^7.0.3",
		"css-loader": "^6.11.0",
		"eslint": "~8.55.0",
		"expect-puppeteer": "^9.0.2",
		"html-loader": "^3.1.0",
		"html-webpack-plugin": "^5.5.0",
		"jest": "^29.6.2",
		"jest-environment-puppeteer": "^9.0.2",
		"jest-junit": "^10.0.0",
		"jest-puppeteer": "^9.0.2",
		"prettier": "~3.0.3",
		"process": "^0.11.10",
		"puppeteer": "^22.2.0",
		"rimraf": "^4.4.0",
		"sass-loader": "^7.1.0",
		"style-loader": "^1.0.0",
		"ts-loader": "^9.3.0",
		"typescript": "~5.4.5",
		"url-loader": "^2.1.0",
		"webpack": "^5.82.0",
		"webpack-cli": "^4.9.2",
		"webpack-dev-server": "~4.15.1",
		"webpack-merge": "^5.8.0"
	},
	"fluid": {
		"browser": {
			"umd": {
				"files": [
					"dist/main.bundle.js"
				],
				"library": "main"
			}
		}
	},
	"typeValidation": {
		"disabled": true,
		"broken": {}
	}
}
