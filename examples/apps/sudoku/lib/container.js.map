{"version":3,"file":"container.js","sourceRoot":"","sources":["../src/container.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,2CAA2C,EAAE,MAAM,0BAA0B,CAAC;AACvF,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG,IAAI,2CAA2C,CAC1E,WAAW,CAAC,gBAAgB,EAC5B,IAAI,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,gBAAgB,EAAE,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CACvF,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ContainerRuntimeFactoryWithDefaultDataStore } from \"@fluidframework/aqueduct\";\nimport { FluidSudoku } from \"./fluidSudoku\";\n\n/**\n * This does setup for the Container. The ContainerRuntimeFactoryWithDefaultDataStore also enables dynamic loading in the\n * EmbeddedComponentLoader.\n *\n * There are two important things here:\n * 1. Default Component name\n * 2. Map of string to factory for all components\n */\nexport const SudokuContainer = new ContainerRuntimeFactoryWithDefaultDataStore(\n    FluidSudoku.ObjectIdentifier,\n    new Map([[FluidSudoku.ObjectIdentifier, Promise.resolve(FluidSudoku.getFactory())]])\n);\n"]}