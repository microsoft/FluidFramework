{"version":3,"file":"utils.js","sourceRoot":"","sources":["utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// Utility to fetch elements by ID\nexport const id = (elementId: string): HTMLElement => (document.getElementById(elementId));\n\nexport function makeElementVisible(elem, visible) {\n    elem.style.display = visible ? \"block\" : \"none\";\n}\n\n// Convenience function used by color converters.\nexport function byteHex(num: number) {\n    let hex = num.toString(16);\n    if (hex.length === 1) {\n        hex = `0${hex}`;\n    }\n    return hex;\n}\n\n// -----------------------------------------\n// Color Wrangling\n// -----------------------------------------\n\nexport interface IColor {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n}\n\n// eslint-disable-next-line max-len\nexport const toColorStringNoAlpha = (color: IColor) => `#${byteHex(color.r * 255)}${byteHex(color.g * 255)}${byteHex(color.b * 255)}`;\n\n/**\n * Converts an RGB component in the range [0,1] to [0,255]\n */\nconst toRGBInteger = (value: number) => Math.round(value * 255);\n\n/**\n * Converts the provided color to a rgba CSS color string\n */\nexport function toColorString(color: IColor) {\n    const r = toRGBInteger(color.r);\n    const g = toRGBInteger(color.g);\n    const b = toRGBInteger(color.b);\n    return `rgba(${r}, ${g}, ${b}, ${color.a})`;\n}\n\n// Helper function to support HTML hexColor Strings\nexport function hexStrToRGBA(hexStr: string): IColor {\n    let _hexStr = hexStr;\n    // RGBA color object\n    const colorObject: IColor = { r: 1, g: 1, b: 1, a: 1 };\n\n    // Remove hash if it exists\n    _hexStr = _hexStr.replace(\"#\", \"\");\n\n    if (_hexStr.length === 6) {\n        // No Alpha\n        colorObject.r = parseInt(_hexStr.slice(0, 2), 16) / 255;\n        colorObject.g = parseInt(_hexStr.slice(2, 4), 16) / 255;\n        colorObject.b = parseInt(_hexStr.slice(4, 6), 16) / 255;\n        colorObject.a = parseInt(\"0xFF\", 16) / 255;\n    } else if (_hexStr.length === 8) {\n        // Alpha\n        colorObject.r = parseInt(_hexStr.slice(0, 2), 16) / 255;\n        colorObject.g = parseInt(_hexStr.slice(2, 4), 16) / 255;\n        colorObject.b = parseInt(_hexStr.slice(4, 6), 16) / 255;\n        colorObject.a = parseInt(_hexStr.slice(6, 8), 16) / 255;\n    } else if (_hexStr.length === 3) {\n        // Shorthand hex color\n        const rVal = _hexStr.slice(0, 1);\n        const gVal = _hexStr.slice(1, 2);\n        const bVal = _hexStr.slice(2, 3);\n        colorObject.r = parseInt(rVal + rVal, 16) / 255;\n        colorObject.g = parseInt(gVal + gVal, 16) / 255;\n        colorObject.b = parseInt(bVal + bVal, 16) / 255;\n    } else {\n        throw new Error(`Invalid HexString length: ${_hexStr.length}. Expected HexString length is either 8, 6, or 3.`);\n    }\n    return colorObject;\n}\n\n// Convert from the few color names used in this app to Windows.UI.Input.Inking\"s color code.\n// If it isn\"t one of those, then decode the hex string.  Otherwise return gray.\n// The alpha component is always set to full (255).\nexport function toColorStruct(color: string): IColor {\n    switch (color) {\n        // Ink colors\n        case \"Black\": return { r: 0x00, g: 0x00, b: 0x00, a: 0xff };\n        case \"Blue\": return { r: 0x00, g: 0x00, b: 0xff, a: 0xff };\n        case \"Red\": return { r: 0xFF, g: 0x00, b: 0x00, a: 0xff };\n        case \"Green\": return { r: 0x00, g: 0xff, b: 0x00, a: 0xff };\n        // Highlighting colors\n        case \"Yellow\": return { r: 0xff, g: 0xff, b: 0x00, a: 0xff };\n        case \"Aqua\": return { r: 0x66, g: 0xcd, b: 0xaa, a: 0xff };\n        case \"Lime\": return { r: 0x00, g: 0xff, b: 0x00, a: 0xff };\n        // Select colors\n        case \"Gold\": return { r: 0xff, g: 0xd7, b: 0x00, a: 0xff };\n        case \"White\": return { r: 0xFF, g: 0xff, b: 0xff, a: 0xff };\n        default:\n            return hexStrToRGBA(color);\n    }\n}\n\n// ----------------------------------------------------------------------\n// URL/Path parsing stuff\n// ----------------------------------------------------------------------\nexport function breakFilePath(path) {\n    const m = path.match(/(.*)[/\\\\]([^/\\\\]+)\\.(\\w+)/);\n    if (m) {\n        return { source: m[0], path: m[1], filename: m[2], ext: m[3] };\n    } else {\n        return { source: m[0], path: \"\", filename: \"\", ext: \"\" };\n    }\n}\n\nexport function parseURL(url) {\n    const a = document.createElement(\"a\");\n    a.href = url;\n    const parts = breakFilePath(a.pathname);\n    return {\n        ext: parts.ext,\n        file: parts.filename,\n        hash: a.hash.replace(\"#\", \"\"),\n        host: a.hostname,\n        params: () => {\n            const ret = {};\n            const seg = a.search.replace(/^\\?/, \"\").split(\"&\");\n            const len = seg.length;\n            let i = 0;\n            let s;\n            for (; i < len; i++) {\n                if (!seg[i]) { continue; }\n                s = seg[i].split(\"=\");\n                ret[s[0]] = s[1];\n            }\n            return ret;\n        },\n        path: parts.path,\n        port: a.port,\n        protocol: a.protocol.replace(\":\", \"\"),\n        query: a.search,\n        segments: parts.path.replace(/^\\//, \"\").split(\"/\"),\n        source: url,\n    };\n}\n\n// Following recomendations of https://developer.mozilla.org/en-US/docs/Web/Events/resize to\n// throttle computationally expensive events\nexport function throttle(type: string, name: string, obj?: any) {\n    let _obj = obj;\n    _obj = _obj || window;\n    let running = false;\n    _obj.addEventListener(\n        type,\n        () => {\n            if (running) {\n                return;\n            }\n\n            running = true;\n            requestAnimationFrame(() => {\n                _obj.dispatchEvent(new CustomEvent(name));\n                running = false;\n            });\n        });\n}\n\n/**\n * Helper class that throttles calling the provided callback based on\n * an animation frame timer\n */\nexport class AnimationFrameThrottler {\n    private running = false;\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    constructor(private readonly callback: Function) {\n    }\n\n    public trigger(): void {\n        if (this.running) {\n            return;\n        }\n\n        this.running = true;\n        requestAnimationFrame(() => {\n            this.callback();\n            this.running = false;\n        });\n    }\n}\n\nexport function removeAllChildren(element: HTMLElement) {\n    // Remove any existing children and attach ourselves\n    while (element.hasChildNodes()) {\n        element.removeChild(element.lastChild);\n    }\n}\n"]}