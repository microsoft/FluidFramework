{
	// Use IntelliSense to learn about possible Node.js debug attributes.
	// Hover to view descriptions of existing attributes.
	// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
	"version": "0.2.0",
	"configurations": [
		{
			// Update /build-tools/packages/bundle-size-tools/src/utilities/gitCommands.ts to your remote (i.e. upstream instead of main)
			// Don't forget to run `npm run bundle-analysis:collect`
			// Reminder, update the command values
			"command": "npx danger pr https://github.com/microsoft/FluidFramework/pull/{A-RECENT-PR-HERE} -d {WORKSPACE WITH /'s}/build-tools/packages/build-tools/dist/bundleSizeAnalysis/dangerfile.js",
			"name": "bundleSizeAnalysis",
			"request": "launch",
			"type": "node-terminal",
			"env": {
				// Your ADO PAT (Personal Access Token) User settings > Personal Access Tokens > New Token (check read permissions, likely Build, Release, Packaging, and Test Management)
				"ADO_API_TOKEN": "",
				// Your Github PAT (Personal Access Token) Your Icon > Settings > Developer settings > Personal Access Tokens > Fine-grained tokens (Public Repositories (read-only) should be enough)
				"DANGER_GITHUB_API_TOKEN": "",
				"TARGET_BRANCH_NAME": "main",
			},
		},
		{
			"name": "npm test build-cli",
			"cwd": "${workspaceFolder}/build-tools/packages/build-cli",
			"request": "launch",
			"runtimeArgs": ["run-script", "test"],
			"runtimeExecutable": "npm",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
		},
		{
			"name": "fluid-build",
			"program": "${workspaceFolder}/build-tools/packages/build-tools/bin/fluid-build",
			"cwd": "${workspaceFolder}/packages/common/container-definitions",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": [".", "--task", "build"],
		},
		{
			"name": "flub",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["release", "-g", "client", "-v", "--no-policyCheck"],
		},
		{
			"name": "flub check policy",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["check", "policy"],
		},
		{
			"name": "flub check policy --fix",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["check", "policy", "--fix", "-v", "--excludeHandler", "assert-short-codes"],
		},
		{
			"name": "flub generate bundleStats",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["generate", "bundleStats", "-v"],
		},
		{
			"name": "flub generate packlist",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["generate", "packlist", "-g", "build-tools", "-v"],
		},
		{
			// Runs the `flub release report --all` command with a debugger attached.
			"name": "flub release report",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["release", "report", "-g", "build-tools", "-v"],
		},
		{
			// Runs the `flub release fromTag build-tools_v0.26.1` command with a debugger attached.
			"name": "flub release fromTag build-tools_v0.26.1",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["release", "fromTag", "build-tools_v0.26.1", "--json"],
		},
		{
			// Runs the `flub list --private` command with a debugger attached.
			"name": "flub list",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["list", "--private", "-g", "build-tools", "-v"],
		},
		{
			// Runs the `flub modify fluid-imports` command with a debugger attached.
			"name": "flub modify fluid-imports",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}/packages/framework/aqueduct",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["modify", "fluid-imports", "-v"],
		},
		{
			// Runs the `flub generate upcoming` command with a debugger attached.
			"name": "flub generate upcoming",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["generate", "upcoming", "-g", "client", "-v"],
		},
		{
			// Runs the `flub generate changeset` command with a debugger attached.
			"name": "flub generate changeset",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}/build-tools",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["generate", "changeset", "-v", "-b", "main"],
		},
		{
			// Runs the `flub exec` command with a debugger attached.
			"name": "flub exec",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}/build-tools",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
		},
		{
			// Runs the `flub test-only-filter` command with a debugger attached.
			"name": "flub test-only-filter",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}/build-tools",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["test-only-filter", "--all"],
		},
		{
			"name": "flub bump deps",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": [
				"bump",
				"deps",
				"build-tools",
				"--updateChecker",
				"homegrown",
				"--prerelease",
				"--no-commit",
				"--no-install",
			],
		},
		{
			"name": "flub generate typetests",
			"program": "${workspaceFolder}/build-tools/packages/build-cli/bin/dev.js",
			"cwd": "${workspaceFolder}",
			// It's sometimes useful to run this command on a single package during debugging
			// "cwd": "${workspaceFolder}/packages/dds/sequence",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": ["generate", "typetests", "--dir", "."],
		},
		{
			"name": "fluid-type-test-generator",
			"program": "${workspaceFolder}/build-tools/packages/build-tools/bin/fluid-type-test-generator",
			"cwd": "${workspaceFolder}",
			// It's sometimes useful to run this command on a single package during debugging
			// "cwd": "${workspaceFolder}/packages/dds/sequence",
			"request": "launch",
			"skipFiles": ["<node_internals>/**"],
			"type": "node",
			"args": [],
		},
		{
			"type": "node",
			"request": "attach",
			"name": "Attach by Process ID",
			"processId": "${command:PickProcess}",
		},
		{
			"type": "node",
			"request": "launch",
			"name": "Matrix Bench",
			"cwd": "${workspaceFolder}/packages/dds/matrix/bench",
			"args": [
				"-r",
				"ts-node/register",
				"-r",
				"source-map-support/register",
				"src/index.ts",
				"--runInBand",
			],
			"env": {
				"TS_NODE_PROJECT": "tsconfig.json",
			},
			// "skipFiles": ["<node_internals>/**"],
			"console": "integratedTerminal",
			"smartStep": true,
		},
		{
			"type": "node",
			"request": "launch",
			"name": "Mocha Tests",
			"cwd": "${workspaceFolder}/",
			"program": "${workspaceFolder}/common/tools/node_modules/mocha/bin/_mocha",
			"args": ["--recursive", "dist/test/", "--grep Checked"],
			"internalConsoleOptions": "openOnSessionStart",
		},
		{
			"name": "Chrome",
			"type": "chrome",
			"request": "attach",
			"port": 9222,
			"sourceMaps": true,
			"url": "localhost:3000/sharedText/oct18-3",
			"pathMapping": {
				"/public/scripts/dist/src/": "${workspaceFolder}/dist",
			},
		},
		{
			"type": "node",
			"request": "attach",
			"sourceMaps": true,
			"protocol": "inspector",
			"name": "Mocha attach",
			"port": 9229,
		},
		{
			"type": "node",
			"request": "launch",
			"name": "Beast",
			"sourceMaps": true,
			"outFiles": ["${workspaceFolder}/dist/**/*.js"],
			"protocol": "inspector",
			"program": "${workspaceFolder}/dist/test/merge-tree/beastTest.js",
		},
		{
			"type": "node",
			"request": "launch",
			"name": "Farm",
			"sourceMaps": true,
			"outFiles": ["${workspaceFolder}/packages/runtime/sequence/dist/test/*.js"],
			"protocol": "inspector",
			"program": "${workspaceFolder}/packages/runtime/sequence/dist/test/testFarm.js",
		},
		{
			"type": "node",
			"request": "attach",
			"name": "Attach to alfred",
			"address": "localhost",
			"port": 5858,
			"restart": true,
			"sourceMaps": true,
			"localRoot": "${workspaceFolder}/server/routerlicious",
			"remoteRoot": "/usr/src/server",
			"protocol": "inspector",
			"trace": "sm",
		},
		{
			"type": "node",
			"request": "attach",
			"name": "Attach to riddler",
			"address": "localhost",
			"port": 5865,
			"restart": true,
			"sourceMaps": true,
			"localRoot": "${workspaceFolder}/server/routerlicious",
			"remoteRoot": "/usr/src/server",
			"protocol": "inspector",
			"trace": "sm",
		},
		{
			"type": "node",
			"request": "attach",
			"name": "Attach to deli",
			"address": "localhost",
			"port": 5859,
			"restart": true,
			"sourceMaps": true,
			"localRoot": "${workspaceFolder}/server/routerlicious",
			"remoteRoot": "/usr/src/server",
			"outFiles": ["${workspaceFolder}/dist/**/*.js"],
			"protocol": "inspector",
			"trace": "sm",
		},
		{
			"type": "node",
			"request": "attach",
			"name": "Attach to scriptorium",
			"address": "localhost",
			"port": 5860,
			"restart": true,
			"sourceMaps": true,
			"localRoot": "${workspaceFolder}/server/routerlicious",
			"remoteRoot": "/usr/src/server",
			"outFiles": ["${workspaceFolder}/dist/**/*.js"],
			"protocol": "inspector",
			"trace": "sm",
		},
		{
			"type": "node",
			"request": "attach",
			"name": "Attach to copier",
			"address": "localhost",
			"port": 5861,
			"restart": true,
			"sourceMaps": true,
			"localRoot": "${workspaceFolder}/server/routerlicious",
			"remoteRoot": "/usr/src/server",
			"outFiles": ["${workspaceFolder}/dist/**/*.js"],
			"protocol": "inspector",
			"trace": "sm",
		},
		{
			"type": "node",
			"request": "launch",
			"name": "Debug Current Mocha Test (auto build)",
			"env": {
				// "fluid__test__driver": "odsp", //values: local, tinylicious, routerlicious, odsp,
				// "fluid__test__backCompat": "FULL", //values: FULL This tests loader-driver compatibility for describeCompat tests
				// "fluid__test__odspEndpointName": "odsp-df", //values: odsp, odsp-df
				// "FLUID_TEST_VERBOSE": "1",
			},
			"runtimeExecutable": "${workspaceFolder}/node_modules/.bin/mocha",
			"windows": {
				"runtimeExecutable": "${workspaceFolder}/node_modules/.bin/mocha.cmd",
			},
			"sourceMaps": true,
			"program": "${file}",
			"args": [
				// "--fgrep",               // Uncomment to filter by test case name
				// "<test case name>",
				"--no-timeouts",
				"--exit",
			],
			"cwd": "${fileDirname}",
			"skipFiles": ["<node_internals>/**", "**/node_modules/**"],
			"outFiles": [
				// This config avoids loading dependent packages' test files, while using the same technique
				// as the "Debug Current Mocha Test (*)" config to load source maps for test files in the current
				// package.
				// This reduces the number of source files VSCode needs to load to debug the e2e tests
				// considerably, which decreases the time it takes to start debugging.
				"${workspaceFolder}/**/lib/**/!(*.spec,*.test,*.tests).js",
				"${fileDirname}/../../lib/**/*.js",
				"${fileDirname}/../../../lib/**/*.js",
				"${fileDirname}/../../../../lib/**/*.js",
				"${workspaceFolder}/**/dist/**/!(*.spec,*.test,*.tests).js",
				"${fileDirname}/../../dist/**/*.js",
				"${fileDirname}/../../../dist/**/*.js",
				"${fileDirname}/../../../../dist/**/*.js",
				// e2e tests load ESM modules since test-end-to-end-tests specifies "type": "module" in its package.json.
				// This ensures that source maps are loaded for those files as well (e.g. so putting a breakpoint in
				// containerRuntime.ts while debugging a test in test-end-to-end-tests works)
				"${workspaceFolder}/**/lib/**/!(*.spec,*.test,*.tests).mjs",
				"${fileDirname}/../../lib/**/*.mjs",
				"${fileDirname}/../../../lib/**/*.mjs",
				"${fileDirname}/../../../../lib/**/*.mjs",
			],
			"preLaunchTask": "Build Current Tests",
			"internalConsoleOptions": "openOnSessionStart",
		},
		{
			"type": "node",
			"request": "launch",
			"name": "Debug Current Mocha Test (ESM-lib;no build)",
			"env": {
				// "fluid__test__driver": "odsp", //values: local, tinylicious, routerlicious, odsp,
				// "fluid__test__backCompat": "FULL", //values: FULL This tests loader-driver compatibility for describeCompat tests
				// "fluid__test__odspEndpointName": "odsp", //values: odsp, odsp-df
				// "FLUID_TEST_VERBOSE": "1",
			},
			"program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
			"stopOnEntry": false,
			"sourceMaps": true,
			"args": [
				"--no-timeouts",
				"--exit",
				"../../lib/test/${fileBasenameNoExtension}.js",
				"../../../lib/test/**/${fileBasenameNoExtension}.js",
				"../../../../lib/test/**/${fileBasenameNoExtension}.js",
			],
			"cwd": "${fileDirname}",
			// These skipped files contain exceptions that are consistently thrown during test setup
			// You can comment out this part if you want to debug these files
			"skipFiles": [
				"<node_internals>/**",
				// @fluid-internal/mocha-test-setup is resolved first using esm resolution algorithm first before cjs resolution algorithm (require)
				"**/node_modules/mocha/lib/nodejs/esm-utils.js",
				// We pass multiple glob patterns to mocha (as seen above) to look for the correct spec file to debug
				// Two of these will always throw file not found error, so we skip them here
				"**/node_modules/mocha/lib/cli/lookup-files.js",
				// There's an empty catch here for CommonJS default export support
				"**/node_modules/uuid/dist/v35.js",
				// test-version-utils checks for valid semver version first and handles ranges seperately.
				"**/node_modules/semver/classes/semver.js",
			],
			"outFiles": [
				"${fileDirname}/../../lib/**/*.js",
				"${fileDirname}/../../../lib/**/*.js",
				"${fileDirname}/../../../../lib/**/*.js",
			],
		},
		{
			"type": "node",
			"request": "launch",
			"name": "Debug Current Mocha Test (CommonJS-dist;no build)",
			"env": {
				// "fluid__test__driver": "odsp", //values: local, tinylicious, routerlicious, odsp,
				// "fluid__test__backCompat": "FULL", //values: FULL This tests loader-driver compatibility for describeCompat tests
				// "fluid__test__odspEndpointName": "odsp", //values: odsp, odsp-df
				// "FLUID_TEST_VERBOSE": "1",
			},
			"program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
			"stopOnEntry": false,
			"sourceMaps": true,
			"args": [
				"--no-timeouts",
				"--exit",
				"../../dist/test/${fileBasenameNoExtension}.js",
				"../../../dist/test/**/${fileBasenameNoExtension}.js",
				"../../../../dist/test/**/${fileBasenameNoExtension}.js",
			],
			"cwd": "${fileDirname}",
			"outFiles": [
				"${fileDirname}/../../dist/**/*.js",
				"${fileDirname}/../../../dist/**/*.js",
				"${fileDirname}/../../../../dist/**/*.js",
			],
		},
		{
			"type": "node",
			"request": "launch",
			"name": "Debug Current Jest Test (JS)",
			"program": "${workspaceRoot}/node_modules/jest/bin/jest.js",
			"cwd": "${fileDirname}/..",
			"args": ["--verbose", "-i", "--no-cache", "${file}"],
			"console": "integratedTerminal",
			"internalConsoleOptions": "neverOpen",
		},
	],
}
