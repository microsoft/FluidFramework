{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.tsx"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EACH,sBAAsB,GACzB,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAGH,aAAa,EAEb,eAAe,GAClB,MAAM,uBAAuB,CAAC;AAC/B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,QAAQ,MAAM,WAAW,CAAC;AAEtC,qGAAqG;AACrG,MAAM,GAAG,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACvC,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAG,CAAC,IAAc,CAAC;AAiBxD,SAAS,sBAAsB,CAC3B,KAGC;IAED,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,aAAa,CAGrC,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IAEvB,OAAO,CACH;QACI,8BAAM,SAAS,EAAC,OAAO,IAClB,KAAK,CAAC,KAAK,CACT;QACP,gCACI,OAAO,EAAE,GAAG,EAAE;gBACV,QAAQ,iCAAM,KAAK,KAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,IAAG,CAAC;YACnD,CAAC,QAGI,CACP,CACT,CAAC;AACN,CAAC;AAED;;GAEG;AACH,MAAM,OAAO,iBAAkB,SAAQ,eAAe;IAClD,YAAY,KAAK;QACb,KAAK,CAAC,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,SAAS,CACV,oBAAoB,EACpB;YACI,aAAa,EAAE,oBAAoB;YACnC,WAAW,EAAG,IAAI,GAAG,CAAC;gBAClB;oBACI,OAAO,EAAE;wBACL,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE,OAAO;qBACnB;iBACJ;aACJ,CAAC;YACF,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;SACjC,CACJ,CAAC;IACN,CAAC;IACD;;OAEG;IACI,MAAM,CAAC,GAAgB;QAC1B,QAAQ,CAAC,MAAM,CACX;YACI,oBAAC,sBAAsB,IACnB,aAAa,EAAE,oBAAoB,EACnC,eAAe,EAAE,IAAI,GACvB,CACA,EACN,GAAG,CACN,CAAC;QACF,OAAO,GAAG,CAAC;IACf,CAAC;CAGJ;AAED,4BAA4B;AAC5B,MAAM,CAAC,MAAM,qCAAqC,GAAG,IAAI,sBAAsB,CAC3E,qBAAqB,EACrB,iBAAiB,EACjB,EAAE,EACF,EAAE,CACL,CAAC;AACF,MAAM,CAAC,MAAM,WAAW,GAAG,qCAAqC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    PrimedComponentFactory,\n} from \"@fluidframework/aqueduct\";\nimport {\n    IFluidProps,\n    IFluidFunctionalComponentViewState,\n    useStateFluid,\n    IFluidFunctionalComponentFluidState,\n    SyncedComponent,\n} from \"@fluidframework/react\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\n// eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\nconst pkg = require(\"../package.json\");\nexport const ClickerFunctionalName = pkg.name as string;\n\n// ----- REACT STUFF -----\n\ninterface ICounterState {\n    value: number;\n}\n\n// // ---- React Functional Component w/ useState ----\n\ninterface ICounterFunctionalViewState\n    extends IFluidFunctionalComponentViewState,\n    ICounterState {}\ninterface ICounterFunctionalFluidState\n    extends IFluidFunctionalComponentFluidState,\n    ICounterState {}\n\nfunction CounterReactFunctional(\n    props: IFluidProps<\n    ICounterFunctionalViewState,\n    ICounterFunctionalFluidState\n    >,\n) {\n    const [state, setState] = useStateFluid<\n    ICounterFunctionalViewState,\n    ICounterFunctionalFluidState\n    >(props, { value: 0 });\n\n    return (\n        <div>\n            <span className=\"value\">\n                {state.value}\n            </span>\n            <button\n                onClick={() => {\n                    setState({ ...state, value: state.value + 1 });\n                }}\n            >\n                +\n            </button>\n        </div>\n    );\n}\n\n/**\n * Basic ClickerFunctional example showing Clicker as a React Functional component\n */\nexport class ClickerFunctional extends SyncedComponent {\n    constructor(props) {\n        super(props);\n\n        this.setConfig<ICounterState>(\n            \"counter-functional\",\n            {\n                syncedStateId: \"counter-functional\",\n                fluidToView:  new Map([\n                    [\n                        \"value\", {\n                            type: \"number\",\n                            viewKey: \"value\",\n                        },\n                    ],\n                ]),\n                defaultViewState: { value: 0 },\n            },\n        );\n    }\n    /**\n     * Will return a new ClickerFunctional view\n     */\n    public render(div: HTMLElement) {\n        ReactDOM.render(\n            <div>\n                <CounterReactFunctional\n                    syncedStateId={\"counter-functional\"}\n                    syncedComponent={this}\n                />\n            </div>,\n            div,\n        );\n        return div;\n    }\n\n    // #endregion IComponentHTMLView\n}\n\n// ----- FACTORY SETUP -----\nexport const ClickerFunctionalInstantiationFactory = new PrimedComponentFactory(\n    ClickerFunctionalName,\n    ClickerFunctional,\n    [],\n    {},\n);\nexport const fluidExport = ClickerFunctionalInstantiationFactory;\n"]}