{
	"$schema": "https://developer.microsoft.com/json-schemas/api-extractor/v7/api-extractor.schema.json",
	"extends": "./api-extractor-base.esm.json",
	"mainEntryPointFilePath": "<projectFolder>/lib/legacy.d.ts",
	"apiReport": {
		"reportFileName": "<unscopedPackageName>.legacy",
		"reportVariants": ["public", "alpha"] // "beta" is not included to reduce noise
	},
	"docModel": {
		"enabled": false
	},
	// Assume all projects use a "current" report and don't need tsdocMetadata generated a
	// second time via "legacy" report.
	"tsdocMetadata": {
		"enabled": false
	},
	"messages": {
		"extractorMessageReporting": {
			// Since we generate API reports for different release levels, it is possible (and valid) for `@link` tags
			// to reference an API item that won't be visible at that level.
			// For example, a public API may note that a newer feature is available in a beta release and link to that item.
			// We want that to be possible, so we suppress this error for report generation.
			// It will be enabled for `model` generation, which is used for generating API documentation for the entire suite.
			"ae-unresolved-link": {
				"logLevel": "none",
				"addToApiReportFile": false
			}
		}
	}
}
