/*
	This configuration is specifically constructed to be used as a "linter" configuration.
	It runs api-extractor in a mode where all other fluid packages are bundled in its analysis.
	Here we are specifically looking to ensure that cross-package references are release-tag-compatible.
*/
{
	"$schema": "https://developer.microsoft.com/json-schemas/api-extractor/v7/api-extractor.schema.json",
	"compiler": {
		"tsconfigFilePath": "<projectFolder>/tsconfig.json"
	},
	"mainEntryPointFilePath": "<projectFolder>/dist/index.d.ts",

	"apiReport": {
		// Don't generate API report in lint pass
		"enabled": false
	},
	"docModel": {
		// Don't generate doc-model in lint pass
		"enabled": false
	},
	"dtsRollup": {
		// Don't generate rollups in lint pass
		"enabled": false
	},
	"tsdocMetadata": {
		// Don't generate docs metadata in lint pass
		"enabled": false
	},
	"messages": {
		"extractorMessageReporting": {
			"default": {
				// Disable rules by default. We will enable specific rules we want to enforce in the linter pass below.
				"logLevel": "none"
			},

			// This is the primary error we are looking for with the linter pass.
			// Ensure that release tags of API members are compatible **across package boundaries**.
			"ae-incompatible-release-tags": {
				"logLevel": "error",
				"addToApiReportFile": false // Fail build
			}
		}
	},
	// Bundle local dependencies so we can validate cross-package relationships
	"bundledPackages": [
		"@fluidframework/.*",
		"@fluid-internal/.*",
		"@fluid-experimental/.*",
		"@fluid-private/.*",
		"@fluid-tools/.*",
		"fluid-framework"
	]
}
