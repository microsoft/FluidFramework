{
	"projectFolder": "/workspaces/FluidFramework/experimental/dds/tree2",
	"packageJson": {
		"dependencies": {
			"@fluid-internal/client-utils": "workspace:~",
			"@fluidframework/container-runtime": "workspace:~",
			"@fluidframework/core-interfaces": "workspace:~",
			"@fluidframework/core-utils": "workspace:~",
			"@fluidframework/datastore-definitions": "workspace:~",
			"@fluidframework/protocol-definitions": "^1.1.0",
			"@fluidframework/runtime-definitions": "workspace:~",
			"@fluidframework/runtime-utils": "workspace:~",
			"@fluidframework/shared-object-base": "workspace:~",
			"@sinclair/typebox": "^0.29.4",
			"@ungap/structured-clone": "^1.2.0",
			"sorted-btree": "^1.8.0",
			"uuid": "^9.0.0"
		},
		"description": "Tree",
		"devDependencies": {
			"@fluid-internal/stochastic-test-utils": "workspace:~",
			"@fluid-internal/test-dds-utils": "workspace:~",
			"@fluid-internal/test-drivers": "workspace:~",
			"@fluid-tools/benchmark": "^0.48.0",
			"@fluid-tools/build-cli": "^0.22.0",
			"@fluidframework/build-common": "^2.0.0",
			"@fluidframework/build-tools": "^0.22.0",
			"@fluidframework/container-definitions": "workspace:~",
			"@fluidframework/container-loader": "workspace:~",
			"@fluidframework/eslint-config-fluid": "^2.1.0",
			"@fluidframework/mocha-test-setup": "workspace:~",
			"@fluidframework/telemetry-utils": "workspace:~",
			"@fluidframework/test-runtime-utils": "workspace:~",
			"@fluidframework/test-utils": "workspace:~",
			"@microsoft/api-extractor": "^7.34.4",
			"@types/diff": "^3.5.1",
			"@types/easy-table": "^0.0.32",
			"@types/mocha": "^9.1.1",
			"@types/node": "^16.18.38",
			"@types/ungap__structured-clone": "^0.3.0",
			"@types/uuid": "^9.0.2",
			"c8": "^7.7.1",
			"copyfiles": "^2.4.1",
			"cross-env": "^7.0.3",
			"diff": "^3.5.0",
			"easy-table": "^1.1.1",
			"eslint": "~8.6.0",
			"eslint-config-prettier": "~8.5.0",
			"good-fences": "^1.1.1",
			"mocha": "^10.2.0",
			"mocha-json-output-reporter": "^2.0.1",
			"mocha-multi-reporters": "^1.5.1",
			"moment": "^2.21.0",
			"prettier": "~2.6.2",
			"rimraf": "^4.4.0",
			"typescript": "~4.5.5"
		},
		"homepage": "https://fluidframework.com",
		"license": "MIT",
		"main": "dist/index.js",
		"name": "@fluid-experimental/tree2",
		"scripts": {
			"bench": "mocha --timeout 999999 --perfMode --parentProcess --fgrep @Benchmark --reporter @fluid-tools/benchmark/dist/MochaReporter.js",
			"bench:profile": "mocha --v8-prof --timeout 999999 --perfMode --fgrep @Benchmark --reporter @fluid-tools/benchmark/dist/MochaReporter.js && node --prof-process isolate-0x*-v8.log > profile.txt && rm isolate-0x*-v8.log && cat profile.txt",
			"build": "fluid-build . --task build",
			"build:commonjs": "fluid-build . --task commonjs",
			"build:compile": "fluid-build . --task compile",
			"build:docs": "api-extractor run --local --typescript-compiler-folder ../../../node_modules/typescript && copyfiles -u 1 ./_api-extractor-temp/doc-models/* ../../../_api-extractor-temp/",
			"build:esnext": "tsc --project ./tsconfig.esnext.json",
			"build:test": "tsc --project ./src/test/tsconfig.json",
			"ci:build:docs": "api-extractor run --typescript-compiler-folder ../../../node_modules/typescript && copyfiles -u 1 ./_api-extractor-temp/* ../../../_api-extractor-temp/",
			"clean": "rimraf --glob 'dist' 'lib' '*.tsbuildinfo' '*.build.log' '_api-extractor-temp' 'nyc'",
			"eslint": "eslint --format stylish src",
			"eslint:fix": "eslint --format stylish src --fix --fix-type problem,suggestion,layout",
			"fence": "gf",
			"format": "npm run prettier:fix",
			"lint": "npm run prettier && npm run eslint",
			"lint:fix": "npm run prettier:fix && npm run eslint:fix",
			"postpack": "tar -cf ./experimental-tree2.test-files.tar ./src/test ./dist/test",
			"prettier": "prettier --check . --ignore-path ../../../.prettierignore",
			"prettier:fix": "prettier --write . --ignore-path ../../../.prettierignore",
			"test": "npm run test:mocha",
			"test:benchmark:report": "mocha --exit --perfMode --parentProcess --fgrep @Benchmark --reporter @fluid-tools/benchmark/dist/MochaReporter.js --timeout 60000",
			"test:coverage": "c8 npm test",
			"test:mocha": "mocha",
			"test:mocha:verbose": "cross-env FLUID_TEST_VERBOSE=1 npm run test:mocha",
			"test:stress": "cross-env FUZZ_TEST_COUNT=20 FUZZ_STRESS_RUN=true mocha --ignore 'dist/test/memory/**/*' --recursive 'dist/test/**/*.spec.js' -r @fluidframework/mocha-test-setup",
			"tsc": "tsc",
			"typetests:gen": "fluid-type-test-generator",
			"typetests:prepare": "flub typetests --dir . --reset --previous --normalize"
		},
		"typings": "dist/index.d.ts",
		"version": "2.0.0-internal.6.4.0"
	},
	"packageFolder": "/workspaces/FluidFramework/experimental/dds/tree2",
	"mainEntryPointFilePath": "/workspaces/FluidFramework/experimental/dds/tree2/dist/index.d.ts",
	"bundledPackages": [],
	"tsconfigFilePath": "/workspaces/FluidFramework/experimental/dds/tree2/tsconfig.json",
	"skipLibCheck": false,
	"apiReportEnabled": true,
	"reportFilePath": "/workspaces/FluidFramework/api-report/tree2.api.md",
	"reportTempFilePath": "/workspaces/FluidFramework/experimental/dds/tree2/_api-extractor-temp/tree2.api.md",
	"apiReportIncludeForgottenExports": false,
	"docModelEnabled": true,
	"apiJsonFilePath": "/workspaces/FluidFramework/_api-extractor-temp/doc-models/tree2.api.json",
	"docModelIncludeForgottenExports": false,
	"rollupEnabled": true,
	"untrimmedFilePath": "/workspaces/FluidFramework/experimental/dds/tree2/dist/tree2.d.ts",
	"alphaTrimmedFilePath": "/workspaces/FluidFramework/experimental/dds/tree2/dist/tree2.d.ts",
	"betaTrimmedFilePath": "/workspaces/FluidFramework/experimental/dds/tree2/dist/tree2-beta.d.ts",
	"publicTrimmedFilePath": "/workspaces/FluidFramework/experimental/dds/tree2/dist/tree2-public.d.ts",
	"omitTrimmingComments": false,
	"tsdocMetadataEnabled": true,
	"tsdocMetadataFilePath": "/workspaces/FluidFramework/experimental/dds/tree2/dist/tsdoc-metadata.json",
	"tsdocConfigFile": {
		"log": {
			"_messages": []
		},
		"_extendsFiles": [],
		"_filePath": "/workspaces/FluidFramework/build-tools/node_modules/.pnpm/@microsoft+api-extractor@7.36.1_@types+node@14.18.53/node_modules/@microsoft/api-extractor/extends/tsdoc-base.json",
		"_fileNotFound": false,
		"_hasErrors": false,
		"_fileMTime": 1693590878484.298,
		"_tsdocSchema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
		"_extendsPaths": [],
		"_tagDefinitions": [
			{
				"tagName": "@betaDocumentation",
				"tagNameWithUpperCase": "@BETADOCUMENTATION",
				"syntaxKind": 2,
				"standardization": "None",
				"allowMultiple": false
			},
			{
				"tagName": "@internalRemarks",
				"tagNameWithUpperCase": "@INTERNALREMARKS",
				"syntaxKind": 1,
				"standardization": "None",
				"allowMultiple": false
			},
			{
				"tagName": "@preapproved",
				"tagNameWithUpperCase": "@PREAPPROVED",
				"syntaxKind": 2,
				"standardization": "None",
				"allowMultiple": false
			}
		],
		"_tagDefinitionNames": {},
		"_supportForTags": {}
	},
	"tsdocConfiguration": {
		"_tagDefinitions": [
			{
				"tagName": "@alpha",
				"tagNameWithUpperCase": "@ALPHA",
				"syntaxKind": 2,
				"standardization": "Discretionary",
				"allowMultiple": false
			},
			{
				"tagName": "@beta",
				"tagNameWithUpperCase": "@BETA",
				"syntaxKind": 2,
				"standardization": "Discretionary",
				"allowMultiple": false
			},
			{
				"tagName": "@defaultValue",
				"tagNameWithUpperCase": "@DEFAULTVALUE",
				"syntaxKind": 1,
				"standardization": "Extended",
				"allowMultiple": false
			},
			{
				"tagName": "@decorator",
				"tagNameWithUpperCase": "@DECORATOR",
				"syntaxKind": 1,
				"standardization": "Extended",
				"allowMultiple": true
			},
			{
				"tagName": "@deprecated",
				"tagNameWithUpperCase": "@DEPRECATED",
				"syntaxKind": 1,
				"standardization": "Core",
				"allowMultiple": false
			},
			{
				"tagName": "@eventProperty",
				"tagNameWithUpperCase": "@EVENTPROPERTY",
				"syntaxKind": 2,
				"standardization": "Extended",
				"allowMultiple": false
			},
			{
				"tagName": "@example",
				"tagNameWithUpperCase": "@EXAMPLE",
				"syntaxKind": 1,
				"standardization": "Extended",
				"allowMultiple": true
			},
			{
				"tagName": "@experimental",
				"tagNameWithUpperCase": "@EXPERIMENTAL",
				"syntaxKind": 2,
				"standardization": "Discretionary",
				"allowMultiple": false
			},
			{
				"tagName": "@inheritDoc",
				"tagNameWithUpperCase": "@INHERITDOC",
				"syntaxKind": 0,
				"standardization": "Extended",
				"allowMultiple": false
			},
			{
				"tagName": "@internal",
				"tagNameWithUpperCase": "@INTERNAL",
				"syntaxKind": 2,
				"standardization": "Discretionary",
				"allowMultiple": false
			},
			{
				"tagName": "@label",
				"tagNameWithUpperCase": "@LABEL",
				"syntaxKind": 0,
				"standardization": "Core",
				"allowMultiple": false
			},
			{
				"tagName": "@link",
				"tagNameWithUpperCase": "@LINK",
				"syntaxKind": 0,
				"standardization": "Core",
				"allowMultiple": true
			},
			{
				"tagName": "@override",
				"tagNameWithUpperCase": "@OVERRIDE",
				"syntaxKind": 2,
				"standardization": "Extended",
				"allowMultiple": false
			},
			{
				"tagName": "@packageDocumentation",
				"tagNameWithUpperCase": "@PACKAGEDOCUMENTATION",
				"syntaxKind": 2,
				"standardization": "Core",
				"allowMultiple": false
			},
			{
				"tagName": "@param",
				"tagNameWithUpperCase": "@PARAM",
				"syntaxKind": 1,
				"standardization": "Core",
				"allowMultiple": true
			},
			{
				"tagName": "@privateRemarks",
				"tagNameWithUpperCase": "@PRIVATEREMARKS",
				"syntaxKind": 1,
				"standardization": "Core",
				"allowMultiple": false
			},
			{
				"tagName": "@public",
				"tagNameWithUpperCase": "@PUBLIC",
				"syntaxKind": 2,
				"standardization": "Discretionary",
				"allowMultiple": false
			},
			{
				"tagName": "@readonly",
				"tagNameWithUpperCase": "@READONLY",
				"syntaxKind": 2,
				"standardization": "Extended",
				"allowMultiple": false
			},
			{
				"tagName": "@remarks",
				"tagNameWithUpperCase": "@REMARKS",
				"syntaxKind": 1,
				"standardization": "Core",
				"allowMultiple": false
			},
			{
				"tagName": "@returns",
				"tagNameWithUpperCase": "@RETURNS",
				"syntaxKind": 1,
				"standardization": "Core",
				"allowMultiple": false
			},
			{
				"tagName": "@sealed",
				"tagNameWithUpperCase": "@SEALED",
				"syntaxKind": 2,
				"standardization": "Extended",
				"allowMultiple": false
			},
			{
				"tagName": "@see",
				"tagNameWithUpperCase": "@SEE",
				"syntaxKind": 1,
				"standardization": "Extended",
				"allowMultiple": false
			},
			{
				"tagName": "@throws",
				"tagNameWithUpperCase": "@THROWS",
				"syntaxKind": 1,
				"standardization": "Extended",
				"allowMultiple": true
			},
			{
				"tagName": "@typeParam",
				"tagNameWithUpperCase": "@TYPEPARAM",
				"syntaxKind": 1,
				"standardization": "Core",
				"allowMultiple": true
			},
			{
				"tagName": "@virtual",
				"tagNameWithUpperCase": "@VIRTUAL",
				"syntaxKind": 2,
				"standardization": "Extended",
				"allowMultiple": false
			},
			{
				"tagName": "@betaDocumentation",
				"tagNameWithUpperCase": "@BETADOCUMENTATION",
				"syntaxKind": 2,
				"standardization": "None",
				"allowMultiple": false
			},
			{
				"tagName": "@internalRemarks",
				"tagNameWithUpperCase": "@INTERNALREMARKS",
				"syntaxKind": 1,
				"standardization": "None",
				"allowMultiple": false
			},
			{
				"tagName": "@preapproved",
				"tagNameWithUpperCase": "@PREAPPROVED",
				"syntaxKind": 2,
				"standardization": "None",
				"allowMultiple": false
			}
		],
		"_tagDefinitionsByName": {},
		"_supportedTagDefinitions": {},
		"_validation": {
			"ignoreUndefinedTags": false,
			"reportUnsupportedTags": true,
			"reportUnsupportedHtmlElements": false
		},
		"_docNodeManager": {
			"_docNodeDefinitionsByKind": {},
			"_docNodeDefinitionsByConstructor": {}
		},
		"_supportedHtmlElements": {}
	},
	"newlineKind": "\r\n",
	"messages": {
		"compilerMessageReporting": {
			"default": {
				"logLevel": "error"
			}
		},
		"extractorMessageReporting": {
			"default": {
				"logLevel": "error",
				"addToApiReportFile": false
			},
			"ae-forgotten-export": {
				"logLevel": "error",
				"addToApiReportFile": false
			},
			"ae-incompatible-release-tags": {
				"logLevel": "error",
				"addToApiReportFile": false
			},
			"ae-internal-missing-underscore": {
				"logLevel": "none",
				"addToApiReportFile": false
			},
			"ae-internal-mixed-release-tag": {
				"logLevel": "error",
				"addToApiReportFile": false
			},
			"ae-unresolved-inheritdoc-reference": {
				"logLevel": "error",
				"addToApiReportFile": false
			},
			"ae-unresolved-inheritdoc-base": {
				"logLevel": "error",
				"addToApiReportFile": false
			},
			"ae-wrong-input-file-type": {
				"logLevel": "error"
			},
			"ae-extra-release-tag": {
				"logLevel": "error",
				"addToApiReportFile": false
			},
			"ae-missing-release-tag": {
				"logLevel": "error",
				"addToApiReportFile": false
			},
			"ae-cyclic-inherit-doc": {
				"logLevel": "error",
				"addToApiReportFile": false
			},
			"ae-misplaced-package-tag": {
				"logLevel": "error",
				"addToApiReportFile": false
			},
			"ae-unresolved-link": {
				"logLevel": "error",
				"addToApiReportFile": false
			}
		},
		"tsdocMessageReporting": {
			"default": {
				"logLevel": "error"
			}
		}
	},
	"testMode": false,
	"enumMemberOrder": "by-name"
}
