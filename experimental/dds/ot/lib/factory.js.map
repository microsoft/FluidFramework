{"version":3,"file":"factory.js","sourceRoot":"","sources":["../src/factory.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAQH,OAAO,EAAE,QAAQ,EAAE,MAAM,MAAM,CAAC;AAEhC,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAE9C;;GAEG;AACH,MAAM,OAAO,SAAS;IASlB,IAAW,IAAI;QACX,OAAO,SAAS,CAAC,IAAI,CAAC;IAC1B,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,SAAS,CAAC,UAAU,CAAC;IAChC,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,IAAI,CACb,OAA+B,EAC/B,EAAU,EACV,QAA0B,EAC1B,UAA8B;QAC9B,MAAM,EAAE,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;QACjD,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxB,OAAO,EAAE,CAAC;IACd,CAAC;IAEM,MAAM,CAAC,QAAgC,EAAE,EAAU;QACtD,MAAM,EAAE,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACvD,EAAE,CAAC,eAAe,EAAE,CAAC;QACrB,OAAO,EAAE,CAAC;IACd,CAAC;;AAjCsB,cAAI,GAAG,sCAAsC,CAAC;AAE9C,oBAAU,GAAuB;IACpD,IAAI,EAAE,SAAS,CAAC,IAAI;IACpB,qBAAqB,EAAE,KAAK;IAC5B,cAAc,EAAE,UAAU;CAC7B,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IChannelAttributes,\n    IFluidDataStoreRuntime,\n    IChannelServices,\n    IChannelFactory,\n} from \"@fluidframework/datastore-definitions\";\nimport { SharedOT } from \"./ot\";\nimport { ISharedOT } from \"./interfaces\";\nimport { pkgVersion } from \"./packageVersion\";\n\n/**\n * The factory that defines the map\n */\nexport class OTFactory implements IChannelFactory {\n    public static readonly Type = \"https://graph.microsoft.com/types/OT\";\n\n    public static readonly Attributes: IChannelAttributes = {\n        type: OTFactory.Type,\n        snapshotFormatVersion: \"0.1\",\n        packageVersion: pkgVersion,\n    };\n\n    public get type() {\n        return OTFactory.Type;\n    }\n\n    public get attributes() {\n        return OTFactory.Attributes;\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.load}\n     */\n    public async load(\n        runtime: IFluidDataStoreRuntime,\n        id: string,\n        services: IChannelServices,\n        attributes: IChannelAttributes): Promise<ISharedOT> {\n        const ot = new SharedOT(id, runtime, attributes);\n        await ot.load(services);\n        return ot;\n    }\n\n    public create(document: IFluidDataStoreRuntime, id: string): ISharedOT {\n        const ot = new SharedOT(id, document, this.attributes);\n        ot.initializeLocal();\n        return ot;\n    }\n}\n"]}