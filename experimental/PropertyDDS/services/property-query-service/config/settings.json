{
  "mh:internal:port": {
    "default": 3070,
    "description": "The default port for this server"
  },
  "logging:muteLogs": {
    "default": false
  },
  "logging:logLevel": {
    "default": "DEBUG"
  },
  "logging:moduleName": {
    "default": "HFDM.MaterializedHistoryService"
  },
  "basicAuthName" : {
    "describe": "See https://git.autodesk.com/forge/hfdm/blob/master/services/collaboration/config/settings.json#L36"
  },
  "basicAuthPasswordList" : {
    "describe": "See https://git.autodesk.com/forge/hfdm/blob/master/services/collaboration/config/settings.json#L39"
  },
  "mh:health_polling_interval" : {
    "default": 30000,
    "describe": "An interval to refresh the health status asynchronously"
  },
  "mh:chunkSize" : {
    "default": 16384,
    "describe": "The size of one chunk"
  },
  "mh:initialChunkSizeFactor" : {
    "default": 1.0,
    "describe": "The fraction of a chunk that is used for the initial creation"
  },
  "mh:splitLimitFactor" : {
    "default": 4.0,
    "describe": "At which multiple of the chunkSize do we split a chunk"
  },
  "mh:mergeLimitFactor" : {
    "default": 0.6,
    "describe": "At which multiple of the chunkSize do we merge a chunk"
  },
  "mh:maxNodeSizeFactor" : {
    "default": 8,
    "describe": "Maximum size of a delta encoded node as a multiple of the initial chunkSize"
  },
  "mh:maxNodeSubEntries" : {
    "default": 30,
    "describe": "Maximum number of a delta encoded sub-nodes in a single node"
  },
  "mh:bTreeOrder" : {
    "default": 15,
    "describe": "Maximum number of children for one B-Tree node"
  },
  "mh:nodesPerHierarchicalHistoryLevel" : {
    "default": 3,
    "describe": "How many nodes do we store in one level of the hierarchical history before creating a node a level higher"
  },
  "mh:nodeCache:size" : {
    "default": 104857600,
    "describe": "Cache size in bytes for Materialized History nodes"
  },
  "mh:nodeCache:expiry": {
    "default": 120000,
    "describe": "Retention period for a node in the cache"
  },
  "mh:storageBackend" : {
    "default": "InMemory",
    "describe": "Storage backend to be used (DynamoDB|InMemory)"
  },
  "mh:dynamoDBBackend" : {
    "default" : {
      "maxBatchWriteSize": 25,
      "maxConcurrentS3Uploads": 10,
      "largeNodeSize": 300000
    },
    "describe": "Configuration for the DynamoDBBackend"
  },
  "mh:inMemoryBackend" : {
    "default" : {},
    "describe": "Configuration for the InMemoryBackend"
  },
  "loadUpdateIntervalMs" : {
    "default" : 15000,
    "describe" : "The interval in milliseconds to which the server must report its load"
  },
  "hfdmRedis": {
    "default": {
      "cluster": false,
      "endpoints": "",
      "nodes": [
        {"host": "127.0.0.1", "port": 16379},
        {"host": "127.0.0.1", "port": 26379},
        {"host": "127.0.0.1", "port": 36379}
      ],
      "port": 6379,
      "host": "127.0.0.1",
      "family": 4,
      "password": null,
      "db": 0,
      "enableOfflineQueue": true
    }
  },
  "materializedHistoryService:enableRequestSigning": {
    "default": false,
    "describe": "Whether or not to HMAC sign requests to MaterializedHistoryService"
  },
  "materializedHistoryService:requestSigningKeys": {
    "default": [{
      "key": "superSecretSigningKey",
      "expireAt": "2999-12-31T23:59:59.9999Z"
    }],
    "describe": "Secrets to use for request signing with their expiry"
  },
  "materializedHistoryService:signatureToleranceMsec": {
    "default": 30000,
    "describe": "How many milliseconds to tolerate for the HMAC signature"
  },
  "materializedHistoryService:supportedSignatureAlgos": {
    "default": ["sha256"],
    "describe": "Algorithms supported for the request authentication"
  },
  "materializedHistory:consistencyWait": {
    "default": 5000,
    "describe": "How long, in ms, to wait during a read after write, for the write to take effect"
  },
  "materializedHistory:consistencyWaitSleepInterval": {
    "default": 50,
    "describe": "How long, interval to sleep while performing the materializedHistory:consistencyWait"
  },
  "pluginManager": {
    "default": {
      "configPath": "src/plugins/default.js"
    },
    "describe": "Settings for plugin manager that includes the path for the plugin definitions to load."
  },
  "systemMonitor": {
    "default": {
      "enabled": false,
      "licenseKey": "",
      "distributedTracing": true
    }
  },
  "mh:serializer" : {
    "default": "JSON",
    "describe": "Serializer to be used (JSON|BSON)"
  },
  "mh:serviceClientId": {
    "default": ""
  },
  "mh:loadShedding": {
    "default": {
      "cpuThreshold": 80,
      "windowSize": 5,
      "cooldownFactor": 10
    }
  },
  "defaultBranchPurgeTimeout": {
    "default": 300000,
    "describe": "Timeout setting in milliseconds for when the PSS should purge the loaded branches (defaults to 10 min)"
  },
  "mh:pssEviction": {
    "default": {
      "isEnabled": false
    },
    "describe": "Whether the MHS should be used as a voter to detect failures on the PSS"
  },
  "aws": {
    "default": {
    },
    "describe": "DynamoDB store settings."
  },
  "store-dynamodb": {
    "default": {
      "config": {
        "keyspace": "local",
        "concurrencyLimit": 10,
        "traversalFetchSize": 64,
        "bigChangeSetThresholdBytes": 10001,
        "prettyJson": false,
        "waitForTablePollTimeoutMS": 4000,
        "commitCounterMax": 10000000,
        "commitPageSize": 100,
        "binaryMergePageSize": 1000,
        "maxBatchReadSize": 100,
        "maxBatchWriteSize": 25,
        "elapsedWarningThresholdMilliSec": 20000,
        "returnConsumedCapacity": "TOTAL",
        "bigCommitReadConcurrency": 3,
        "httpAgent": {
          "keepAlive": true,
          "maxSockets": 250
        },
        "branchStateCache": {
          "maxSize": 10000,
          "maxIdleTimeSec": 900,
          "evictionTimeoutSec": 60,
          "lowFreqSaveTimeoutSec": 60,
          "evictToSizeRatio": 0.1
        },
        "retry": {
          "firstTimeoutMilliSec": 500,
          "taskTimeoutMilliSec": 60000,
          "backoffRate": 2.0,
          "jitter": 0.25
        },
        "pagination": {
          "limit": {
            "default": 50,
            "max": 100
          }
        },
        "eventualConsistency": {
          "totalTimeoutMilliSec": 10000,
          "retryTimeoutMilliSec": 600,
          "minRetryCount": 1
        },
        "maxPrivateDataNameSize": 1000,
        "maxPrivateDataValueSize": 1000,
        "maxPrivateDataTotalSize": 20000,
        "maxContentionRetryCount" : 10,
        "acl": {
          "maxPolicyCount": 10000
        },
        "tableNames": {
          "accessControl": "",
          "binaryMerges": "",
          "binaryObjects": "",
          "branches": "",
          "business": "",
          "commits": "",
          "lifecycle": "",
          "maps": "",
          "materializedHistory": "",
          "metrics": "",
          "repositories": "",
          "topology": ""
        },
        "tableCaches": {
          "repositories": {
            "enabled": true,
            "maxElements": 2000,
            "maxAge": 480000
          },
          "commits": {
            "enabled": true,
            "maxElements": 1000,
            "maxAge": 480000
          }
        },
        "fixOutOfOrderCommitsOnRead": true
      },
      "aws": {
        "endpoint": "http://127.0.0.1:8000",
        "region": "us-west-2",
        "accessKeyId": "keyId",
        "secretAccessKey": "secretKey"
      }
    }
  },
  "assetLifeCycle": {
    "default" : {
      "expiredGracePeriodSec": 2592000,
      "defaultExpiry": "temporary",
      "hardDeleteGracePeriodSec": 300,
      "s3BranchGracePeriodSec": 3027600,
      "s3MVGracePeriodSec": 3600,
      "describe": "defaultExpiry is the default time to live (in seconds) to apply to assets, after which they become expired and access is revoked. Expired assets become candidate for permanent deletion after another expiredGracePeriodSec seconds have elapsed."
    }
  },
  "enableRedisBranchAssignation": {
    "default": false,
    "describe": "Use redis for branch assignation"
  },
  "redisMaxReconnectionDelayMs": {
    "default" : 5000,
    "describe": "The maximum amount of time in ms to wait before trying to reconnect to redis."
  },
  "metricsCountersAggregatorIntervalSec": {
    "default" : 150,
    "describe": "The interval of time (in seconds) to wait before saving metrics counters to the database."
  },
  "binary" : {
    "default" : {
      "s3": {
        "endpoint": "http://127.0.0.1:4572",
        "bucketKey": "hfdm.local-binarydata",
        "bucketRegion": "us-east-1",
        "accessKeyId": "accessKey1",
        "secretAccessKey": "verySecretKey1",
        "replicationBuckets": ["hfdm.local-binarydata-replication"]
      },
      "enabled": true,
      "repositoryPartitions": 100,
      "replicationPartitions": 100,
      "binaryObjectTtl": 259200,
      "retries": 3,
      "concurrencyLimit": 10,
      "maxBatchWriteSize": 25
    }
  },
  "s3Store": {
    "default": {
      "config": {
        "endpoint": "http://127.0.0.1:4572",
        "accessKeyId": "accessKey1",
        "secretAccessKey": "verySecretKey1"
      },
      "options": {
        "bucket": "hfdm.local-bigstore"
      }
    }
  }
}
