# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# test-real-service-e2e pipeline

name: $(Build.BuildId)

trigger: none
pr: none

resources:
  pipelines:
  - pipeline: client   # Name of the pipeline resource
    source: Build - client packages
    branch: main # Default branch for manual/scheduled triggers if none is selected
    trigger:
      branches:
      - release/*
      - main
      - next
      - lts

variables:
- group: prague-key-vault
- name: testWorkspace
  value: $(Pipeline.Workspace)/test
- name: testPackage
  value: "@fluid-internal/test-end-to-end-tests"
  readonly: true
- name: toolAbsolutePath
  value: $(Build.SourcesDirectory)/tools/telemetry-generator
  readonly: true

lockBehavior: sequential
stages:
  # end-to-end tests local server
  - stage: e2e_local_server
    displayName: e2e - local server
    dependsOn: []
    jobs:
    - template: templates/include-test-real-service.yml
      parameters:
        poolBuild: Small
        testPackage: ${{ variables.testPackage }}
        testWorkspace: ${{ variables.testWorkspace }}
        artifactBuildId: $(resources.pipeline.client.runID)
        testCommand: test:realsvc:local:report
        env:
          FLUID_TEST_LOGGER_PKG_PATH: ${{ variables.testWorkspace }}/node_modules/@ff-internal/aria-logger # Contains getTestLogger impl to inject

  # end-to-end tests tinylicious
  - stage: e2e_tinylicious
    displayName: e2e - tinylicious
    dependsOn: []
    jobs:
    - template: templates/include-test-real-service.yml
      parameters:
        poolBuild: Small
        testPackage: ${{ variables.testPackage }}
        testWorkspace: ${{ variables.testWorkspace }}
        artifactBuildId: $(resources.pipeline.client.runID)
        testCommand: test:realsvc:tinylicious:report
        env:
          FLUID_TEST_LOGGER_PKG_PATH: ${{ variables.testWorkspace }}/node_modules/@ff-internal/aria-logger # Contains getTestLogger impl to inject
          # Disable colorization for tinylicious logs (not useful when printing to a file)
          logger__colorize: "false" # Need to pass it as string so ADO doesn't convert it into False (capital F) which doesn't work
          logger__morganFormat: tiny
        additionalSteps:

        # Publish the tinylicious log
        - task: PublishPipelineArtifact@1
          displayName: Publish Artifact - Tinylicious Log
          inputs:
            # NOTE: this depends on knowledge of what the template does and where it puts things.
            # If the template changes its logic, we might need to adjust this path.
            targetPath: '${{ variables.testWorkspace }}/node_modules/${{ variables.testPackage }}/tinylicious.log'
            artifactName: 'tinyliciousLog'
            publishLocation: 'pipeline'

  # end-to-end tests routerlicious
  - stage: e2e_routerlicious
    displayName: e2e - routerlicious
    dependsOn: []
    # use a variable group with exclusive lock force only one run at a time and avoid overloading the server/throttling
    variables:
    - group: e2e-r11s-lock
    jobs:
    - template: templates/include-test-real-service.yml
      parameters:
        poolBuild: Small
        testPackage: ${{ variables.testPackage }}
        testWorkspace: ${{ variables.testWorkspace }}
        artifactBuildId: $(resources.pipeline.client.runID)
        testCommand: test:realsvc:routerlicious:report
        continueOnError: true
        r11sSelfSignedCertSecureFile: wu2-tls-certificate.pem
        splitTestVariants:
          - name: Non-compat
            flags: --compatVersion=0
          - name: N-1
            flags: --compatVersion=-1
          - name: LTS
            flags: --compatVersion=LTS
          # Assumes Non-compat and N-1 scenarios are covered
          - name: N-2ToLTS+1-back-compat
            flags: --compatVersion=FULL
        env:
          fluid__test__driver__r11s: $(automation-fluid-test-driver-r11s)
          FLUID_TEST_LOGGER_PKG_PATH: ${{ variables.testWorkspace }}/node_modules/@ff-internal/aria-logger # Contains getTestLogger impl to inject

  # end-to-end tests frs
  - stage: e2e_frs
    displayName: e2e - frs
    dependsOn: []
    # use a variable group with exclusive lock force only one run at a time and avoid overloading the server/throttling
    variables:
    - group: e2e-frs-lock
    jobs:
    - template: templates/include-test-real-service.yml
      parameters:
        poolBuild: Small
        testPackage: ${{ variables.testPackage }}
        testWorkspace: ${{ variables.testWorkspace }}
        artifactBuildId: $(resources.pipeline.client.runID)
        timeoutInMinutes: 360
        continueOnError: true
        testCommand: test:realsvc:frs:report
        splitTestVariants:
          - name: Non-compat
            flags: --compatVersion=0
          - name: N-1
            flags: --compatVersion=-1
          - name: LTS
            flags: --compatVersion=LTS
          # Assumes Non-compat and N-1 scenarios are covered
          - name: N-2ToLTS+1-back-compat
            flags: --compatVersion=FULL
        env:
          fluid__test__driver__frs: $(automation-fluid-test-driver-frs)
          FLUID_TEST_LOGGER_PKG_PATH: ${{ variables.testWorkspace }}/node_modules/@ff-internal/aria-logger # Contains getTestLogger impl to inject

  # end-to-end tests odsp
  - stage: e2e_odsp
    displayName:  e2e - odsp
    dependsOn: []
    # use a variable group with exclusive lock force only one run at a time and avoid overloading the server/throttling
    variables:
    - group: e2e-odsp-lock
    jobs:
    - template: templates/include-test-real-service.yml
      parameters:
        poolBuild: Small
        testPackage: ${{ variables.testPackage }}
        testWorkspace: ${{ variables.testWorkspace }}
        artifactBuildId: $(resources.pipeline.client.runID)
        timeoutInMinutes: 360
        continueOnError: true
        testCommand: test:realsvc:odsp:report
        splitTestVariants:
          - name: Non-compat
            flags: --compatVersion=0 --tenantIndex=0
          - name: N-1
            flags: --compatVersion=-1 --tenantIndex=1
          - name: LTS
            flags: --compatVersion=LTS --tenantIndex=2
          # Assumes Non-compat and N-1 scenarios are covered
          - name: N-2ToLTS+1-back-compat
            flags: --compatVersion=FULL --tenantIndex=3
        env:
          login__microsoft__clientId: $(login-microsoft-clientId)
          login__microsoft__secret: $(login-microsoft-secret)
          login__odsp__test__tenants: $(automation-e2e-login-odsp-test-tenants)
          FLUID_TEST_LOGGER_PKG_PATH: ${{ variables.testWorkspace }}/node_modules/@ff-internal/aria-logger # Contains getTestLogger impl to inject
  
  # Capture per-pipeline stage results
  - stage: runAfterAll
    displayName: Retrieve and upload E2E per-pipeline-stage stats to Kusto
    condition: always()
    dependsOn:
      - e2e_local_server
      - e2e_tinylicious
      - e2e_routerlicious
      - e2e_frs
      - e2e_odsp

    jobs:
      - template: templates/include-test-perf-benchmarks.yml
        parameters:
            testWorkspace: ${{ variables.testWorkspace }}
            poolBuild: Small
            customSteps:

            - task: Bash@3
              displayName: Retrieve buildId results
              inputs:
                targetType: 'inline'
                workingDirectory: $(toolAbsolutePath)
                script: |
                  echo "creating output folder"
                  mkdir -p ${{ variables.testWorkspace }}/timingOutput
                  echo "Executing curl command ..."
                  echo  'curl -u ":<REDACTED>" "https://dev.azure.com/fluidframework/internal/_apis/build/builds/$(Build.BuildId)/timeline"'
                  curl -u ":$(System.AccessToken)" "https://dev.azure.com/fluidframework/internal/_apis/build/builds/$(Build.BuildId)/timeline\?api-version\=6.0-preview.1" > ${{ variables.testWorkspace }}/timingOutput/output.json
                  pwd;
                  ls -laR ${{ variables.testWorkspace }}/timingOutput/output.json;
                  cat ${{ variables.testWorkspace }}/timingOutput/output.json;
                  node --require @ff-internal/aria-logger bin/run --handlerModule $(Build.SourcesDirectory)/tools/telemetry-generator/dist/handlers/stageTimingRetriever.js --dir '${{ variables.testWorkspace }}/timingOutput/';
              env:
                BUILD_ID: $(Build.BuildId)
                ADO_API_TOKEN: $(System.AccessToken)
                PIPELINE: 'EndToEndTests'
