# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# test-real-service-e2e pipeline

name: $(Build.BuildId)

trigger: none
pr: none

resources:
  pipelines:
  - pipeline: client   # Name of the pipeline resource
    source: Build - client packages
    branch: main # Default branch for manual/scheduled triggers if none is selected

variables:
- group: prague-key-vault
- name: testWorkspace
  value: $(Pipeline.Workspace)/test
- name: testPackage
  value: "@fluid-private/test-end-to-end-tests"
  readonly: true
- name: absolutePathToTelemetryGenerator
  value: $(Build.SourcesDirectory)/tools/telemetry-generator
  readonly: true
- name: pipelineIdentifierForTelemetry
  value: 'EndToEndTests'
  readonly: true
# This is a test pipeline, not a build one, so we don't need to run CodeQL tasks
- name: DisableCodeQL
  value: true

lockBehavior: sequential
stages:

  # end-to-end tests routerlicious
  - template: templates/include-test-real-service.yml
    parameters:
      stageId: e2e_routerlicious
      stageDisplayName: e2e - routerlicious
      poolBuild: Small-eastus2
      testPackage: ${{ variables.testPackage }}
      testWorkspace: ${{ variables.testWorkspace }}
      artifactBuildId: $(resources.pipeline.client.runID)
      testCommand: test:realsvc:routerlicious:report
      continueOnError: true
      r11sSelfSignedCertSecureFile: wu2-ppe-tls-certificate.pem
      stageVariables:
        - group: e2e-r11s-lock
      splitTestVariants:
        - name: Non-compat
          flags: --compatVersion=0
        - name: N-1
          flags: --compatVersion=-1
        - name: LTS
          flags: --compatVersion=LTS
        - name: Cross-version
          flags: --compatVersion=CROSS_VERSION
      cacheCompatVersionsInstalls: true
      uploadTestPassRateTelemetry: true
      pipelineIdentifierForTelemetry: ${{ variables.pipelineIdentifierForTelemetry }}
      env:
        fluid__test__driver__r11s: $(automation-fluid-test-driver-r11s-ppe)
        FLUID_TEST_LOGGER_PKG_PATH: ${{ variables.testWorkspace }}/node_modules/@ff-internal/aria-logger # Contains getTestLogger impl to inject
        FLUID_LOGGER_PROPS: '{ "displayName": "${{variables.pipelineIdentifierForTelemetry}}"}'
