# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# build-client pipeline

name: $(Build.BuildId)

parameters:
- name: releaseBuildOverride
  displayName: Release Build (default = not released)
  type: string
  default: none
  values:
    - none
    - prerelease
    - release
- name: publishOverride
  displayName: Publish Override (default = based on branch)
  type: string
  default: default
  values:
    - default
    - skip
    - force

trigger:
  branches:
    include:
    - main
    - release/*
  paths:
    include:
    - packages
    - examples
    - experimental
    - package.json
    - package-lock.json
    - lerna.json
    - lerna-package-lock.json
    - tools/pipelines/build-client.yml
    - tools/pipelines/scripts/build-version.js
    - tools/pipelines/templates/build-npm-package.yml
    - tools/pipelines/templates/include-set-package-version.yml
    - tools/pipelines/templates/include-vars.yml
    - tools/pipelines/templates/include-publish-npm-package.yml
    - tools/pipelines/templates/include-publish-npm-package-steps.yml
    - tools/pipelines/templates/include-git-tag-steps.yml

pr:
  branches:
    include:
    - main
    - release/*
  paths:
    include:
    - packages
    - examples
    - experimental
    - package.json
    - package-lock.json
    - lerna.json
    - lerna-package-lock.json
    - tools/pipelines/build-client.yml
    - tools/pipelines/scripts/build-version.js
    - tools/pipelines/templates/build-npm-package.yml
    - tools/pipelines/templates/include-set-package-version.yml
    - tools/pipelines/templates/include-vars.yml

extends:
  template: templates/build-npm-package.yml
  parameters:
    publishOverride: ${{ parameters.publishOverride }}
    releaseBuildOverride: ${{ parameters.releaseBuildOverride }}
    buildDirectory: .
    tagName: client
    poolBuild: Main
    cgSubDirectory: packages
    checkoutSubmodules: true
    taskBundleAnalysis: true

    preCG:
    - task: UseNode@1
      displayName: Use Node 12.x
      inputs:
        version: 12.x
    - task: Npm@1
      displayName: npm ci
      inputs:
        command: 'custom'
        customCommand: 'ci --ignore-scripts'
        customRegistry: 'useNpmrc'
    - task: Bash@3
      displayName: 'Generate Mono repo package json'
      inputs:
        targetType: 'inline'
        script: |
          # Generate the package/package lock for the lerna project so we would scan it.
          node node_modules/@fluidframework/build-tools/dist/genMonoRepoPackageJson/genMonoRepoPackageJson.js
          cp repo-package.json packages/package.json
          cp repo-package-lock.json packages/package-lock.json

