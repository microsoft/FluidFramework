# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# build-docs leaf template to build docs via docker container

parameters:
- name: BASE_URL
  type: string

- name: THIS_VERSION
  type: string

- name: MAIN_BRANCH_VERSION
  type: string

- name: N1_VERSION
  type: string

- name: RELEASE_VERSION
  type: string

- name: VUEPRESS_BASE
  type: string

- name: DOCKER_CONTAINER_NAME
  type: string
  default: fluid-docs

- name: DOCKER_TARGET
  type: string
  default: docs

- name: artifactName
  type: string
  default: fluid-docs

steps:
- checkout: self
  clean: true

# Download the api-extractor outputs
- download: common_definitions
  artifact: _api-extractor-temp
- download: common_utils
  artifact: _api-extractor-temp
- download: container_definitions
  artifact: _api-extractor-temp
- download: core_interfaces
  artifact: _api-extractor-temp
- download: driver_definitions
  artifact: _api-extractor-temp
- download: protocol_definitions
  artifact: _api-extractor-temp
- download: client
  artifact: _api-extractor-temp
- download: server
  artifact: _api-extractor-temp

- script: |
    echo BASE_URL: $(BASE_URL)
    echo THIS_VERSION: $(THIS_VERSION)
    echo RELEASE_VERSION: $(RELEASE_VERSION)
    echo MAIN_BRANCH_VERSION: $(MAIN_BRANCH_VERSION)
    echo N1_VERSION: $(N1_VERSION)
  displayName: Show Template Variables

# Copy and merge the api-extractor outputs to a central location
- task: CopyFiles@2
  displayName: 'Copy _api-extractor-temp'
  inputs:
    SourceFolder: $(Pipeline.Workspace)
    Contents: '**/*.api.json'
    TargetFolder: '$(Build.SourcesDirectory)/_api-extractor-temp/doc-models'
    OverWrite: false
    flattenFolders: true
    CleanTargetFolder: true

- task: UseNode@1
  displayName: Use Node 12.x
  inputs:
    version: 12.x

- task: Npm@1
  displayName: npm ci
  inputs:
    command: 'custom'
    customCommand: 'ci --ignore-scripts'
    customRegistry: 'useNpmrc'

# Build the docs site
- task: Docker@2
  displayName: 'Build docs site via docker image'
  inputs:
    repository: ${{ parameters.DOCKER_CONTAINER_NAME }}
    command: build
    dockerFile: docs/Dockerfile
    buildContext: $(Build.SourcesDirectory)
    arguments: |
      --target ${{ parameters.DOCKER_TARGET }}
      --build-arg BASE_URL=${{ parameters.BASE_URL }}
      --build-arg VUEPRESS_BASE=${{ parameters.VUEPRESS_BASE }}
      --build-arg THIS_VERSION=${{ parameters.THIS_VERSION }}
      --build-arg MAIN_BRANCH_VERSION=${{ parameters.MAIN_BRANCH_VERSION }}
      --build-arg RELEASE_VERSION=${{ parameters.RELEASE_VERSION }}
      --build-arg N1_VERSION=${{ parameters.N1_VERSION }}
    tags: |
      $(Build.BuildId)

- task: Docker@0
  displayName: 'Copy built docs from container'
  inputs:
    action: 'Run a Docker command'
    customCommand: 'run --rm -v $(System.DefaultWorkingDirectory)/fluid-docs:/usr/src/fluid-docs -t ${{ parameters.DOCKER_CONTAINER_NAME }}:$(Build.BuildId) cp -R docs/dist /usr/src/fluid-docs'

# Publish the static site as a pipeline artifact
- publish: $(System.DefaultWorkingDirectory)/fluid-docs/dist
  artifact: ${{ parameters.artifactName }}

- task: Docker@0
  displayName: 'Remove docker image'
  inputs:
    action: 'Run a Docker command'
    customCommand: 'rmi ${{ parameters.DOCKER_CONTAINER_NAME }}:$(Build.BuildId)'
