# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# This template defines steps to setup the telemetry-generator tool so custom telemetry can be sent to Kusto.
# Other yaml files can include it and then immediately run the telemetry-generator.
# It's designed to be included by other yaml files inside a job section.

parameters:
# Path where the telemetry-generator package should be installed.
# It should be an empty directory so that it doesn't interfere with anything else.
# The caller of this template will need to know this in order to point to the correct locations for the handlers,
# which will be under <this path>/node_modules/@ff-internal/telemetry-generator/dist/handlers/.
- name: pathForTelemetryGeneratorInstall
  type: string

# Version of telemetry-generator to install.
# Should be specified as a semver range that can be interpreted by npm install @ff-internal/telemetry-generator@<version>.
# Defaults to latest.
- name: versionToInstall
  type: string
  default: latest

# URL for the "Dev feed" in our ADO project. All Fluid packages will be resolved from here when installing the
# dependencies for telemetry generator and aria-logger.
- name: devFeedUrl
  type: string

# URL for the "Office feed" in our ADO project. Packages in the @microsoft scope will be resolved from here when
# installing the dependencies for telemetry generator and aria-logger.
- name: officeFeedUrl
  type: string

steps:
- template: /tools/pipelines/templates/include-use-node-version.yml@self

- task: Bash@3
  displayName: Print parameter/variable values for template
  inputs:
    targetType: 'inline'
    script: |
      set -eu -o pipefail
      echo "
      Parameters:
        pathForTelemetryGeneratorInstall=${{ parameters.pathForTelemetryGeneratorInstall }}
        devFeedUrl=${{ parameters.devFeedUrl }}
        officeFeedUrl=${{ parameters.officeFeedUrl }}
      "
- task: Bash@3
  displayName: Create install directory for telemetry-generator
  inputs:
    targetType: 'inline'
    script: |
      set -eu -o pipefail
      mkdir -p ${{ parameters.pathForTelemetryGeneratorInstall }}

- task: Bash@3
  displayName: Initialize npmrc
  inputs:
    targetType: 'inline'
    workingDirectory: ${{ parameters.pathForTelemetryGeneratorInstall }}
    # Note: $(ado-feeds-build) and $(ado-feeds-office) come from the ado-feeds variable group
    script: |
      set -eu -o pipefail

      echo Initialize package
      npm init --yes

      echo Generating .npmrc
      echo "registry=https://registry.npmjs.org" >> ./.npmrc
      echo "always-auth=false" >> ./.npmrc

      echo "@fluidframework:registry=${{ parameters.devFeedUrl }}" >> ./.npmrc
      echo "@fluid-experimental:registry=${{ parameters.devFeedUrl }}" >> ./.npmrc
      echo "@fluid-tools:registry=${{ parameters.devFeedUrl }}" >> ./.npmrc
      echo "@fluid-internal:registry=${{ parameters.devFeedUrl }}" >> ./.npmrc
      echo "@fluid-private:registry=${{ parameters.devFeedUrl }}" >> ./.npmrc
      echo "@ff-internal:registry=${{ parameters.devFeedUrl }}" >> ./.npmrc
      echo "@microsoft:registry=${{ parameters.officeFeedUrl }}" >> ./.npmrc
      echo "always-auth=true" >> ./.npmrc
      cat .npmrc

# Auth to internal ADO feeds
- task: npmAuthenticate@0
  displayName: 'npm authenticate (internal ADO feeds)'
  retryCountOnTaskFailure: 1
  inputs:
    workingFile: ${{ parameters.pathForTelemetryGeneratorInstall }}/.npmrc

- task: Npm@1
  displayName: 'Install telemetry-generator'
  retryCountOnTaskFailure: 4
  inputs:
    workingDir: ${{ parameters.pathForTelemetryGeneratorInstall }}
    command: 'custom'
    customCommand: 'install @ff-internal/telemetry-generator@${{ parameters.versionToInstall }}'
    customRegistry: 'useNpmrc'
