# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

parameters:
- name: buildDirectory
  type: string

jobs:
  - job:
    displayName: Upload Release Reports
    variables:
    - group: storage-vars
    - name: version
      value: $[stageDependencies.build.build.outputs['SetVersion.version']]
    steps:
    - template: include-install-build-tools.yml
      parameters:
        buildDirectory: ${{ parameters.buildDirectory }}

    - task: Bash@3
      displayName: Generate release reports
      inputs:
        targetType: 'inline'
        workingDirectory: ${{ parameters.buildDirectory }}
        script: |
          mkdir generate_release_reports
          flub release report -g client -o generate_release_reports --baseFileName manifest

    - task: Bash@3
      displayName: Update release report version
      inputs:
        targetType: 'inline'
        workingDirectory: ${{ parameters.buildDirectory }}
        script: |
          mkdir upload_release_reports
          flub release report-unreleased --version $(version) --fullReportFilePath generate_release_reports/manifest.full.json --outDir upload_release_reports --branchName '$(Build.SourceBranch)'

    - task: CopyFiles@2
      displayName: Copy release reports
      inputs:
        SourceFolder: ${{ parameters.buildDirectory }}/upload_release_reports
        TargetFolder: $(Build.ArtifactStagingDirectory)/release_reports

    - task: AzureCLI@2
      displayName: Upload release reports
      continueOnError: true
      inputs:
        azureSubscription: 'fluid-docs'
        scriptType: bash
        workingDirectory: ${{ parameters.buildDirectory }}
        scriptLocation: inlineScript
        inlineScript: |
          for file in upload_release_reports/*; do
              az storage blob upload -f "$file" -c 'manifest-files' -n "$(basename "$file")" --account-name $(STORAGE_ACCOUNT) --auth-mode login --overwrite true --verbose
          done
          # Delete generate_release_reports and upload_release_reports folder
          rm -r generate_release_reports upload_release_reports

    - task: 1ES.PublishPipelineArtifact@1
      displayName: Publish Artifact - release_reports
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)/release_reports
        artifactName: release_reports
        publishLocation: pipeline
