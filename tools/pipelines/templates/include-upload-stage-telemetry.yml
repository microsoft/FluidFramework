# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# include-upload-stage-telemetry

# This template adds a new stage to a pipeline.
# The new stage "targets" another stage (specified as a parameter) and uploads telemetry about that stage to Kusto.

parameters:

# Id for the stage that runs tests, whose telemetry will be uploaded to Kusto.
- name: stageId
  type: string

# If true, the stage that uploads pipeline telemetry to Kusto will include a task to upload
# test pass rate telemetry for the pipeline specified in stageId.
- name: uploadTestPassRateTelemetry
  type: boolean
  default: false

# Unique identifier for the pipeline that is including this template.
# Used to identify telemetry data in Kusto for this pipeline.
- name: pipelineIdentifierForTelemetry
  type: string

- name: testWorkspace
  type: string

stages:
- stage: ${{ parameters.stageId }}_upload_telemetry
  displayName: Upload stage telemetry to Kusto ('${{ parameters.stageId }}')
  condition: succeededOrFailed()
  dependsOn:
    - ${{ parameters.stageId}}
  jobs:
  - job: upload_run_telemetry
    displayName: Upload stage telemetry to Kusto
    pool: Small
    variables:
    - group: ado-feeds

    steps:
    - template: /tools/pipelines/templates/include-telemetry-setup.yml@self
      parameters:
        devFeedUrl: $(ado-feeds-dev)
        officeFeedUrl: $(ado-feeds-office)
        isCheckoutNeeded: true

    - task: Bash@3
      displayName: Submit telemetry for stage timing and result
      env:
        BUILD_ID: $(Build.BuildId)
        ADO_API_TOKEN: $(System.AccessToken)
        PIPELINE: 'EndToEndTests'
        STAGE_ID: ${{ parameters.stageId }}
      inputs:
        targetType: 'inline'
        workingDirectory: $(absolutePathToTelemetryGenerator)
        script: |
          OUTPUT_FOLDER=${{ parameters.testWorkspace }}/stageTimingAndResult
          echo "Creating output folder '$OUTPUT_FOLDER'"
          mkdir -p $OUTPUT_FOLDER

          echo "Retrieving pipeline run timeline data command ..."
          echo "curl -u \":<REDACTED>\" \"https://dev.azure.com/fluidframework/internal/_apis/build/builds/$BUILD_ID/timeline\""
          curl -u ":$ADO_API_TOKEN" "https://dev.azure.com/fluidframework/internal/_apis/build/builds/$BUILD_ID/timeline\?api-version=7.1-preview.2" > $OUTPUT_FOLDER/output.json

          echo "Listing files in '$OUTPUT_FOLDER'"
          ls -laR $OUTPUT_FOLDER;
          echo "Contents of '$OUTPUT_FOLDER/output.json'"
          cat $OUTPUT_FOLDER/output.json;

          # node --require @ff-internal/aria-logger bin/run --handlerModule $(absolutePathToTelemetryGenerator)/dist/handlers/stageTimingRetriever.js --dir '$OUTPUT_FOLDER/';
          # Not using aria-logger to get console output in the pipeline while I test
          node bin/run --handlerModule $(absolutePathToTelemetryGenerator)/dist/handlers/stageTimingRetriever.js --dir '$OUTPUT_FOLDER/';

    - ${{ if parameters.uploadTestPassRateTelemetry }}:
      - task: Bash@3
        displayName: Submit telemetry for test pass rate
        env:
          BUILD_ID: $(Build.BuildId)
          ADO_API_TOKEN: $(System.AccessToken)
          WORK_FOLDER: ${{ parameters.testWorkspace }}/stageTestPassRate
          BUILD_SOURCES_DIRECTORY: $(Build.SourcesDirectory)
          PIPELINE: 'EndToEndTests'
          STAGE_ID: ${{ parameters.stageId }}
        inputs:
          targetType: 'inline'
          workingDirectory: $(absolutePathToTelemetryGenerator)
          script: |
            echo "Fetching test pass rate data and saving into JSON files"
            node "$BUILD_SOURCES_DIRECTORY/scripts/get-test-pass-rate.mjs"
            echo "Files created. Now running telemetry-generator."
            # node --require @ff-internal/aria-logger bin/run --handlerModule "$(absolutePathToTelemetryGenerator)/dist/handlers/testPassRate.js" --dir "$WORK_FOLDER"
            # Not using aria-logger to get console output in the pipeline while I test
            node bin/run --handlerModule "$(absolutePathToTelemetryGenerator)/dist/handlers/testPassRate.js" --dir "$WORK_FOLDER"
