# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# include-publish-npm-package-steps template to publish NPM packages/projects

parameters:
- name: feedUrl
  type: string

- name: feedKind
  type: string

- name: artifactPath
  type: string

- name: publishFlags
  type: string
  default:

- name: customEndPoint
  type: string
  default:

steps:
- task: Bash@3
  displayName: Generate .npmrc for ${{ parameters.artifactPath }}
  inputs:
    targetType: 'inline'
    workingDirectory: $(Pipeline.Workspace)/pack/${{ parameters.artifactPath }}
    script: |
      set -eu -o pipefail
      echo Generating .npmrc for ${{ parameters.feedUrl }}
      echo "registry=${{ parameters.feedUrl }}" >> ./.npmrc
      echo "always-auth=true" >> ./.npmrc
      cat .npmrc
- task: npmAuthenticate@0
  displayName: npm Authenticate for ${{ parameters.artifactPath }}
  inputs:
    workingFile: $(Pipeline.Workspace)/pack/${{ parameters.artifactPath }}/.npmrc
    customEndPoint: ${{ parameters.customEndPoint }}
- task: Bash@3
  displayName: Publish Packages for ${{ parameters.artifactPath }}
  inputs:
    targetType: 'inline'
    workingDirectory: $(Pipeline.Workspace)/pack/${{ parameters.artifactPath }}
    script: |
      set -eu -o pipefail

      echo "Artifact path: ${{ parameters.artifactPath }}"
      tag="--tag rc"
      if [[ "$(release)" == "release" ]]; then
        if [ "$(isLatest)" = "true" ]; then
          tag="--tag latest"
        fi
      elif [[ "$(Build.SourceBranch)" = refs/heads/main ]]; then
        tag="--tag dev"
      fi
      echo Tag: $tag

      cp .npmrc ~/.npmrc

      maximumRetryIfNetworkError=3
      tarballsDir=$(Pipeline.Workspace)/pack/${{ parameters.artifactPath }}
      orderFile=$(Pipeline.Workspace)/pack/packagePublishOrder-${{ parameters.feedKind }}.txt

      # execute the publish command
      flub publish tarballs \
      --dir $tarballsDir \
      --orderFile $orderFile \
      --publishArgs "$tag" \
      --retry $maximumRetryIfNetworkError \
      --verbose

      # Clean up; remove the npmrc
      rm ~/.npmrc
      exit 0
- task: Bash@3
  displayName: Promote Packages for ${{ parameters.artifactPath }}
  condition: and(succeeded(), eq(variables['release'], 'release'), eq('${{ parameters.feedKind }}', 'internal-build'))
  env:
    ADO_API_TOKEN: $(System.AccessToken)
  inputs:
    targetType: 'inline'
    workingDirectory: $(Pipeline.Workspace)/pack/${{ parameters.artifactPath }}
    script: |
      set -eu -o pipefail
      echo "Artifact path: ${{ parameters.artifactPath }}"
      orderFile=$(Pipeline.Workspace)/pack/packagePublishOrder-${{ parameters.feedKind }}.txt

      flub promote package \
      --version "$(version)" \
      --orderFile $orderFile \
      --verbose
      exit 0
