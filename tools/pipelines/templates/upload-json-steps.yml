# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# upload-json-steps pipeline
# This pipeline downloads the api-extractor artifacts from build pipelines and publishes the combined JSON files as a pipeline artifact.
# The combined JSON files are also uploaded to the azure blob storage in the format `latest-v*.tar.gz`. Where * is the major version number.

parameters:
- name: STORAGE_ACCOUNT
  type: string

# Determines if artifact should be published as latest.tar.gz (for main branch)
- name: uploadAsLatest
  type: boolean
  default: false

# Determines if artifact should be published as latest-v*.tar.gz (for release branches)
- name: uploadAsLatestRelease
  type: boolean
  default: false

# Major version to upload as latest-v*.tar.gz
- name: majorVersion
  type: string
  default: none

steps:
- checkout: none
  clean: true

# Download the api-extractor outputs
- template: download-api-extractor-artifact.yml
  parameters:
    pipelineName: Build - common-definitions
    branchName: ${{ variables['Build.SourceBranch'] }}
- template: download-api-extractor-artifact.yml
  parameters:
    pipelineName: Build - common-utils
    branchName: ${{ variables['Build.SourceBranch'] }}
- template: download-api-extractor-artifact.yml
  parameters:
    pipelineName: Build - container-definitions
    branchName: ${{ variables['Build.SourceBranch'] }}
- template: download-api-extractor-artifact.yml
  parameters:
    pipelineName: Build - core-interfaces
    branchName: ${{ variables['Build.SourceBranch'] }}
- template: download-api-extractor-artifact.yml
  parameters:
    pipelineName: Build - driver-definitions
    branchName: ${{ variables['Build.SourceBranch'] }}
- template: download-api-extractor-artifact.yml
  parameters:
    pipelineName: Build - protocol-definitions
    branchName: ${{ variables['Build.SourceBranch'] }}
- template: download-api-extractor-artifact.yml
  parameters:
    pipelineName: Build - azure
    branchName: ${{ variables['Build.SourceBranch'] }}
- template: download-api-extractor-artifact.yml
  parameters:
    pipelineName: Build - client packages
    branchName: ${{ variables['Build.SourceBranch'] }}
- template: download-api-extractor-artifact.yml
  parameters:
    pipelineName: server-routerlicious
    branchName: ${{ variables['Build.SourceBranch'] }}

# Copy and merge the api-extractor outputs to a central location
- task: CopyFiles@2
  displayName: 'Copy and merge JSON files'
  inputs:
    SourceFolder: $(Pipeline.Workspace)
    Contents: '**/*.api.json'
    TargetFolder: '$(Build.SourcesDirectory)/_api-extractor-temp'
    OverWrite: false
    flattenFolders: true
    CleanTargetFolder: true

- task: PublishPipelineArtifact@1
  displayName: 'Publish api-extractor JSON'
  inputs:
    targetPath: '$(Build.SourcesDirectory)/_api-extractor-temp'
    artifactName: 'api-extractor-combined'
    publishLocation: 'pipeline'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/_api-extractor-temp'
    includeRootFolder: false
    archiveType: 'tar' # Options: zip, 7z, tar, wim
    tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
    archiveFile: '$(Pipeline.Workspace)/$(Build.SourceVersion).tar.gz'
    replaceExistingArchive: true
    verbose: true # Optional
    #quiet: # Optional

- task: AzureCLI@2
  displayName: 'Upload JSON'
  continueOnError: true
  inputs:
    azureSubscription: 'fluid-docs'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      az storage blob upload -f '$(Pipeline.Workspace)/$(Build.SourceVersion).tar.gz' -c 'api-extractor-json' -n $(Build.SourceVersion).tar.gz --account-name ${{ parameters.STORAGE_ACCOUNT }} --auth-mode login --verbose

- ${{ if eq(parameters.uploadAsLatest, true) }}:
  - task: AzureCLI@2
    displayName: 'Upload JSON as latest.tar.gz'
    continueOnError: true
    inputs:
      azureSubscription: 'fluid-docs'
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az storage blob upload -f '$(Pipeline.Workspace)/$(Build.SourceVersion).tar.gz' -c 'api-extractor-json' -n latest.tar.gz --account-name ${{ parameters.STORAGE_ACCOUNT }} --auth-mode login --overwrite --verbose

- ${{ if eq(parameters.uploadAsLatestRelease, true) }}:
  - task: AzureCLI@2
    displayName: 'Upload JSON as latest-v*.tar.gz'
    continueOnError: true
    inputs:
      azureSubscription: 'fluid-docs'
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az storage blob upload -f '$(Pipeline.Workspace)/$(Build.SourceVersion).tar.gz' -c 'api-extractor-json' -n latest-v${{ parameters.majorVersion }}.tar.gz --account-name ${{ parameters.STORAGE_ACCOUNT }} --auth-mode login --overwrite --verbose
