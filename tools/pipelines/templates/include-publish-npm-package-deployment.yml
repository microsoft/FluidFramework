# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# include-publish-npm-package-deployment

parameters:
- name: feedKind
  type: string

- name: feedUrl
  type: string

- name: environment
  type: string

- name: pool
  type: object
  default: Small-eastus2

- name: publishFlags
  type: string
  default:

- name: customEndPoint
  type: string
  default:

- name: tagName
  type: string
  default:

- name: buildDirectory
  type: string

- name: buildToolsVersionToInstall
  type: string
  default: repo

# The path to the pnpm store.
- name: pnpmStorePath
  type: string
  default: $(Pipeline.Workspace)/.pnpm-store

jobs:

  # This job is necessary to be compliant with 1ES.
  # 1ES does not allow checking out a code repo within a deployment job so instead we use this pattern
  # of checking out the repo in separate job and uploading it as a pipeline artifact.
# - job: checkoutAndUploadThisRepoAsArtifact
#   steps:
#   # Checkout the repository
#   - checkout: self
#     persistCredentials: true # Necessary for creation of git tags to work
#   # Copy required files to the artifact staging directory
#   - task: CopyFiles@2
#     inputs:
#       SourceFolder: $(System.DefaultWorkingDirectory)
#       Contents: '**/*'
#       TargetFolder: $(Build.ArtifactStagingDirectory)
#   # Publish the artifact containing the required files from the repository
#   - task: 1ES.PublishPipelineArtifact@1
#     inputs:
#       targetPath: $(Build.ArtifactStagingDirectory)
#       artifactName: fluidFrameworkRepo

- deployment: publish_${{ replace(parameters.environment, '-', '_') }}
  # Depend on the build job
  # dependsOn: checkoutAndUploadThisRepoAsArtifact
  displayName: Publish ${{ parameters.environment }}
  pool: ${{ parameters.pool }}
  environment: ${{ parameters.environment }}
  # This templateContext section is necessary for 1ES compliance for deployment jobs.
  # see https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/releasepipelines/releaseworkflows/releasejob?tabs=combined-pipeline for more info.
  templateContext:
    type: releaseJob
    isProduction: true
    # This section downloads initial required artifacts/data for this job.
    inputs:
      # - input: pipelineArtifact
      #   artifactName: fluidFrameworkRepo
      #   targetPath: ${{ parameters.buildDirectory }}

      - input: pipelineArtifact
        pipeline: 'Build - build-tools'
        branchName: main
        artifactName: pack
        targetPath: ${{ parameters.buildDirectory }}

      - input: pipelineArtifact
        artifactName: pack
        buildType: current
        targetPath: $(Pipeline.Workspace)/pack
  workspace:
    clean: all
  variables:
    version: $[ stageDependencies.build.build.outputs['SetVersion.version']]
    isLatest: $[ stageDependencies.build.build.outputs['SetVersion.isLatest']]
  strategy:
    runOnce:
        deploy:
          steps:
          - template: /tools/pipelines/templates/include-use-node-version.yml@self
          - task: Bash@3
            displayName: List Files in Directory
            inputs:
              targetType: inline
              workingDirectory: '${{ parameters.buildDirectory }}'
              script: |
                echo "Listing files in directory: $(pwd)"
                ls -la

          - task: Bash@3
            name: InstallBuildToolsFromTarball
            displayName: Install Fluid Build Tools from artifact tarball
            inputs:
              targetType: 'inline'
              workingDirectory: '${{ parameters.buildDirectory }}/tarballs'
              script: |
                echo "Listing files in directory: $(pwd)"
                ls -la
                echo "attempting tarball install"
                npm i -g fluid-tools-build-cli-*.tgz

          # - template: /tools/pipelines/templates/include-install-build-tools.yml@self
          #   parameters:
          #     buildDirectory: ${{ parameters.buildDirectory }}
          #     buildToolsVersionToInstall: ${{ parameters.buildToolsVersionToInstall }}
          #     pnpmStorePath: ${{ parameters.pnpmStorePath }}

          - template: /tools/pipelines/templates/include-publish-npm-package-steps.yml@self
            parameters:
              artifactPath: tarballs
              feedUrl: ${{ parameters.feedUrl }}
              customEndPoint: ${{ parameters.customEndPoint }}
              feedKind: ${{ parameters.feedKind }}
              publishFlags: ${{ parameters.publishFlags }}
          - template: /tools/pipelines/templates/include-git-tag-steps.yml@self
            parameters:
              tagName: ${{ parameters.tagName }}
