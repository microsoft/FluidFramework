# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# include-conditionally-run-stress-tests
# Checks if

parameters:
- name: packages
  type: object # { name, affectedPaths, testFileTarName, testCommand } all strings

- name: testWorkspace
  type: string

- name: pool
  type: object
  default: Small

stages:
  - stage: CheckAffectedPaths
    displayName: Determine changed packages
    jobs:
    - job: Job
      displayName: Check for DDS package changes
      steps:
      - ${{ each package in parameters.packages }}:
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |
              $changedfiles = git diff --name-only HEAD~1 ${{ package.affectedPaths }}
              Write-Host "Found the following files changed in ${{ package.affectedPaths }}:"
              Write-Host $changedfiles
              If ($changedfiles -ne $null)  {
                echo "##vso[task.setvariable variable=AffectedFilesModified;isOutput=true]true"
              }
          displayName: 'Check if files affecting ${{ package.affectedPaths }} were modified'
          name: Check${{ replace(package.testFileTarName, '-', '' ) }}

  - ${{ each package in parameters.packages }}:
    - stage:
      dependsOn: CheckAffectedPaths
      displayName: Run ${{ package.name }} stress tests
      jobs:
        - template: include-test-real-service.yml
          parameters:
            # Ideally this would be a condition on the stage rather than the job, but it doesn't seem like that is supported (and ADO UI gives very little debug information
            # as to what might be going wrong). This only impacts the "stage" view of the pipeline, in that packages with skipped tests will show up as successful stages
            # rather than skipped stages. Clicking on a skipped stage still shows that the corresponding test job wasn't run.
            condition: eq(stageDependencies.CheckAffectedPaths.Job.outputs['Check${{ replace(package.testFileTarName, '-', '') }}.AffectedFilesModified'],'true')
            poolBuild: ${{ parameters.pool }}
            extraDependencies: mocha cross-env @fluid-internal/stochastic-test-utils @fluidframework/mocha-test-setup
            loggerPackage: ''
            testPackage: ${{ package.name }}
            testWorkspace: ${{ parameters.testWorkspace }}
            timeoutInMinutes: 120
            testFileTarName: ${{ package.testFileTarName }}
            testCommand: ${{ package.testCommand }}
            env:
              FUZZ_STRESS_RUN: true
