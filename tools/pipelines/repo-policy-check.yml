# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# repo-policy-check pipeline to ensure repo conventions

trigger:
- main
- next
- lts
- release/*

pr:
- main
- next
- lts
- release/*

pool:
  Small

variables:
- name: skipComponentGovernanceDetection
  value: true
- name: pnpmStorePath
  value: $(Pipeline.Workspace)/.pnpm-store

steps:
- task: UseNode@1
  displayName: Use Node 16.x
  inputs:
    version: 16.x

- task: Cache@2
  displayName: Cache pnpm store
  inputs:
    # Caches are already scoped to individual pipelines, so no need to include the release group name or tag
    # in the cache key
    key: 'pnpm-store | "$(Agent.OS)" | pnpm-lock.yaml'
    path: ${{ variables.pnpmStorePath }}
    restoreKeys: |
      pnpm-store | "$(Agent.OS)"

- task: Bash@3
  displayName: Install and configure pnpm
  inputs:
    targetType: 'inline'
    script: |
      npm i -g pnpm@7.30.5
      pnpm -v
      pnpm config set store-dir $(pnpmStorePath)

- task: Bash@3
  displayName: Install root dependencies
  inputs:
    targetType: 'inline'
    workingDirectory: .
    script: |
      # We only want to install the root package deps, so we set recursive-install to false
      pnpm config set recursive-install false
      pnpm install --frozen-lockfile

- task: Npm@1
  displayName: Policy Check
  inputs:
    command: 'custom'
    customCommand: 'run policy-check'

- task: Npm@1
  displayName: Layer Check
  inputs:
    command: 'custom'
    customCommand: 'run layer-check'

- task: Npm@1
  displayName: npm run prettier:root
  inputs:
    command: 'custom'
    customCommand: 'run prettier:root'

- task: Bash@3
  displayName: Prune pnpm store
  inputs:
    targetType: 'inline'
    script: |
      pnpm store prune
