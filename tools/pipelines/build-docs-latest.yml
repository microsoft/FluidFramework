# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# build-docs-latest pipeline
# This pipeline builds the main branch docs each time the client packages are built

name: $(Build.BuildId)

variables:
  - name: skipComponentGovernanceDetection
    value: true
  - group: doc-versions
  - group: storage-vars
  - name: latestPipeline
    value: ${{ or(
      eq(variables['Build.SourceBranchName'], 'main'),
      eq(variables['Build.SourceBranchName'], 'pl-test')
      )}}
  - name: n1Branch
    value: ${{ join('/refs/heads/release/', variables['N1_BRANCH']) }}
  - name: n1Pipeline
    value: ${{ eq(variables['Build.SourceBranchName'], variables['N1_BRANCH']) }}
  - name: releasePipeline
    value: ${{ eq(variables['Build.SourceBranchName'], variables['RELEASE_BRANCH']) }}
  - name: validRun
    value: ${{ or(variables.releasePipeline, variables.n1Pipeline, variables.latestPipeline) }}

# no branch and PR triggers
trigger: none
pr: none

resources:
  pipelines:
  # - pipeline: test
  #   source: test - trigger
  #   trigger:
  #     branches:
  #       include:
  #       - docs/hugo
  #       - pl-test
  - pipeline: common_definitions
    source: Build - common-definitions
  - pipeline: common_utils
    source: Build - common-utils
  - pipeline: container_definitions
    source: Build - container-definitions
  - pipeline: core_interfaces
    source: Build - core-interfaces
  - pipeline: driver_definitions
    source: Build - driver-definitions
  - pipeline: protocol_definitions
    source: Build - protocol-definitions
  - pipeline: client
    source: Build - client packages
    trigger:
      branches:
        include:
        - main
  - pipeline: server
    source: server-routerlicious

stages:
- stage: build
  displayName: 'Build docs'
  pool: Main
  jobs:
  - job:
    displayName: Component Detection
    pool: Lite
    steps:
    - script: |
        echo SourceBranchName: ${{ variables['Build.SourceBranchName'] }}
        echo BASE_URL: $(BASE_URL)
        echo RELEASE_VERSION: $(RELEASE_VERSION)
        echo MAIN_BRANCH_VERSION: $(MAIN_BRANCH_VERSION)
        echo N1_VERSION: $(N1_VERSION)
        echo releasePipeline ${{ variables.releasePipeline }}
        echo latestPipeline ${{ variables.latestPipeline }}
        echo n1Pipeline ${{ variables.n1Pipeline }}
      displayName: 'Show Variables'
    - task: ComponentGovernanceComponentDetection@0
      displayName: Component Detection
      inputs:
        sourceScanPath: docs
        verbosity: Verbose
        scanType: Register
        alertWarningLevel: High

  - job: latest_release
    displayName: 'Main branch'
    steps:
    - template: templates/build-docs-steps.yml
      parameters:
        BASE_URL: $(BASE_URL)
        THIS_VERSION: $(MAIN_BRANCH_VERSION)
        MAIN_BRANCH_VERSION: $(MAIN_BRANCH_VERSION)
        RELEASE_VERSION: $(RELEASE_VERSION)
        N1_VERSION: $(N1_VERSION)
        VUEPRESS_BASE: '/versions/latest/'

  - job: latest_release_versioned
    displayName: 'Main branch (/versions/)'
    steps:
    - template: templates/build-docs-steps.yml
      parameters:
        BASE_URL: $(BASE_URL)
        THIS_VERSION: $(MAIN_BRANCH_VERSION)
        MAIN_BRANCH_VERSION: $(MAIN_BRANCH_VERSION)
        RELEASE_VERSION: $(RELEASE_VERSION)
        N1_VERSION: $(N1_VERSION)
        VUEPRESS_BASE: '/versions/$(MAIN_BRANCH_VERSION)/'
        artifactName: fluid-docs-version-path

- stage: deploy
  displayName: Deploy Stage
  pool: Main
  dependsOn: build
  jobs:
    - deployment: latest_release
      displayName: 'Main branch'
      environment: 'fluid-docs-cdn'
      strategy:
        runOnce:
          deploy:
            steps:
            - script: |
                echo $(resources.pipeline.docs.pipelineID)
                echo $(resources.pipeline.docs.runName)
                echo $(resources.pipeline.docs.runID)
                echo $(resources.pipeline.docs.runURI)
                echo $(resources.pipeline.docs.sourceBranch)
                echo $(resources.pipeline.docs.sourceCommit)
                echo $(resources.pipeline.docs.sourceProvider)
                echo $(resources.pipeline.docs.requestedFor)
                echo $(resources.pipeline.docs.requestedForID)

            - template: templates/deploy-docs-steps.yml
              parameters:
                STORAGE_ACCOUNT: $(STORAGE_ACCOUNT)
                STORAGE_KEY: $(STORAGE_KEY)
                DEST_PATH: '/versions/latest/'

    - deployment: latest_release_versioned
      displayName: 'Main branch (/versions/)'
      environment: 'fluid-docs-cdn'
      strategy:
        runOnce:
          deploy:
            steps:
            - template: templates/deploy-docs-steps.yml
              parameters:
                STORAGE_ACCOUNT: $(STORAGE_ACCOUNT)
                STORAGE_KEY: $(STORAGE_KEY)
                DEST_PATH: '/versions/$(MAIN_BRANCH_VERSION)/'
                artifactName: fluid-docs-version-path
