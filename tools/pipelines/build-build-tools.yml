# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# build-build-tools pipeline

name: $(Build.BuildId)

parameters:
- name: releaseBuildOverride
  displayName: Release Build (default = not released)
  type: string
  default: none
  values:
    - none
    - prerelease
    - release
- name: publishOverride
  displayName: Publish Override (default = based on branch)
  type: string
  default: default
  values:
    - default
    - skip
    - force
- name: interdependencyRange
  displayName: Range to use for interdependencies (only affects releases) (default = ~)
  type: string
  default: "~"
  # The " " value (a space) is a hacky workaround. ADO doesn't support empty string, but we ultimately use this value as
  # an environment variable in a bash script (the 'update package versions' step), where it gets coerced back to the
  # empty string.
  values:
    - "^"
    - "~"
    - " "
- name: buildToolsVersionToInstall
  displayName: Fluid build tools version (default = installs version in repo)
  type: string
  default: repo

trigger:
  branches:
    include:
    - main
    - next
    - lts
  paths:
    include:
    - .prettierignore
    - biome.json
    - biome.jsonc
    - build-tools
    - common/build/build-common
    - tools/pipelines/build-build-tools.yml
    - tools/pipelines/templates/build-npm-package.yml
    - tools/pipelines/templates/include-set-package-version.yml
    - tools/pipelines/templates/include-vars.yml
    - tools/pipelines/templates/include-install-pnpm.yml
    - tools/pipelines/templates/include-publish-npm-package.yml
    - tools/pipelines/templates/include-publish-npm-package-deployment.yml
    - tools/pipelines/templates/include-publish-npm-package-steps.yml
    - tools/pipelines/templates/include-use-node-version.yml
    - tools/pipelines/templates/include-process-test-results.yml
    - tools/pipelines/templates/upload-dev-manifest.yml
    - scripts/*

pr:
  branches:
    include:
    - main
    - next
    - lts
    - release/*
  paths:
    include:
    - .prettierignore
    - build-tools
    - common/build/build-common
    - tools/pipelines/build-build-tools.yml
    - tools/pipelines/templates/build-npm-package.yml
    - tools/pipelines/templates/include-set-package-version.yml
    - tools/pipelines/templates/include-vars.yml
    - tools/pipelines/templates/include-install-pnpm.yml
    - tools/pipelines/templates/include-use-node-version.yml
    - tools/pipelines/templates/include-process-test-results.yml
    - tools/pipelines/templates/upload-dev-manifest.yml
    - scripts/*

stages:
- stage: testbash
  displayName: 'testbash'
  pool: Small
  jobs:
    - job: testBash
      variables:
        releaseBuildOverride: ${{ parameters.releaseBuildOverride }}
        publishOverride: ${{ parameters.publishOverride }}
        interdependencyRange: ${{ parameters.interdependencyRange }}
      displayName: 'testbash'
      steps:
        - task: Bash@3
          name: test
          displayName: 'test'
          inputs:
            targetType: 'inline'
            workingDirectory: $(Build.SourcesDirectory)
            script: |
              echo test line

        - task: TriggerBuild@4
          inputs:
            definitionIsInCurrentTeamProject: True
            buildDefinition: 'build-docs'
            useSameSourceVersion: False
            useSameBranch: False
            branchToUse: test/michaelzhen
            storeInEnvironmentVariable: True
            templateParameters: 'releaseBuildOverride:$(releaseBuildOverride), publishOverride:$(publishOverride), interdependencyRange:$(interdependencyRange)'
            authenticationMethod: 'OAuth Token'
            password: '$(System.AccessToken)'
          displayName: Run build-docs pipeline
