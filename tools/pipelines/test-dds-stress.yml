# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# "Test - DDS Stress" pipeline

name: $(Build.BuildId)

trigger: none
pr: none

resources:
  pipelines:
  - pipeline: client   # Name of the pipeline resource
    source: Build - client packages
    branch: main # Default branch for manual/scheduled triggers if none is selected
    trigger:
      branches:
      - release/*
      - main
      - next

variables:
- name: testWorkspace
  value: $(Pipeline.Workspace)/test
- name: absolutePathToTelemetryGenerator
  value: $(Build.SourcesDirectory)/tools/telemetry-generator
  readonly: true

parameters:
- name: packages
  type: object
  default:
  - name: "@fluidframework/sequence"
    affectedPaths:
    - packages/dds/sequence
    - packages/dds/merge-tree
    testFileTarName: sequence
    testCommand: test:stress
  - name: "@fluid-experimental/tree"
    affectedPaths:
    - experimental/dds/tree
    testFileTarName: experimental-tree
    testCommand: test:stress
  - name: "@fluidframework/tree"
    affectedPaths:
    - packages/dds/tree
    testFileTarName: tree
    testCommand: test:stress
  - name: "@fluidframework/map"
    affectedPaths:
    - packages/dds/map
    - packages/dds/merge-tree
    testFileTarName: map
    testCommand: test:stress
  - name: "@fluidframework/matrix"
    affectedPaths:
    - packages/dds/matrix
    - packages/dds/merge-tree
    testFileTarName: matrix
    testCommand: test:stress


stages:
  - template: templates/include-conditionally-run-stress-tests.yml
    parameters:
      artifactBuildId: $(resources.pipeline.client.runID)
      packages: ${{ parameters.packages }}
      testWorkspace: ${{ variables.testWorkspace }}

  # Capture telemetry about pipeline stages
  - stage: upload_run_telemetry
    displayName: Upload pipeline run telemetry to Kusto
    condition: succeededOrFailed()
    dependsOn:
    - ${{ each package in parameters.packages }}:
      # This list of stages should be kept in sync with the way we generate their ids in tools/pipelines/templates/include-conditionally-run-stress-tests.yml
      - ${{ replace(replace(package.name, '@fluidframework/', ''), '@fluid-experimental/', 'experimental_') }}_stress_tests
    jobs:
    - job: upload_run_telemetry
      displayName: Upload pipeline run telemetry to Kusto
      pool: Small
      variables:
      - group: ado-feeds

      steps:
      - template: templates/include-telemetry-setup.yml
        parameters:
          devFeedUrl: $(ado-feeds-dev)
          officeFeedUrl: $(ado-feeds-office)
          isCheckoutNeeded: true
      - task: Bash@3
        displayName: Retrieve buildId results
        inputs:
          targetType: 'inline'
          workingDirectory: $(absolutePathToTelemetryGenerator)
          script: |
            echo "creating output folder"
            mkdir -p ${{ variables.testWorkspace }}/timingOutput
            echo "Retrieving pipeline run timeline data command ..."
            echo 'curl -u ":<REDACTED>" "https://dev.azure.com/fluidframework/internal/_apis/build/builds/$BUILD_ID/timeline"'
            curl -u ":$ADO_API_TOKEN" "https://dev.azure.com/fluidframework/internal/_apis/build/builds/$BUILD_ID/timeline\?api-version\=6.0-preview.1" > ${{ variables.testWorkspace }}/timingOutput/output.json
            pwd;
            ls -laR ${{ variables.testWorkspace }}/timingOutput/output.json;
            cat ${{ variables.testWorkspace }}/timingOutput/output.json;
            node --require @ff-internal/aria-logger bin/run --handlerModule $(absolutePathToTelemetryGenerator)/dist/handlers/stageTimingRetriever.js --dir '${{ variables.testWorkspace }}/timingOutput/';
        env:
          BUILD_ID: $(Build.BuildId)
          ADO_API_TOKEN: $(System.AccessToken)
          PIPELINE: 'DdsStressService'
