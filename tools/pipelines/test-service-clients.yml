# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# test-service-clients pipeline

name: $(Build.BuildId)

trigger: none
pr: none

resources:
  pipelines:
  - pipeline: client   # Name of the pipeline resource
    source: Build - client packages
    branch: main # Default branch for manual/scheduled triggers if none is selected
    trigger:
      branches:
      - release/*
      - main
      - next
      - lts

variables:
- group: prague-key-vault
- name: testWorkspace
  value: $(Pipeline.Workspace)/test
- name: testPackage
  value: "@fluidframework/azure-end-to-end-tests"
  readonly: true
- name: testOdspPackage
  value: "@fluid-experimental/odsp-end-to-end-tests"
  readonly: true

stages:
  # Run Azure Client FRS Tests
  - stage: e2e_azure_client_frs
    displayName: e2e - azure client with frs
    dependsOn: []
    jobs:
    - template: templates/include-test-real-service.yml
      parameters:
        poolBuild: Small
        testPackage: ${{ variables.testPackage }}
        testWorkspace: ${{ variables.testWorkspace }}
        testCommand: test:realsvc:azure
        artifactBuildId: $(resources.pipeline.client.runID)
        env:
          FLUID_TEST_LOGGER_PKG_PATH: ${{ variables.testWorkspace }}/node_modules/@ff-internal/aria-logger # Contains getTestLogger impl to inject
          azure__fluid__relay__service__tenantId: $(azure-fluid-relay-service-tenantId)
          azure__fluid__relay__service__endpoint: $(azure-fluid-relay-service-endpoint)
          azure__fluid__relay__service__key: $(azure-fluid-relay-service-key)

  - stage: e2e_azure_client_local_server
    displayName: e2e - azure client with azure local service
    dependsOn: []
    jobs:
    - template: templates/include-test-real-service.yml
      parameters:
        poolBuild: Small
        testPackage: ${{ variables.testPackage }}
        testWorkspace: ${{ variables.testWorkspace }}
        testCommand: test:realsvc:tinylicious
        artifactBuildId: $(resources.pipeline.client.runID)
        env:
          FLUID_TEST_LOGGER_PKG_PATH: ${{ variables.testWorkspace }}/node_modules/@ff-internal/aria-logger # Contains getTestLogger impl to inject
          # Disable colorization for tinylicious logs (not useful when printing to a file)
          logger__colorize: "false" # Need to pass it as string so ADO doesn't convert it into False (capital F) which doesn't work
          logger__morganFormat: tiny

  - stage: e2e_odsp_client_odsp_server
    displayName: e2e - odsp client with odsp service
    dependsOn: []
    jobs:
    - template: templates/include-test-real-service.yml
      parameters:
        poolBuild: Small
        testPackage: ${{ variables.testOdspPackage }}
        testWorkspace: ${{ variables.testWorkspace }}
        testCommand: test:realsvc:odsp:run
        artifactBuildId: $(resources.pipeline.client.runID)
        env:
          FLUID_TEST_LOGGER_PKG_PATH: ${{ variables.testWorkspace }}/node_modules/@ff-internal/aria-logger # Contains getTestLogger impl to inject
          odsp__client__clientId: $(odsp-client-clientId)
          odsp__client__siteUrl: $(odsp-client-siteUrl)
          odsp__client__driveId: $(odsp-client-driveId)
          login__odspclient__spe__test__tenants: $(login-odspclient-spe-test-tenants)

  # Capture pipeline stage results
  - stage: upload_run_telemetry
    displayName: Upload pipeline run telemetry to Kusto
    condition: succeededOrFailed()
    dependsOn:
      - e2e_azure_client_frs
      - e2e_azure_client_local_server
      - e2e_odsp_client_odsp_server
    jobs:
      - job: upload_run_telemetry
        displayName: Upload pipeline run telemetry to Kusto
        pool: Small
        variables:
        - group: ado-feeds
        - name: absolutePathToTelemetryGenerator
          value: $(Build.SourcesDirectory)/tools/telemetry-generator
          readonly: true
        steps:
        - template: templates/include-telemetry-setup.yml
          parameters:
            devFeedUrl: $(ado-feeds-dev)
            officeFeedUrl: $(ado-feeds-office)
            isCheckoutNeeded: true
        - task: Bash@3
          displayName: Retrieve buildId results
          inputs:
            targetType: 'inline'
            workingDirectory: $(absolutePathToTelemetryGenerator)
            script: |
              echo "creating output folder"
              mkdir -p ${{ variables.testWorkspace }}/timingOutput
              echo "Retrieving pipeline run timeline data command ..."
              echo 'curl -u ":<REDACTED>" "https://dev.azure.com/fluidframework/internal/_apis/build/builds/$BUILD_ID/timeline"'
              curl -u ":$ADO_API_TOKEN" "https://dev.azure.com/fluidframework/internal/_apis/build/builds/$BUILD_ID/timeline\?api-version\=6.0-preview.1" > ${{ variables.testWorkspace }}/timingOutput/output.json
              pwd;
              ls -laR ${{ variables.testWorkspace }}/timingOutput/output.json;
              cat ${{ variables.testWorkspace }}/timingOutput/output.json;
              node --require @ff-internal/aria-logger bin/run --handlerModule $(absolutePathToTelemetryGenerator)/dist/handlers/stageTimingRetriever.js --dir '${{ variables.testWorkspace }}/timingOutput/';
          env:
            BUILD_ID: $(Build.BuildId)
            ADO_API_TOKEN: $(System.AccessToken)
            PIPELINE: ServiceClientsEndToEndTests
