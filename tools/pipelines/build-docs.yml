# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# build-docs pipeline
# This pipeline builds the main branch docs each time the client packages are built

name: $(Build.BuildId)

parameters:
  - name: deployOverride
    displayName: Deployment Override (default = based on branch)
    type: string
    default: default
    values:
      - default
      - skip
      - force

variables:
  - group: doc-versions
  - group: storage-vars
  - group: InfoSec-SecurityResults
  - name: repoToTrigger
    value: microsoft/FluidFramework
  - name: latestPipeline
    value: ${{ or(
      eq(variables['Build.SourceBranchName'], 'main'),
      eq(variables['Build.SourceBranchName'], 'pl-test')
      )}}
  - name: n1Branch
    value: ${{ join('/refs/heads/release/', variables['N1_BRANCH']) }}
  - name: n1Pipeline
    value: ${{ eq(variables['Build.SourceBranchName'], variables['N1_BRANCH']) }}
  - name: releasePipeline
    value: ${{ eq(variables['Build.SourceBranchName'], variables['RELEASE_BRANCH']) }}
  - name: validRun
    value: ${{ or(variables.releasePipeline, variables.n1Pipeline, variables.latestPipeline) }}
  - name: Packaging.EnableSBOMSigning
    value: true
  - name: isMain
    value: ${{ eq(variables['Build.SourceBranchName'], 'main') }}
  - name: shouldDeploy
    value: ${{ or(
      eq(parameters.deployOverride, 'force'),
      and(eq(variables.isMain, true), eq(parameters.deployOverride, 'default'))
      )}}

# no PR triggers
trigger:
  branches:
    include:
    - release/*
    - main
pr: none

resources:
  pipelines:
  - pipeline: common_definitions
    source: Build - common-definitions
  - pipeline: common_utils
    source: Build - common-utils
  - pipeline: container_definitions
    source: Build - container-definitions
  - pipeline: core_interfaces
    source: Build - core-interfaces
  - pipeline: driver_definitions
    source: Build - driver-definitions
  - pipeline: protocol_definitions
    source: Build - protocol-definitions
  - pipeline: client
    source: Build - client packages
    trigger:
      branches:
        include:
        - main
        - docs/**
  - pipeline: server
    source: server-routerlicious

stages:
- stage: check
  displayName: Checks
  pool: Small
  jobs:
  - job:
    displayName: Component Detection
    steps:
    - script: |
        echo SourceBranchName: ${{ variables['Build.SourceBranchName'] }}
        echo BASE_URL: $(BASE_URL)
        echo RELEASE_VERSION: $(RELEASE_VERSION)
        echo MAIN_BRANCH_VERSION: $(MAIN_BRANCH_VERSION)
        echo N1_VERSION: $(N1_VERSION)
        echo releasePipeline ${{ variables.releasePipeline }}
        echo latestPipeline ${{ variables.latestPipeline }}
        echo n1Pipeline ${{ variables.n1Pipeline }}
        echo repoToTrigger ${{ variables.repoToTrigger }}
      displayName: 'Show Variables'
    - task: ComponentGovernanceComponentDetection@0
      displayName: Component Detection
      inputs:
        sourceScanPath: docs
        verbosity: Verbose
        scanType: Register
        alertWarningLevel: High

- stage: json
  displayName: 'Combine API Extractor JSON'
  jobs:
    - deployment: upload_json
      displayName: 'Upload combined api-extractor JSON'
      environment: 'fluid-docs-env'
      strategy:
        runOnce:
          deploy:
            steps:
            - template: templates/upload-json-steps.yml
              parameters:
                STORAGE_ACCOUNT: $(STORAGE_ACCOUNT)
                STORAGE_KEY: $(STORAGE_KEY)
                uploadAsLatest: true

- stage: site_build
  displayName: 'Build website'
  dependsOn: json
  jobs:
    - job: build_site
      condition: in(stageDependencies.json.upload_json.result, 'Succeeded', 'SucceededWithIssues')
      steps:
      - checkout: self
        submodules: false
        clean: true

      - download: current
        artifact: api-extractor-combined

      - task: CopyFiles@2
        displayName: 'Copy api-extractor JSON to staging folder'
        inputs:
          contents: '$(Pipeline.Workspace)/api-extractor-combined/**'
          targetFolder: '$(Build.SourcesDirectory)/_api-extractor-temp'

      - task: UseNode@1
        displayName: 'Use Node 14.x'
        inputs:
          version: 14.x

      - task: Npm@1
        displayName: npm ci
        inputs:
          command: 'custom'
          workingDir: '$(Build.SourcesDirectory)/docs'
          customCommand: 'ci'

      - task: Npm@1
        displayName: npm run build
        inputs:
          command: 'custom'
          workingDir: '$(Build.SourcesDirectory)/docs'
          customCommand: 'run build'

      - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
        displayName: 'Generate SBOM'
        inputs:
          BuildDropPath: '$(Build.SourcesDirectory)/docs/public'
          PackageName: 'fluidframework-docs'
          PackageVersion: '$(Build.BuildId)'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish site build artifact'
        inputs:
          PathtoPublish: '$(Build.SourcesDirectory)/docs/public'
          ArtifactName: 'fluidframework-docs'
          publishLocation: 'Container'

      - ${{ if eq(variables.shouldDeploy, true) }}:
        - task: AzureStaticWebApp@0
          displayName: 'Deploy site'
          inputs:
            skip_app_build: true # site was built in previous step
            cwd: $(Build.SourcesDirectory)
            app_location: 'docs/public'
            output_location: ''
            azure_static_web_apps_api_token: $(AZURE_STATIC_WEB_APPS_API_TOKEN)
