# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# deploy-docs pipeline

name: $(Build.BuildId)

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: doc-versions
  - group: storage-vars
  - name: latestPipeline
    value: ${{ or(
      eq(variables['Build.SourceBranchName'], 'master'),
      eq(variables['Build.SourceBranchName'], 'api-pipeline')
      )}}
  # - name: n1Branch
  #   value: ${{ join('/refs/heads/release/', variables['N1_BRANCH']) }}
  - name: n1Pipeline
    value: ${{ eq(variables['Build.SourceBranchName'], variables['N1_BRANCH']) }}
  - name: releasePipeline
    value: ${{ eq(variables['Build.SourceBranchName'], variables['RELEASE_BRANCH']) }}
  - name: validRun
    value: ${{ or(variables.releasePipeline, variables.n1Pipeline, variables.latestPipeline) }}

resources:
  pipelines:
  - pipeline: docs
    source: build-docs
    trigger:
      branches:
        include:
        - release/*
        - master
        - docs/api-pipeline # for testing

# no branch and PR triggers
trigger: none
pr: none

stages:
  - stage: deploy
    displayName: 'Deploy docs'
    jobs:
    # current release
    - ${{ if eq(variables.releasePipeline, true) }}:
      - deployment: current_release
        displayName: 'Current release'
        environment: 'fluid-docs-cdn'
        strategy:
          runOnce:
            deploy:
              steps:
              - template: templates/deploy-docs-steps.yml
                parameters:
                  STORAGE_ACCOUNT: $(STORAGE_ACCOUNT)
                  STORAGE_KEY: $(STORAGE_KEY)
                  DEST_PATH: '/'

      - deployment: current_release_versioned
        displayName: 'Current release (/versions/)'
        environment: 'fluid-docs-cdn'
        strategy:
          runOnce:
            deploy:
              steps:
              - template: templates/deploy-docs-steps.yml
                parameters:
                  STORAGE_ACCOUNT: $(STORAGE_ACCOUNT)
                  STORAGE_KEY: $(STORAGE_KEY)
                  DEST_PATH: '/versions/$(RELEASE_VERSION)/'

    # latest - master branch
    - ${{ if eq(variables.latestPipeline, true) }}:
      - deployment: latest_release
        displayName: 'Main branch'
        environment: 'fluid-docs-cdn'
        strategy:
          runOnce:
            deploy:
              steps:
              - template: templates/deploy-docs-steps.yml
                parameters:
                  STORAGE_ACCOUNT: $(STORAGE_ACCOUNT)
                  STORAGE_KEY: $(STORAGE_KEY)
                  DEST_PATH: '/versions/latest/'

              - template: templates/deploy-docs-steps.yml
                parameters:
                  STORAGE_ACCOUNT: $(STORAGE_ACCOUNT)
                  STORAGE_KEY: $(STORAGE_KEY)
                  DEST_PATH: '/versions/$(MASTER_BRANCH_VERSION)/'
                  artifactName: fluid-docs-version-path

      - deployment: latest_release_versioned
        displayName: 'Main branch (/versions/)'
        environment: 'fluid-docs-cdn'
        strategy:
          runOnce:
            deploy:
              steps:
              - template: templates/deploy-docs-steps.yml
                parameters:
                  STORAGE_ACCOUNT: $(STORAGE_ACCOUNT)
                  STORAGE_KEY: $(STORAGE_KEY)
                  DEST_PATH: '/versions/$(MASTER_BRANCH_VERSION)/'

    # n-1 release
    - ${{ if eq(variables.n1Pipeline, true) }}:
      - deployment: old_release
        displayName: 'N-1 release (/versions/)'
        environment: 'fluid-docs-cdn'
        strategy:
          runOnce:
            deploy:
              steps:
              - template: templates/deploy-docs-steps.yml
                parameters:
                  STORAGE_ACCOUNT: $(STORAGE_ACCOUNT)
                  STORAGE_KEY: $(STORAGE_KEY)
                  DEST_PATH: '/versions/$(N1_VERSION)/'
