#!/usr/bin/env node
const mod = require("../dist/assignTestPorts.js");
const nconf = require("nconf");

nconf.argv().env().defaults({
	'package-manager': 'pnpm'
});

const firstArg = process.argv[2];

if (firstArg === "--help" || firstArg === "-h" || (firstArg !== undefined && !Number.isInteger(firstArg)) ) {
	console.log(
		"Usage: assign-test-ports [initialPort]\n\n" +
		"Assigns a port to each package in the current pnpm workspace so they can run jest/puppeteer\n" +
		"tests concurrently without port conflicts, and writes the port mapping to a file.\n\n" +
		"The initial port is optional and defaults to 9000.\n\n" +
		"The port mapping file is written to the OS' temporary storage folder (e.g. /tmp/testportmap.json)."
	);
	process.exit(0);
}

// Note: we support using lerna to resolve package info as the LTS branch still has some lerna usage at the time of writing.
// Once we no longer need to support any FF branches using lerna, this logic can be removed.
const packageManager = nconf.get('package-manager');
if (!['lerna', 'pnpm'].includes(packageManager)) {
	console.error(`Unsupported package manager: ${packageManager}. Please select one of 'lerna' or 'pnpm'.`);
	process.exit(1);
}

// We used to hardcode port 8081 as the initial one
// but as of 2024-11-25 port 8084 is used by something in the build agent image.
// If a package that has jest tests ends up assigned that port,
// jest will fail to start.
// So try to use a port range where nothing will be listening.
const initialPortString = firstArg ?? "9000";

const initialPort = Number.parseInt(initialPortString, 10);
mod.writePortMapFile(initialPort, packageManager);
