diff --git a/lib/enhancers/ValidationEnhancer.js b/lib/enhancers/ValidationEnhancer.js
index cdb0b22ed2e06592ea1c5f9dd3d18ae2c51b2484..202d2f0b44dad1206fff946e0275bba1e6691ade 100644
--- a/lib/enhancers/ValidationEnhancer.js
+++ b/lib/enhancers/ValidationEnhancer.js
@@ -187,7 +187,8 @@ class ValidationEnhancer {
             else {
                 continue;
             }
-            if (collectorEntity && collectorEntity.consumable) {
+            // BUG MITIGATION: Always check release tag compatibility.
+            {
                 if (api_extractor_model_1.ReleaseTag.compare(declarationReleaseTag, referencedReleaseTag) > 0) {
                     collector.messageRouter.addAnalyzerIssue(ExtractorMessageId_1.ExtractorMessageId.IncompatibleReleaseTags, `The symbol "${astDeclaration.astSymbol.localName}"` +
                         ` is marked as ${api_extractor_model_1.ReleaseTag.getTagName(declarationReleaseTag)},` +
@@ -195,7 +196,7 @@ class ValidationEnhancer {
                         ` which is marked as ${api_extractor_model_1.ReleaseTag.getTagName(referencedReleaseTag)}`, astDeclaration);
                 }
             }
-            else {
+            if (!(collectorEntity === null || collectorEntity === void 0 ? void 0 : collectorEntity.consumable)) {
                 const entryPointFilename = path.basename(collector.workingPackage.entryPointSourceFile.fileName);
                 if (!alreadyWarnedEntities.has(referencedEntity)) {
                     alreadyWarnedEntities.add(referencedEntity);
