{"version":3,"file":"browserPackage.js","sourceRoot":"","sources":["../src/browserPackage.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAiB,cAAc,EAA4B,MAAM,iCAAiC,CAAC;AA6C1G;;;GAGG;AACH,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,QAAa,EAA+C,EAAE;;IAChG,OAAA,cAAc,CAAC,QAAQ,CAAC;WACrB,0BAAO,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,KAAK,0CAAE,OAAO,0CAAE,GAAG,0CAAE,OAAO,CAAA,KAAK,QAAQ;WAC1D,KAAK,CAAC,OAAO,mBAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,KAAK,0CAAE,OAAO,0CAAE,GAAG,0CAAE,KAAK,CAAC,CAAA;CAAA,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidPackage, isFluidPackage, IFluidPackageEnvironment } from \"@fluidframework/core-interfaces\";\n\n/**\n * A specific Fluid package environment for browsers\n */\nexport interface IFluidBrowserPackageEnvironment extends IFluidPackageEnvironment{\n    /**\n     * The Universal Module Definition (umd) target specifics the scripts necessary for\n     *  loading a packages in a browser environment and finding its entry point\n     */\n    umd: {\n        /**\n         * The bundled js files for loading this package. These files will be loaded\n         * and executed in order\n         */\n        files: string[];\n\n        /**\n         * The global name that the script entry points will be exposed.\n         * This entry point should be an IFluidModule\n         */\n        library: string;\n\n    };\n}\n\n/**\n * A Fluid package for specification for browser environments\n */\nexport interface IFluidBrowserPackage extends IFluidPackage {\n    /**\n     * {@inheritDoc @fluidframework/core-interfaces#IFluidPackage.fluid}\n     */\n    fluid: {\n        /**\n         * The browser specific package information for this package\n         */\n        browser: IFluidBrowserPackageEnvironment;\n        /**\n         * {@inheritDoc @fluidframework/core-interfaces#IFluidPackage.fluid.environment}\n         */\n        [environment: string]: IFluidPackageEnvironment;\n    }\n}\n\n/**\n * Determines if any object is an IFluidBrowserPackage\n * @param maybePkg - The object to check for compatibility with IFluidBrowserPackage\n */\nexport const isFluidBrowserPackage = (maybePkg: any): maybePkg is Readonly<IFluidBrowserPackage>  =>\n    isFluidPackage(maybePkg)\n    && typeof maybePkg?.fluid?.browser?.umd?.library === \"string\"\n    && Array.isArray(maybePkg?.fluid?.browser?.umd?.files);\n"]}