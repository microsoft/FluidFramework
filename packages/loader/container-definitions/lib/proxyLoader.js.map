{"version":3,"file":"proxyLoader.js","sourceRoot":"","sources":["../src/proxyLoader.ts"],"names":[],"mappings":"AAAA;;;GAGG","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidResolvedUrl } from \"@fluidframework/driver-definitions\";\nimport { ILoader, ILoaderOptions } from \"./loader\";\n\n/**\n * Abstraction layer to support different Loaders in different Node execution contexts\n */\nexport interface IProxyLoaderFactory {\n    /**\n     * Loader environment\n     */\n    environment: string;\n\n    /**\n     * Returns an instance of ILoader loaded inside an execution context.\n     */\n    createProxyLoader(\n        id: string,\n        options: ILoaderOptions,\n        resolved: IFluidResolvedUrl,\n        fromSequenceNumber: number): Promise<ILoader>;\n}\n"]}