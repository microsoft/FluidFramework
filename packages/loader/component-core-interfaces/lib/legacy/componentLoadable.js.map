{"version":3,"file":"componentLoadable.js","sourceRoot":"","sources":["../../src/legacy/componentLoadable.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAIH,MAAM,CAAC,MAAM,kBAAkB,GAAoC,oBAAoB,CAAC;AAgBxF,MAAM,CAAC,MAAM,kBAAkB,GAAoC,oBAAoB,CAAC;AAUxF,MAAM,CAAC,MAAM,uBAAuB,GAAyC,yBAAyB,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IComponentHandle } from \"./handles\";\n\nexport const IComponentLoadable: keyof IProvideComponentLoadable = \"IComponentLoadable\";\n\nexport interface IProvideComponentLoadable {\n    readonly IComponentLoadable: IComponentLoadable;\n}\n/**\n * A shared component has a URL from which it can be referenced\n */\nexport interface IComponentLoadable extends IProvideComponentLoadable {\n    // Absolute URL to the component within the document\n    readonly url: string;\n\n    // Handle to the loadable component\n    handle: IComponentHandle;\n}\n\nexport const IComponentRunnable: keyof IProvideComponentRunnable = \"IComponentRunnable\";\n\nexport interface IProvideComponentRunnable {\n    readonly IComponentRunnable: IComponentRunnable;\n}\nexport interface IComponentRunnable {\n    run(...args: any[]): Promise<void>;\n    stop(reason?: string): void;\n}\n\nexport const IComponentConfiguration: keyof IProvideComponentConfiguration = \"IComponentConfiguration\";\n\nexport interface IProvideComponentConfiguration {\n    readonly IComponentConfiguration: IComponentConfiguration;\n}\n\nexport interface IComponentConfiguration extends IProvideComponentConfiguration {\n    canReconnect: boolean;\n    scopes: string[];\n}\n"]}