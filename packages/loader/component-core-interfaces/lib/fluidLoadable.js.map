{"version":3,"file":"fluidLoadable.js","sourceRoot":"","sources":["../src/fluidLoadable.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAIH,MAAM,CAAC,MAAM,cAAc,GAAgC,gBAAgB,CAAC;AAgB5E,MAAM,CAAC,MAAM,cAAc,GAAgC,gBAAgB,CAAC;AAU5E,MAAM,CAAC,MAAM,mBAAmB,GAAqC,qBAAqB,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidHandle } from \"./handles\";\n\nexport const IFluidLoadable: keyof IProvideFluidLoadable = \"IFluidLoadable\";\n\nexport interface IProvideFluidLoadable {\n    readonly IFluidLoadable: IFluidLoadable;\n}\n/**\n * A shared FluidObject has a URL from which it can be referenced\n */\nexport interface IFluidLoadable extends IProvideFluidLoadable {\n    // Absolute URL to the Fluid within the document\n    readonly url: string;\n\n    // Handle to the loadable FluidObject\n    handle: IFluidHandle;\n}\n\nexport const IFluidRunnable: keyof IProvideFluidRunnable = \"IFluidRunnable\";\n\nexport interface IProvideFluidRunnable {\n    readonly IFluidRunnable: IFluidRunnable;\n}\nexport interface IFluidRunnable {\n    run(...args: any[]): Promise<void>;\n    stop(reason?: string): void;\n}\n\nexport const IFluidConfiguration: keyof IProvideFluidConfiguration = \"IFluidConfiguration\";\n\nexport interface IProvideFluidConfiguration {\n    readonly IFluidConfiguration: IFluidConfiguration;\n}\n\nexport interface IFluidConfiguration extends IProvideFluidConfiguration {\n    canReconnect: boolean;\n    scopes: string[];\n}\n"]}