{"version":3,"file":"fluidRouter.js","sourceRoot":"","sources":["../src/fluidRouter.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAkBH,MAAM,CAAN,IAAY,YAEX;AAFD,WAAY,YAAY;IACpB,6DAA6C,CAAA;AACjD,CAAC,EAFW,YAAY,KAAZ,YAAY,QAEvB;AAMD,MAAM,CAAC,MAAM,YAAY,GAA8B,cAAc,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport interface IRequestHeader {\n    [index: string]: any;\n}\n\nexport interface IRequest {\n    url: string;\n    headers?: IRequestHeader;\n}\n\nexport interface IResponse {\n    mimeType: string;\n    status: number;\n    value: any;\n    headers?: { [key: string]: any };\n}\n\nexport enum DriverHeader {\n    summarizingClient = \"fluid-client-summarizer\",\n}\n\nexport interface IDriverHeader {\n    [DriverHeader.summarizingClient]: boolean;\n}\n\nexport const IFluidRouter: keyof IProvideFluidRouter = \"IFluidRouter\";\n\n/**\n * Request routing\n */\nexport interface IProvideFluidRouter {\n    readonly IFluidRouter: IFluidRouter;\n}\nexport interface IFluidRouter extends IProvideFluidRouter {\n    request(request: IRequest): Promise<IResponse>;\n}\n"]}