/*!
 * Copyright (c) Microsoft Corporation and contributors. All rights reserved.
 * Licensed under the MIT License.
 */

/*
 * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
 * Generated by flub generate:typetests in @fluid-tools/build-cli.
 */

import type { TypeOnly, MinimalType, FullType, requireAssignableTo } from "@fluidframework/build-tools";
import type * as old from "@fluidframework/shared-summary-block-previous";

import type * as current from "../../index.js";

declare type MakeUnusedImportErrorsGoAway<T> = TypeOnly<T> | MinimalType<T> | FullType<T> | typeof old | typeof current | requireAssignableTo<true, true>;

/*
 * Validate forward compatibility by using the old type in place of the current type.
 * If this test starts failing, it indicates a change that is not forward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "Class_SharedSummaryBlock": {"forwardCompat": false}
 */
declare type old_as_current_for_Class_SharedSummaryBlock = requireAssignableTo<TypeOnly<old.SharedSummaryBlock>, TypeOnly<current.SharedSummaryBlock>>

/*
 * Validate backward compatibility by using the current type in place of the old type.
 * If this test starts failing, it indicates a change that is not backward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "Class_SharedSummaryBlock": {"backCompat": false}
 */
declare type current_as_old_for_Class_SharedSummaryBlock = requireAssignableTo<TypeOnly<current.SharedSummaryBlock>, TypeOnly<old.SharedSummaryBlock>>

/*
 * Validate backward compatibility by using the current type in place of the old type.
 * If this test starts failing, it indicates a change that is not backward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "Class_SharedSummaryBlockFactory": {"backCompat": false}
 */
declare type current_as_old_for_Class_SharedSummaryBlockFactory = requireAssignableTo<TypeOnly<current.SharedSummaryBlockFactory>, TypeOnly<old.SharedSummaryBlockFactory>>

/*
 * Validate backward compatibility by using the current type in place of the old type.
 * If this test starts failing, it indicates a change that is not backward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "ClassStatics_SharedSummaryBlock": {"backCompat": false}
 */
declare type current_as_old_for_ClassStatics_SharedSummaryBlock = requireAssignableTo<TypeOnly<typeof current.SharedSummaryBlock>, TypeOnly<typeof old.SharedSummaryBlock>>

/*
 * Validate backward compatibility by using the current type in place of the old type.
 * If this test starts failing, it indicates a change that is not backward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "ClassStatics_SharedSummaryBlockFactory": {"backCompat": false}
 */
declare type current_as_old_for_ClassStatics_SharedSummaryBlockFactory = requireAssignableTo<TypeOnly<typeof current.SharedSummaryBlockFactory>, TypeOnly<typeof old.SharedSummaryBlockFactory>>

/*
 * Validate forward compatibility by using the old type in place of the current type.
 * If this test starts failing, it indicates a change that is not forward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "Interface_ISharedSummaryBlock": {"forwardCompat": false}
 */
declare type old_as_current_for_Interface_ISharedSummaryBlock = requireAssignableTo<TypeOnly<old.ISharedSummaryBlock>, TypeOnly<current.ISharedSummaryBlock>>

/*
 * Validate backward compatibility by using the current type in place of the old type.
 * If this test starts failing, it indicates a change that is not backward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "Interface_ISharedSummaryBlock": {"backCompat": false}
 */
declare type current_as_old_for_Interface_ISharedSummaryBlock = requireAssignableTo<TypeOnly<current.ISharedSummaryBlock>, TypeOnly<old.ISharedSummaryBlock>>
