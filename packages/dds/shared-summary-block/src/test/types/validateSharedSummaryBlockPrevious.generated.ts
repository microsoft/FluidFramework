/*!
 * Copyright (c) Microsoft Corporation and contributors. All rights reserved.
 * Licensed under the MIT License.
 */

/*
 * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
 * Generated by flub generate:typetests in @fluid-tools/build-cli.
 */

import type * as old from "@fluidframework/shared-summary-block-previous/internal";

import type * as current from "../../index.js";

// See 'build-tools/src/type-test-generator/compatibility.ts' for more information.
type TypeOnly<T> = T extends number
	? number
	: T extends string
	? string
	: T extends boolean | bigint | symbol
	? T
	: {
			[P in keyof T]: TypeOnly<T[P]>;
	  };

/*
 * Validate forward compatibility by using the old type in place of the current type.
 * If this test starts failing, it indicates a change that is not forward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "InterfaceDeclaration_ISharedSummaryBlock": {"forwardCompat": false}
 */
declare function get_old_InterfaceDeclaration_ISharedSummaryBlock():
    TypeOnly<old.ISharedSummaryBlock>;
declare function use_current_InterfaceDeclaration_ISharedSummaryBlock(
    use: TypeOnly<current.ISharedSummaryBlock>): void;
use_current_InterfaceDeclaration_ISharedSummaryBlock(
    // @ts-expect-error compatibility expected to be broken
    get_old_InterfaceDeclaration_ISharedSummaryBlock());

/*
 * Validate backward compatibility by using the current type in place of the old type.
 * If this test starts failing, it indicates a change that is not backward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "InterfaceDeclaration_ISharedSummaryBlock": {"backCompat": false}
 */
declare function get_current_InterfaceDeclaration_ISharedSummaryBlock():
    TypeOnly<current.ISharedSummaryBlock>;
declare function use_old_InterfaceDeclaration_ISharedSummaryBlock(
    use: TypeOnly<old.ISharedSummaryBlock>): void;
use_old_InterfaceDeclaration_ISharedSummaryBlock(
    // @ts-expect-error compatibility expected to be broken
    get_current_InterfaceDeclaration_ISharedSummaryBlock());

/*
 * Validate forward compatibility by using the old type in place of the current type.
 * If this test starts failing, it indicates a change that is not forward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "RemovedClassDeclaration_SharedSummaryBlock": {"forwardCompat": false}
 */

/*
 * Validate backward compatibility by using the current type in place of the old type.
 * If this test starts failing, it indicates a change that is not backward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "RemovedClassDeclaration_SharedSummaryBlock": {"backCompat": false}
 */

/*
 * Validate forward compatibility by using the old type in place of the current type.
 * If this test starts failing, it indicates a change that is not forward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "RemovedClassDeclaration_SharedSummaryBlockFactory": {"forwardCompat": false}
 */

/*
 * Validate backward compatibility by using the current type in place of the old type.
 * If this test starts failing, it indicates a change that is not backward compatible.
 * To acknowledge the breaking change, add the following to package.json under
 * typeValidation.broken:
 * "RemovedClassDeclaration_SharedSummaryBlockFactory": {"backCompat": false}
 */
