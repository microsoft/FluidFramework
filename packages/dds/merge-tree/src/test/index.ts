/*!
 * Copyright (c) Microsoft Corporation and contributors. All rights reserved.
 * Licensed under the MIT License.
 */

export { specToSegment, TestClient, TestClientRevertibleDriver, createRevertDriver } from "./testClient";
export { checkTextMatchRelative, TestServer } from "./testServer";
export {
	loadTextFromFile,
	loadTextFromFileWithMarkers,
	insertMarker,
	insertText,
	insertSegments,
	markRangeRemoved,
	nodeOrdinalsHaveIntegrity,
	countOperations,
	validatePartialLengths,
} from "./testUtils";
export {
	doOverRange,
	runMergeTreeOperationRunner,
	generateOperationMessagesForClients,
	generateClientNames,
	applyMessages,
	TestOperation,
	removeRange,
	annotateRange,
	insertAtRefPos,
	IConfigRange,
	IMergeTreeOperationRunnerConfig,
	ReplayGroup,
	replayResultsPath,
} from "./mergeTreeOperationRunner";
export { TSTResult, TSTNode, ProxString, TST } from "./tst";
export { ClientSeq, clientSeqComparer, LRUSegment, MergeTree } from "../mergeTree";
export { MergeTreeTextHelper } from "../MergeTreeTextHelper";
export { SnapshotLegacy } from "../snapshotlegacy";
export {
	IIntegerRange,
	Client,
	ConflictAction,
	Dictionary,
	IRBAugmentation,
	IRBMatcher,
	KeyComparer,
	Property,
	PropertyAction,
	QProperty,
	SortedDictionary,
	RedBlackTree,
	Stack,
	UniversalSequenceNumber,
	UnassignedSequenceNumber,
	TreeMaintenanceSequenceNumber,
	LocalClientId,
	NonCollabClient,
	createDetachedLocalReferencePosition,
	LocalReferencePosition,
	LocalReferenceCollection,
	toRemovalInfo,
	ordinalToArray,
	internedSpaces,
	IMergeNodeCommon,
	IMergeNode,
	IMergeBlock,
	IHierBlock,
	IRemovalInfo,
	ISegment,
	IMarkerModifiedAction,
	ISegmentAction,
	ISegmentChanges,
	BlockAction,
	NodeAction,
	IncrementalSegmentAction,
	IncrementalBlockAction,
	BlockUpdateActions,
	InsertContext,
	SegmentActions,
	IncrementalSegmentActions,
	SearchResult,
	MergeTreeStats,
	SegmentGroup,
	MergeNode,
	MaxNodesInBlock,
	MergeBlock,
	BaseSegment,
	reservedMarkerIdKey,
	reservedMarkerSimpleTypeKey,
	IJSONMarkerSegment,
	Marker,
	IncrementalExecOp,
	IncrementalMapState,
	CollaborationWindow,
	compareNumbers,
	compareStrings,
	IConsensusInfo,
	SegmentAccumulator,
	MinListener,
	MergeTreeDeltaOperationType,
	MergeTreeMaintenanceType,
	MergeTreeDeltaOperationTypes,
	IMergeTreeDeltaCallbackArgs,
	IMergeTreeSegmentDelta,
	IMergeTreeDeltaOpArgs,
	IMergeTreeClientSequenceArgs,
	MergeTreeDeltaCallback,
	IMergeTreeMaintenanceCallbackArgs,
	MergeTreeMaintenanceCallback,
	TrackingGroup,
	TrackingGroupCollection,
	createAnnotateMarkerOp,
	createAnnotateRangeOp,
	createRemoveRangeOp,
	createInsertSegmentOp,
	createInsertOp,
	createGroupOp,
	ReferenceType,
	IMarkerDef,
	MergeTreeDeltaType,
	IMergeTreeDelta,
	IRelativePosition,
	IMergeTreeInsertMsg,
	IMergeTreeRemoveMsg,
	ICombiningOp,
	IMergeTreeAnnotateMsg,
	IMergeTreeGroupMsg,
	IJSONSegment,
	IMergeTreeDeltaOp,
	IMergeTreeOp,
	combine,
	matchProperties,
	extend,
	clone,
	addProperties,
	extendIfUndefined,
	createMap,
	MapLike,
	PropertySet,
	IConsensusValue,
	SegmentGroupCollection,
	PropertiesRollback,
	PropertiesManager,
	SortedSegmentSet,
	IJSONTextSegment,
	TextSegment,
	IMergeTreeTextHelper,
	refTypeIncludesFlag,
	refHasTileLabel,
	refHasRangeLabel,
	refHasTileLabels,
	refHasRangeLabels,
	minReferencePosition,
	maxReferencePosition,
	compareReferencePositions,
	reservedTileLabelsKey,
	reservedRangeLabelsKey,
	refGetTileLabels,
	refGetRangeLabels,
	ReferencePosition,
	RangeStackMap,
	DetachedReferencePosition,
} from "..";
