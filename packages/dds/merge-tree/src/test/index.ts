/*!
 * Copyright (c) Microsoft Corporation and contributors. All rights reserved.
 * Licensed under the MIT License.
 */

export { createRevertDriver, specToSegment, TestClient, TestClientRevertibleDriver } from "./testClient";
export { checkTextMatchRelative, TestServer } from "./testServer";
export {
	countOperations,
	insertMarker,
	insertSegments,
	insertText,
	loadTextFromFile,
	loadTextFromFileWithMarkers,
	markRangeRemoved,
	nodeOrdinalsHaveIntegrity,
	validatePartialLengths,
} from "./testUtils";
export {
	annotateRange,
	applyMessages,
	doOverRange,
	generateClientNames,
	generateOperationMessagesForClients,
	IConfigRange,
	IMergeTreeOperationRunnerConfig,
	insertAtRefPos,
	removeRange,
	ReplayGroup,
	replayResultsPath,
	runMergeTreeOperationRunner,
	TestOperation,
} from "./mergeTreeOperationRunner";
export { ProxString, TST, TSTNode, TSTResult } from "./tst";
export { ClientSeq, clientSeqComparer, LRUSegment, MergeTree } from "../mergeTree";
export { MergeTreeTextHelper } from "../MergeTreeTextHelper";
export { SnapshotLegacy } from "../snapshotlegacy";
export {
	addProperties,
	appendToMergeTreeDeltaRevertibles,
	BaseSegment,
	BlockAction,
	BlockUpdateActions,
	Client,
	clone,
	CollaborationWindow,
	combine,
	compareNumbers,
	compareReferencePositions,
	compareStrings,
	ConflictAction,
	createAnnotateMarkerOp,
	createAnnotateRangeOp,
	createDetachedLocalReferencePosition,
	createGroupOp,
	createInsertOp,
	createInsertSegmentOp,
	createMap,
	createRemoveRangeOp,
	debugMarkerToString,
	DetachedReferencePosition,
	Dictionary,
	discardMergeTreeDeltaRevertible,
	extend,
	extendIfUndefined,
	ICombiningOp,
	IConsensusInfo,
	IConsensusValue,
	IHierBlock,
	IIntegerRange,
	IJSONMarkerSegment,
	IJSONSegment,
	IJSONTextSegment,
	IMarkerDef,
	IMarkerModifiedAction,
	IMergeBlock,
	IMergeNode,
	IMergeNodeCommon,
	IMergeTreeAnnotateMsg,
	IMergeTreeClientSequenceArgs,
	IMergeTreeDelta,
	IMergeTreeDeltaCallbackArgs,
	IMergeTreeDeltaOp,
	IMergeTreeDeltaOpArgs,
	IMergeTreeGroupMsg,
	IMergeTreeInsertMsg,
	IMergeTreeMaintenanceCallbackArgs,
	IMergeTreeOp,
	IMergeTreeRemoveMsg,
	IMergeTreeSegmentDelta,
	IMergeTreeTextHelper,
	IncrementalBlockAction,
	IncrementalExecOp,
	IncrementalMapState,
	IncrementalSegmentAction,
	IncrementalSegmentActions,
	InsertContext,
	internedSpaces,
	IRBAugmentation,
	IRBMatcher,
	IRelativePosition,
	IRemovalInfo,
	ISegment,
	ISegmentAction,
	ISegmentChanges,
	KeyComparer,
	LocalClientId,
	LocalReferenceCollection,
	LocalReferencePosition,
	MapLike,
	Marker,
	matchProperties,
	MaxNodesInBlock,
	maxReferencePosition,
	MergeBlock,
	MergeNode,
	MergeTreeDeltaCallback,
	MergeTreeDeltaOperationType,
	MergeTreeDeltaOperationTypes,
	MergeTreeDeltaRevertible,
	MergeTreeDeltaType,
	MergeTreeMaintenanceCallback,
	MergeTreeMaintenanceType,
	MergeTreeRevertibleDriver,
	MergeTreeStats,
	MinListener,
	minReferencePosition,
	NodeAction,
	NonCollabClient,
	ordinalToArray,
	PropertiesManager,
	PropertiesRollback,
	Property,
	PropertyAction,
	PropertySet,
	QProperty,
	RangeStackMap,
	RBColor,
	RBNode,
	RBNodeActions,
	RedBlackTree,
	ReferencePosition,
	ReferenceType,
	refGetRangeLabels,
	refGetTileLabels,
	refHasRangeLabel,
	refHasRangeLabels,
	refHasTileLabel,
	refHasTileLabels,
	refTypeIncludesFlag,
	reservedMarkerIdKey,
	reservedMarkerSimpleTypeKey,
	reservedRangeLabelsKey,
	reservedTileLabelsKey,
	revertMergeTreeDeltaRevertibles,
	SearchResult,
	SegmentAccumulator,
	SegmentActions,
	SegmentGroup,
	SegmentGroupCollection,
	SortedDictionary,
	SortedSegmentSet,
	SortedSegmentSetItem,
	SortedSet,
	Stack,
	TextSegment,
	toRemovalInfo,
	Trackable,
	TrackingGroup,
	TrackingGroupCollection,
	TreeMaintenanceSequenceNumber,
	UnassignedSequenceNumber,
	UniversalSequenceNumber,
} from "..";
