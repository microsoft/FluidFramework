{"version":3,"file":"odspRequest.js","sourceRoot":"","sources":["../src/odspRequest.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,KAA4C,MAAM,OAAO,CAAC;AACjE,OAAO,EAEH,oBAAoB,GACvB,MAAM,YAAY,CAAC;AAUpB,MAAM,CAAC,KAAK,UAAU,QAAQ,CAC1B,GAAW,EACX,eAAqC;IAErC,OAAO,WAAW,CAAC,eAAe,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;AAClF,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,QAAQ,CAC1B,GAAW,EACX,eAAqC;IAErC,OAAO,WAAW,CAAC,eAAe,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;AAC7F,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,SAAS,CAC3B,GAAW,EACX,IAAS,EACT,eAAqC;IAErC,OAAO,WAAW,CAAC,eAAe,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;AACzF,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,eAAe,CAAC,GAAW,EAAE,IAAS;IACxD,OAAO,eAAe,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AAC9D,CAAC;AAED,KAAK,UAAU,WAAW,CACtB,eAAqC,EACrC,eAA6D;IAE7D,OAAO,oBAAoB,CACvB,eAAe,EACf,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,eAAe,CAAC,KAAK,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CACzE,CAAC;AACN,CAAC;AAED,KAAK,UAAU,eAAe,CAAC,eAA6C;;IACxE,IAAI,QAAuB,CAAC;IAC5B,IAAI;QACA,QAAQ,GAAG,MAAM,eAAe,EAAE,CAAC;KACtC;IAAC,OAAO,KAAK,EAAE;QACZ,gBAAI,KAAK,0CAAE,QAAQ,0CAAE,MAAM,EAAE;YACzB,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;SAC7B;aAAM;YACH,MAAM,KAAK,CAAC;SACf;KACJ;IACD,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC;AACvF,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,OAAe,EAAE,aAA6B;IAClF,MAAM,KAAK,GAAuB,KAAK,CAAC,OAAO,CAAC,CAAC;IACjD,KAAK,CAAC,aAAa,GAAG,aAAa,CAAC;IACpC,OAAO,KAAK,CAAC;AACjB,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport Axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\nimport {\n    IOdspAuthRequestInfo,\n    authRequestWithRetry,\n} from \"./odspAuth\";\n\nexport interface IRequestResult {\n    href: string | undefined;\n    status: number;\n    data: any;\n}\n\nexport type RequestResultError = Error & { requestResult?: IRequestResult };\n\nexport async function getAsync(\n    url: string,\n    authRequestInfo: IOdspAuthRequestInfo,\n): Promise<IRequestResult> {\n    return authRequest(authRequestInfo, async (config) => Axios.get(url, config));\n}\n\nexport async function putAsync(\n    url: string,\n    authRequestInfo: IOdspAuthRequestInfo,\n): Promise<IRequestResult> {\n    return authRequest(authRequestInfo, async (config) => Axios.put(url, undefined, config));\n}\n\nexport async function postAsync(\n    url: string,\n    body: any,\n    authRequestInfo: IOdspAuthRequestInfo,\n): Promise<IRequestResult> {\n    return authRequest(authRequestInfo, async (config) => Axios.post(url, body, config));\n}\n\nexport async function unauthPostAsync(url: string, body: any): Promise<IRequestResult> {\n    return safeRequestCore(async () => Axios.post(url, body));\n}\n\nasync function authRequest(\n    authRequestInfo: IOdspAuthRequestInfo,\n    requestCallback: (config: AxiosRequestConfig) => Promise<any>,\n): Promise<IRequestResult> {\n    return authRequestWithRetry(\n        authRequestInfo,\n        async (config) => safeRequestCore(async () => requestCallback(config)),\n    );\n}\n\nasync function safeRequestCore(requestCallback: () => Promise<AxiosResponse>): Promise<IRequestResult> {\n    let response: AxiosResponse;\n    try {\n        response = await requestCallback();\n    } catch (error) {\n        if (error?.response?.status) {\n            response = error.response;\n        } else {\n            throw error;\n        }\n    }\n    return { href: response.config.url, status: response.status, data: response.data };\n}\n\nexport function createErrorFromResponse(message: string, requestResult: IRequestResult): RequestResultError {\n    const error: RequestResultError = Error(message);\n    error.requestResult = requestResult;\n    return error;\n}\n"]}