{{<layout}}

{{$content}}
    <div id="content"></div>
{{/content}}

{{$scripts}}
    {{#scripts}}
        {{#scripts}}
        <script id="{{id}}" src="{{url}}" async></script>
        {{/scripts}}
    {{/scripts}}

    <script>
        var cache = {{{ cache }}};
        var timings = "{{ timings }}";
        {{#chaincode}}
        var chaincode = {{{ chaincode }}};
        {{/chaincode}}
        {{^chaincode}}
        var chaincode;
        {{/chaincode}}
        var url = "{{ url }}";
        var resolved = {{{ resolved }}};
        var jwt = "{{ jwt }}";
        var npm = "{{ npm }}";
        var config = {{{ config }}};
        var clientId = "{{ clientId }}";

        {{#scripts}}
        var scriptIds = [
            {{#scripts}}
            "{{id}}",
            {{/scripts}}
        ];
        {{/scripts}}
        {{^scripts}}
        var scriptIds = [];
        {{/scripts}}
  
        containerP = controllers.loader.initialize(
            window.location.href,
            resolved,
            cache,
            chaincode,
            scriptIds,
            npm,
            jwt,
            config,
            clientId,
            user);

        const connectionDiv = document.getElementById("connection-state");

        function quorumState(container) {
            if (container.getQuorum().getMember(container.clientId)) {
                return "connected";
            } else if (container.audience.getMember(container.clientId)) {
                return "connected (read-only)";
            } else {
                return "connected (???)";
            }
        }

        containerP.then((container) => {
            container.on("disconnected", () => {
                connectionDiv.innerHTML = "disconnected";
            });
            container.on("joining", () => {
                connectionDiv.innerHTML = "joining...";
            });
            container.on("connected", () => {
                connectionDiv.innerHTML = quorumState(container);
            });

            container.getQuorum().on("addMember", () => {
                connectionDiv.innerHTML = quorumState(container);
            });
            container.getQuorum().on("removeMember", () => {
                connectionDiv.innerHTML = quorumState(container);
            });

            container.audience.on("addMember", () => {
                connectionDiv.innerHTML = quorumState(container);
            });
            container.audience.on("removeMember", () => {
                connectionDiv.innerHTML = quorumState(container);
            });
        });

    </script>
{{/scripts}}

{{/layout}}
