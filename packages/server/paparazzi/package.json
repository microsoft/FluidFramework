{
  "name": "@microsoft/fluid-server-paparazzi",
  "version": "0.12.0",
  "description": "Server to load document and run intelligent agents",
  "repository": "microsoft/FluidFramework",
  "license": "MIT",
  "author": "Microsoft",
  "sideEffects": false,
  "main": "dist/index.js",
  "browser": {
    "request": "xhr"
  },
  "types": "dist/index.d.ts",
  "scripts": {
    "build": "concurrently npm:build:compile npm:tslint",
    "build:compile": "npm run tsc",
    "build:compile:min": "npm run build:compile",
    "build:full": "npm run build",
    "build:full:compile": "npm run build:compile",
    "clean": "rimraf dist *.tsbuildinfo *.build.log",
    "docker-run": "docker run --rm -v $(pwd):/usr/src/server -w /usr/src/server node:8.14.0-slim",
    "paparazzi": "node dist/index.js",
    "paparazzi:debug": "node --inspect=0.0.0.0:5858 dist/index.js",
    "test": "mocha --recursive dist/test",
    "test:coverage": "nyc npm test -- --reporter mocha-junit-reporter --reporter-options mochaFile=nyc/junit-report.xml",
    "tsc": "tsc",
    "tslint": "tslint --project tsconfig.json --format verbose"
  },
  "dependencies": {
    "@microsoft/fluid-container-definitions": "^0.12.0",
    "@microsoft/fluid-core-utils": "^0.12.0",
    "@microsoft/fluid-driver-definitions": "^0.12.0",
    "@microsoft/fluid-gitresources": "^0.12.0",
    "@microsoft/fluid-merge-tree": "^0.12.0",
    "@microsoft/fluid-protocol-definitions": "^0.12.0",
    "@microsoft/fluid-routerlicious-driver": "^0.12.0",
    "@microsoft/fluid-routerlicious-host": "^0.12.0",
    "@microsoft/fluid-server-agent": "^0.12.0",
    "@microsoft/fluid-server-kafka-orderer": "^0.12.0",
    "@microsoft/fluid-server-lambdas": "^0.12.0",
    "@microsoft/fluid-server-lambdas-driver": "^0.12.0",
    "@microsoft/fluid-server-memory-orderer": "^0.12.0",
    "@microsoft/fluid-server-services": "^0.12.0",
    "@microsoft/fluid-server-services-client": "^0.12.0",
    "@microsoft/fluid-server-services-core": "^0.12.0",
    "@microsoft/fluid-server-services-utils": "^0.12.0",
    "@types/semver": "^6.0.1",
    "body-parser": "^1.17.1",
    "bytes": "^3.0.0",
    "commander": "^2.17.1",
    "compression": "^1.7.2",
    "cookie-parser": "^1.4.3",
    "cors": "^2.8.4",
    "express": "^4.16.3",
    "hjs": "^0.0.6",
    "json-stringify-safe": "^5.0.1",
    "jsonwebtoken": "^8.4.0",
    "lodash": "^4.17.11",
    "minio": "^7.0.2",
    "moniker": "^0.1.2",
    "morgan": "^1.8.1",
    "nconf": "^0.10.0",
    "redis": "^2.8.0",
    "request": "^2.88.0",
    "semver": "^6.3.0",
    "split": "^1.0.0",
    "unzip-stream": "^0.3.0",
    "webpack": "^4.16.5",
    "winston": "^3.1.0",
    "ws": "^6.1.2"
  },
  "devDependencies": {
    "@microsoft/fluid-build-common": "^0.12.0",
    "@microsoft/fluid-server-test-utils": "^0.12.0",
    "@types/bytes": "^3.0.0",
    "@types/compression": "0.0.33",
    "@types/cookie-parser": "^1.4.1",
    "@types/cors": "^2.8.4",
    "@types/diff": "^3.5.1",
    "@types/json-stringify-safe": "^5.0.0",
    "@types/jsonwebtoken": "^8.3.0",
    "@types/lodash": "^4.14.118",
    "@types/mocha": "^5.2.5",
    "@types/morgan": "^1.7.35",
    "@types/nconf": "^0.0.37",
    "@types/node": "^10.14.6",
    "@types/random-js": "^1.0.31",
    "@types/redis": "^2.8.8",
    "@types/request": "^2.47.1",
    "@types/split": "^0.3.28",
    "@types/supertest": "^2.0.5",
    "@types/ws": "^6.0.1",
    "cache-loader": "^1.2.2",
    "concurrently": "^4.1.0",
    "css-loader": "^1.0.0",
    "diff": "^3.5.0",
    "html-loader": "^0.5.5",
    "mocha": "^5.2.0",
    "mocha-junit-reporter": "^1.18.0",
    "node-sass": "^4.9.3",
    "nyc": "^14.1.1",
    "random-js": "^1.0.8",
    "rimraf": "^2.6.2",
    "sass-loader": "^7.1.0",
    "source-map-loader": "^0.2.4",
    "string-hash": "^1.1.3",
    "style-loader": "^1.0.0",
    "supertest": "^3.1.0",
    "thread-loader": "^1.2.0",
    "ts-loader": "^6.1.2",
    "tslint": "^5.20.0",
    "typescript": "~3.4.5",
    "url-loader": "^2.1.0"
  },
  "nyc": {
    "all": true,
    "exclude": [
      "src/test/**/*.ts",
      "dist/test/**/*.js"
    ],
    "include": [
      "src/**/*.ts",
      "dist/**/*.js"
    ],
    "reporter": [
      "cobertura",
      "html",
      "text"
    ],
    "temp-directory": "nyc/.nyc_output",
    "cache-dir": "nyc/.cache",
    "report-dir": "nyc/report"
  }
}
