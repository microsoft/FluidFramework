/*!
 * Copyright (c) Microsoft Corporation and contributors. All rights reserved.
 * Licensed under the MIT License.
 */

const shortCodeMap: Map<string, string> = require('../data/assertionShortCodesMap.json');

/**
 * Maps short code messages contained in an Error thrown by our assert() function to the
 * original string for that short code.
 *
 * @remarks
 * The main use case for this is so tests that expect specific assert() calls to fail can
 * always do comparisons based on the original string message, and work whether they run
 * before the policy-check tool replaces those strings with short codes, or after.
 *
 * @param errorMessage - The message to be mapped. Usually will come from an Error object
 *                       that was generated by the assert() function, and it could be either
 *                       a short code, or the original string message coded into the asert().
 * @returns - If the passed in value is a short code and there is a mapping defined for it
 *            in data/assertionShortCodeMap.json, this function returns the value for that
 *            key. Otherwise it returns the input parameter unchanged.
 */
export function mapAssertionMessage(errorMessage: string): string {
    return shortCodeMap.get(errorMessage) || errorMessage;
}
