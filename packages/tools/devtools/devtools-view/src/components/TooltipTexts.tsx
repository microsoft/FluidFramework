/*!
 * Copyright (c) Microsoft Corporation and contributors. All rights reserved.
 * Licensed under the MIT License.
 */

import React from "react";

import { Link } from "@fluentui/react-components";

/**
 * Description of "Client ID" for use in tooltips.
 */
export const clientIdTooltipText =
	"ID assigned by the Fluid (sequencing) service to the current connection. Subject to change if the client disconnects or reconnects.";

/**
 * Description of "User ID" for use in tooltips.
 */
export const userIdTooltipText =
	"Represents the application-specific user identifier provided to the Fluid Framework. Auto-generated by Fluid if not specified by the application.";

/**
 * Description of the Container "Status" property in the summary view.
 */
export const containerStatusTooltipText = (
	<div>
		Represents the current state of the Container with regards to its connection to the Fluid
		Service. For more information, see{" "}
		<Link
			href="https://fluidframework.com/docs/build/container-states-events"
			target="_blank"
			rel="noreferrer"
			inline
		>
			here
		</Link>
		.
	</div>
);

/**
 * Description of the Container "Resolved URL" property in the summary view.
 */
export const containerResolvedUrlTooltipText = "Fluid-internal URL that identifies the container.";

/**
 * Description of the Container "Delta Storage URL" property in the summary view.
 */
export const deltaStorageUrlTooltipText =
	"Endpoint where the Fluid service provides recent ops that it has in storage";

/**
 * Description of the Container "Orderer URL" property in the summary view.
 */
export const ordererUrlTooltipText =
	"Endpoint where the Fluid service receives unsequenced ops/messages and broadcasts sequenced ops/messages.";

/**
 * Description of the Container "Storage URL" property in the summary view.
 */
export const storageUrlTooltipText =
	"Endpoint where the Fluid service provides the latest snapshot of the Fluid Container's contents.";

/**
 * Temporary text for labels that are undefined until a container is attached.
 */
export const waitingForContainerToAttachText =
	"Container is not attached, or this endpoint doesn't apply to the service being used.";

/**
 * Description of the Client's "Mode" property in the audience view.
 */
export const clientModeTooltipText = (
	<div>
		<div>{"The client's connection mode."}</div>
		<ul>
			<li>{'"read": the connection is view-only.'}</li>
			<li>{'"write": the connection allows edits.'}</li>
		</ul>
		<div>
			{
				"Note that the current connection mode does not necessarily reflect the client's permissions."
			}
		</div>
		<div>
			{
				"A client with write permissions can connect to a container in view-only mode if it wishes."
			}
		</div>
	</div>
);

/**
 * Description of the User "Scopes" property in the audience view.
 */
export const clientScopesTooltipText = (
	<div>{"Enumerates actions allowed for the client connection."}</div>
);
