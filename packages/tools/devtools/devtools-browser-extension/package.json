{
	"name": "@fluid-internal/devtools-browser-extension",
	"version": "2.0.0-internal.5.0.0",
	"private": true,
	"description": "A browser extension for visualizing Fluid Framework stats and operations",
	"homepage": "https://fluidframework.com",
	"repository": {
		"type": "git",
		"url": "https://github.com/microsoft/FluidFramework.git",
		"directory": "packages/tools/devtools/devtools-browser-extension"
	},
	"license": "MIT",
	"author": "Microsoft and contributors",
	"scripts": {
		"build": "concurrently npm:build:compile npm:lint",
		"build-and-test": "npm run build && npm run test",
		"build:compile": "concurrently npm:tsc npm:build:webpack",
		"build:full": "npm run build",
		"build:full:compile": "npm run build:compile",
		"build:webpack": "npm run webpack",
		"clean": "rimraf \"coverage\" \"dist\" \"nyc\" \"*.tsbuildinfo\" \"*.build.log\" --glob",
		"eslint": "eslint src",
		"eslint:fix": "eslint src --fix",
		"format": "npm run prettier:fix",
		"format-and-build": "npm run format && npm run build",
		"format-and-compile": "npm run format && npm run build:compile",
		"good-fences": "gf",
		"lint": "npm run prettier && npm run good-fences && npm run eslint",
		"lint:fix": "npm run prettier:fix && npm run eslint:fix",
		"mocha": "mocha dist/**/*.test.js --unhandled-rejections=strict --exit",
		"prettier": "prettier --check . --ignore-path ../../../../.prettierignore",
		"prettier:fix": "prettier --write . --ignore-path ../../../../.prettierignore",
		"rebuild": "npm run clean && npm run build",
		"test": "npm run test:mocha",
		"test:coverage": "nyc npm test -- --reporter xunit --reporter-option output=nyc/junit-report.xml",
		"test:mocha": "npm run mocha",
		"test:mocha:verbose": "cross-env FLUID_TEST_VERBOSE=1 npm run mocha -- --verbose",
		"test:verbose": "npm run test:mocha:verbose",
		"tsc": "tsc",
		"webpack": "webpack"
	},
	"nyc": {
		"all": true,
		"cache-dir": "nyc/.cache",
		"exclude": [
			"src/test/**/*.ts",
			"dist/test/**/*.js"
		],
		"exclude-after-remap": false,
		"include": [
			"src/**/*.ts",
			"dist/**/*.js"
		],
		"report-dir": "nyc/report",
		"reporter": [
			"cobertura",
			"html",
			"text"
		],
		"temp-directory": "nyc/.nyc_output"
	},
	"dependencies": {
		"@fluentui/react": "^8.109.3",
		"@fluid-experimental/devtools-core": "workspace:~",
		"@fluid-experimental/devtools-view": "workspace:~",
		"@fluidframework/common-utils": "^1.1.1",
		"react": "^17.0.1",
		"react-dom": "^17.0.1"
	},
	"devDependencies": {
		"@fluidframework/build-common": "^1.1.0",
		"@fluidframework/build-tools": "^0.17.0",
		"@fluidframework/container-definitions": "workspace:~",
		"@fluidframework/container-loader": "workspace:~",
		"@fluidframework/eslint-config-fluid": "^2.0.0",
		"@fluidframework/mocha-test-setup": "workspace:~",
		"@microsoft/api-extractor": "^7.34.4",
		"@types/chai": "^4.0.0",
		"@types/chrome": "0.0.232",
		"@types/jsdom": "^21.1.1",
		"@types/jsdom-global": "^3.0.4",
		"@types/mocha": "^9.1.1",
		"@types/node": "^14.18.38",
		"@types/proxyquire": "^1.3.28",
		"@types/react": "^17.0.44",
		"@types/react-dom": "^17.0.18",
		"@types/sinon": "^7.0.13",
		"@types/sinon-chrome": "^2.2.11",
		"chai": "^4.2.0",
		"concurrently": "^7.6.0",
		"copy-webpack-plugin": "^11.0.0",
		"copyfiles": "^2.4.1",
		"cross-env": "^7.0.3",
		"eslint": "~8.6.0",
		"eslint-config-prettier": "~8.5.0",
		"eslint-plugin-chai-expect": "~3.0.0",
		"good-fences": "^1.1.1",
		"html-webpack-plugin": "^5.5.0",
		"jsdom": "^16.7.0",
		"jsdom-global": "^3.0.2",
		"mocha": "^10.2.0",
		"nyc": "^15.1.0",
		"prettier": "~2.6.2",
		"proxyquire": "^2.1.3",
		"rimraf": "^4.4.0",
		"sinon": "^7.4.2",
		"sinon-chrome": "^3.0.1",
		"start-server-and-test": "^1.11.7",
		"ts-loader": "^9.3.0",
		"typescript": "~4.5.5",
		"webpack": "^5.82.0",
		"webpack-cli": "^4.9.2"
	},
	"fluidBuild": {
		"tasks": {
			"compile": {
				"dependsOn": [
					"...",
					"webpack"
				],
				"script": false
			},
			"webpack": [
				"@fluid-experimental/devtools-core#tsc",
				"@fluid-experimental/devtools-view#tsc"
			]
		}
	},
	"typeValidation": {
		"disabled": true,
		"broken": {}
	}
}
