{"version":3,"file":"loader.js","sourceRoot":"","sources":["loader.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as moniker from \"moniker\";\nimport { v4 as uuid } from \"uuid\";\nimport { ContainerRuntimeFactoryWithDefaultDataStore } from \"@fluidframework/aqueduct\";\nimport { assert, BaseTelemetryNullLogger, Deferred } from \"@fluidframework/common-utils\";\nimport {\n    AttachState,\n    IFluidModule,\n    IFluidCodeResolver,\n    IResolvedFluidCodeDetails,\n    isFluidBrowserPackage,\n} from \"@fluidframework/container-definitions\";\nimport { Container, Loader } from \"@fluidframework/container-loader\";\nimport { prefetchLatestSnapshot } from \"@fluidframework/odsp-driver\";\nimport { IPersistedCache } from \"@fluidframework/odsp-driver-definitions\";\nimport { IUser } from \"@fluidframework/protocol-definitions\";\nimport { HTMLViewAdapter } from \"@fluidframework/view-adapters\";\nimport { IFluidMountableView } from \"@fluidframework/view-interfaces\";\nimport {\n    extractPackageIdentifierDetails,\n    resolveFluidPackageEnvironment,\n    WebCodeLoader,\n} from \"@fluidframework/web-code-loader\";\nimport { IFluidObject, IFluidPackage, IFluidCodeDetails } from \"@fluidframework/core-interfaces\";\nimport { IDocumentServiceFactory } from \"@fluidframework/driver-definitions\";\nimport { LocalDocumentServiceFactory, LocalResolver } from \"@fluidframework/local-driver\";\nimport { RequestParser, createDataStoreFactory } from \"@fluidframework/runtime-utils\";\nimport { MultiUrlResolver } from \"./multiResolver\";\nimport { deltaConns, getDocumentServiceFactory } from \"./multiDocumentServiceFactory\";\nimport { OdspPersistentCache } from \"./odspPersistantCache\";\n\nexport interface IDevServerUser extends IUser {\n    name: string;\n}\n\nexport interface IBaseRouteOptions {\n    port: number;\n    npm?: string;\n}\n\nexport interface ILocalRouteOptions extends IBaseRouteOptions {\n    mode: \"local\";\n    single?: boolean;\n}\n\nexport interface IDockerRouteOptions extends IBaseRouteOptions {\n    mode: \"docker\";\n    tenantId?: string;\n    tenantSecret?: string;\n    bearerSecret?: string;\n}\n\nexport interface IRouterliciousRouteOptions extends IBaseRouteOptions {\n    mode: \"r11s\";\n    fluidHost?: string;\n    tenantId?: string;\n    tenantSecret?: string;\n    bearerSecret?: string;\n}\n\nexport interface ITinyliciousRouteOptions extends IBaseRouteOptions {\n    mode: \"tinylicious\";\n    bearerSecret?: string;\n    tinyliciousPort?: number;\n}\n\nexport interface IOdspRouteOptions extends IBaseRouteOptions {\n    mode: \"spo\" | \"spo-df\";\n    server?: string;\n    odspAccessToken?: string;\n    pushAccessToken?: string;\n    forceReauth?: boolean;\n    driveId?: string;\n}\n\nexport type RouteOptions =\n    | ILocalRouteOptions\n    | IDockerRouteOptions\n    | IRouterliciousRouteOptions\n    | ITinyliciousRouteOptions\n    | IOdspRouteOptions;\n\nfunction wrapWithRuntimeFactoryIfNeeded(packageJson: IFluidPackage, fluidModule: IFluidModule): IFluidModule {\n    if (fluidModule.fluidExport.IRuntimeFactory === undefined) {\n        const dataStoreFactory = fluidModule.fluidExport.IFluidDataStoreFactory;\n\n        const defaultFactory = createDataStoreFactory(packageJson.name, dataStoreFactory);\n\n        const runtimeFactory = new ContainerRuntimeFactoryWithDefaultDataStore(\n            defaultFactory,\n            new Map([\n                [defaultFactory.type, Promise.resolve(defaultFactory)],\n            ]),\n        );\n        return {\n            fluidExport: {\n                IRuntimeFactory: runtimeFactory,\n                IFluidDataStoreFactory: dataStoreFactory,\n            },\n        };\n    }\n    return fluidModule;\n}\n\n// Invoked by `start()` when the 'double' option is enabled to create the side-by-side panes.\nfunction makeSideBySideDiv(divId: string) {\n    const div = document.createElement(\"div\");\n    div.style.flexGrow = \"1\";\n    div.style.width = \"50%\"; // ensure the divs don't encroach on each other\n    div.style.border = \"1px solid lightgray\";\n    div.style.boxSizing = \"border-box\";\n    div.style.position = \"relative\"; // Make the new <div> a CSS containing block.\n    div.id = divId;\n    return div;\n}\n\nclass WebpackCodeResolver implements IFluidCodeResolver {\n    constructor(private readonly options: IBaseRouteOptions) { }\n    async resolveCodeDetails(details: IFluidCodeDetails): Promise<IResolvedFluidCodeDetails> {\n        const baseUrl = details.config.cdn ?? `http://localhost:${this.options.port}`;\n        let pkg = details.package;\n        if (typeof pkg === \"string\") {\n            const resp = await fetch(`${baseUrl}/package.json`);\n            pkg = await resp.json() as IFluidPackage;\n        }\n        if (!isFluidBrowserPackage(pkg)) {\n            throw new Error(\"Not a Fluid package\");\n        }\n        const browser =\n            resolveFluidPackageEnvironment(pkg.fluid.browser, baseUrl);\n        const parse = extractPackageIdentifierDetails(pkg);\n        return {\n            ...details,\n            resolvedPackage: {\n                ...pkg,\n                fluid: {\n                    ...pkg.fluid,\n                    browser,\n                },\n            },\n            resolvedPackageCacheId: parse.fullId,\n        };\n    }\n}\n\n/**\n * Create a loader with WebCodeLoader and return it.\n */\nasync function createWebLoader(\n    documentId: string,\n    fluidModule: IFluidModule,\n    options: RouteOptions,\n    urlResolver: MultiUrlResolver,\n    codeDetails: IFluidCodeDetails,\n    testOrderer: boolean = false,\n    odspPersistantCache?: IPersistedCache,\n): Promise<Loader> {\n    let documentServiceFactory: IDocumentServiceFactory =\n        getDocumentServiceFactory(documentId, options, odspPersistantCache);\n    // Create the inner document service which will be wrapped inside local driver. The inner document service\n    // will be used for ops(like delta connection/delta ops) while for storage, local storage would be used.\n    if (testOrderer) {\n        const resolvedUrl = await urlResolver.resolve(await urlResolver.createRequestForCreateNew(documentId));\n        const innerDocumentService = await documentServiceFactory.createDocumentService(resolvedUrl);\n        documentServiceFactory = new LocalDocumentServiceFactory(\n            deltaConns.get(documentId),\n            undefined,\n            innerDocumentService);\n    }\n\n    const codeLoader = new WebCodeLoader(new WebpackCodeResolver(options));\n\n    await codeLoader.seedModule(\n        codeDetails,\n        wrapWithRuntimeFactoryIfNeeded(codeDetails.package as IFluidPackage, fluidModule),\n    );\n\n    return new Loader({\n        urlResolver: testOrderer ?\n            new MultiUrlResolver(documentId, window.location.origin, options, true) : urlResolver,\n        documentServiceFactory,\n        codeLoader,\n    });\n}\n\nconst containers: Container[] = [];\n// A function for testing to make sure the containers are not dirty and in sync (at the same seq num)\nexport function isSynchronized() {\n    if (containers.length === 0) { return true; }\n    const seqNum = containers[0].deltaManager.lastSequenceNumber;\n    return containers.every((c) => !c.isDirty && c.deltaManager.lastSequenceNumber === seqNum);\n}\n\nexport async function start(\n    id: string,\n    packageJson: IFluidPackage,\n    fluidModule: IFluidModule,\n    options: RouteOptions,\n    div: HTMLDivElement,\n): Promise<void> {\n    let documentId: string = id;\n    let url = window.location.href;\n\n    /**\n     * For new documents, the `url` is of the format - http://localhost:8080/new or http://localhost:8080/manualAttach.\n     * So, we create a new `id` and use that as the `documentId`.\n     * We will also replace the url in the browser with a new url of format - http://localhost:8080/doc/<documentId>.\n     */\n    const autoAttach: boolean = id === \"new\" || id === \"testorderer\";\n    const manualAttach: boolean = id === \"manualAttach\";\n    const testOrderer = id === \"testorderer\";\n    if (autoAttach || manualAttach) {\n        documentId = moniker.choose();\n        url = url.replace(id, `doc/${documentId}`);\n    }\n\n    const codeDetails: IFluidCodeDetails = {\n        package: packageJson,\n        config: {},\n    };\n\n    let urlResolver = new MultiUrlResolver(documentId, window.location.origin, options);\n    const odspPersistantCache = new OdspPersistentCache();\n\n    // Create the loader that is used to load the Container.\n    let loader1 = await createWebLoader(\n        documentId,\n        fluidModule,\n        options,\n        urlResolver,\n        codeDetails,\n        testOrderer,\n        odspPersistantCache);\n\n    let container1: Container;\n    if (autoAttach || manualAttach) {\n        // For new documents, create a detached container which will be attached later.\n        container1 = await loader1.createDetachedContainer(codeDetails);\n        containers.push(container1);\n    } else {\n        // For existing documents, we try to load the container with the given documentId.\n        const documentUrl = `${window.location.origin}/${documentId}`;\n        // This functionality is used in odsp driver to prefetch the latest snapshot and cache it so\n        // as to avoid the network call to fetch trees latest.\n        if (window.location.hash === \"#prefetch\") {\n            assert(options.mode === \"spo-df\" || options.mode === \"spo\",\n                0x1ea /* \"Prefetch snapshot only available for odsp!\" */);\n            const prefetched = await prefetchLatestSnapshot(\n                await urlResolver.resolve({ url: documentUrl }),\n                async () => options.odspAccessToken,\n                odspPersistantCache,\n                new BaseTelemetryNullLogger(),\n                undefined,\n            );\n            assert(prefetched, 0x1eb /* \"Snapshot should be prefetched!\" */);\n        }\n        container1 = await loader1.resolve({ url: documentUrl });\n        containers.push(container1);\n\n        /**\n         * For existing documents, the container should already exist. If it doesn't, we treat this as the new\n         * document scenario.\n         * Create a new `documentId`, a new Loader and a new detached container.\n         */\n        if (!container1.existing) {\n            console.warn(`Document with id ${documentId} not found. Falling back to creating a new document.`);\n            container1.close();\n\n            documentId = moniker.choose();\n            url = url.replace(id, documentId);\n            urlResolver = new MultiUrlResolver(documentId, window.location.origin, options);\n            loader1 = await createWebLoader(documentId, fluidModule, options, urlResolver, codeDetails, testOrderer);\n            container1 = await loader1.createDetachedContainer(codeDetails);\n        }\n    }\n\n    let leftDiv: HTMLDivElement = div;\n    let rightDiv: HTMLDivElement | undefined;\n\n    // For side by side mode, create two divs. Use side by side mode to test orderer.\n    if ((options.mode === \"local\" && !options.single) || testOrderer) {\n        div.style.display = \"flex\";\n        leftDiv = makeSideBySideDiv(\"sbs-left\");\n        rightDiv = makeSideBySideDiv(\"sbs-right\");\n        div.append(leftDiv, rightDiv);\n    }\n\n    const reqParser = RequestParser.create({ url });\n    const fluidObjectUrl = `/${reqParser.createSubRequest(4).url}`;\n\n    // Load and render the Fluid object.\n    await getFluidObjectAndRender(container1, fluidObjectUrl, leftDiv);\n    // Handle the code upgrade scenario (which fires contextChanged)\n    container1.on(\"contextChanged\", () => {\n        getFluidObjectAndRender(container1, fluidObjectUrl, leftDiv).catch(() => { });\n    });\n\n    // We have rendered the Fluid object. If the container is detached, attach it now.\n    if (container1.attachState === AttachState.Detached) {\n        container1 = await attachContainer(\n            loader1,\n            container1,\n            fluidObjectUrl,\n            urlResolver,\n            documentId,\n            url,\n            leftDiv,\n            rightDiv,\n            manualAttach,\n            testOrderer,\n        );\n    }\n\n    // For side by side mode, we need to create a second container and Fluid object.\n    if (rightDiv) {\n        // Create a new loader that is used to load the second container.\n        const loader2 = await createWebLoader(documentId, fluidModule, options, urlResolver, codeDetails, testOrderer);\n\n        // Create a new request url from the resolvedUrl of the first container.\n        const requestUrl2 = await urlResolver.getAbsoluteUrl(container1.resolvedUrl, \"\");\n        const container2 = await loader2.resolve({ url: requestUrl2 });\n        containers.push(container2);\n\n        await getFluidObjectAndRender(container2, fluidObjectUrl, rightDiv);\n        // Handle the code upgrade scenario (which fires contextChanged)\n        container2.on(\"contextChanged\", () => {\n            getFluidObjectAndRender(container2, fluidObjectUrl, rightDiv).catch(() => { });\n        });\n    }\n}\n\nasync function getFluidObjectAndRender(container: Container, url: string, div: HTMLDivElement) {\n    const response = await container.request({\n        headers: {\n            mountableView: true,\n        },\n        url,\n    });\n\n    if (response.status !== 200 ||\n        !(\n            response.mimeType === \"fluid/object\"\n        )) {\n        return false;\n    }\n\n    const fluidObject = response.value as IFluidObject;\n    if (fluidObject === undefined) {\n        return;\n    }\n\n    // We should be retaining a reference to mountableView long-term, so we can call unmount() on it to correctly\n    // remove it from the DOM if needed.\n    const mountableView: IFluidMountableView = fluidObject.IFluidMountableView;\n    if (mountableView !== undefined) {\n        mountableView.mount(div);\n        return;\n    }\n\n    // If we don't get a mountable view back, we can still try to use a view adapter.  This won't always work (e.g.\n    // if the response is a React-based Fluid object using hooks) and is not the preferred path, but sometimes it\n    // can work.\n    console.warn(`Container returned a non-IFluidMountableView.  This can cause errors when mounting Fluid objects `\n        + `with React hooks across bundle boundaries.  URL: ${url}`);\n    const view = new HTMLViewAdapter(fluidObject);\n    view.render(div, { display: \"block\" });\n}\n\n/**\n * Attached a detached container.\n * In case of manual attach (when manualAttach is true), it creates a button and attaches the container when the button\n * is clicked. Otherwise, it attaches the container right away.\n */\nasync function attachContainer(\n    loader: Loader,\n    container: Container,\n    fluidObjectUrl: string,\n    urlResolver: MultiUrlResolver,\n    documentId: string,\n    url: string,\n    leftDiv: HTMLDivElement,\n    rightDiv: HTMLDivElement | undefined,\n    manualAttach: boolean,\n    testOrderer: boolean,\n) {\n    // This is called once loading is complete to replace the url in the address bar with the new `url`.\n    const replaceUrl = () => {\n        window.history.replaceState({}, \"\", url);\n        document.title = documentId;\n    };\n\n    let currentContainer = container;\n    let currentLeftDiv = leftDiv;\n    const attached = new Deferred<void>();\n    // To test orderer, we use local driver as wrapper for actual document service. So create request\n    // using local resolver.\n    const attachUrl = testOrderer ? new LocalResolver().createCreateNewRequest(documentId)\n        : await urlResolver.createRequestForCreateNew(documentId);\n\n    if (manualAttach) {\n        // Create an \"Attach Container\" button that the user can click when they want to attach the container.\n        const attachDiv = document.createElement(\"div\");\n        const attachButton = document.createElement(\"button\");\n        attachButton.innerText = \"Attach Container\";\n        const serializeButton = document.createElement(\"button\");\n        serializeButton.innerText = \"Serialize\";\n        const rehydrateButton = document.createElement(\"button\");\n        rehydrateButton.innerText = \"Rehydrate Container\";\n        rehydrateButton.hidden = true;\n        const summaryList = document.createElement(\"select\");\n        summaryList.hidden = true;\n        attachDiv.append(attachButton);\n        attachDiv.append(serializeButton);\n        attachDiv.append(summaryList);\n        document.body.prepend(attachDiv);\n\n        let summaryNum = 1;\n        serializeButton.onclick = () => {\n            summaryList.hidden = false;\n            rehydrateButton.hidden = false;\n            attachDiv.append(rehydrateButton);\n            const summary = currentContainer.serialize();\n            const listItem = document.createElement(\"option\");\n            listItem.innerText = `Summary_${summaryNum}`;\n            summaryNum += 1;\n            listItem.value = summary;\n            summaryList.appendChild(listItem);\n            rehydrateButton.onclick = async () => {\n                const snapshot = summaryList.value;\n                currentContainer = await loader.rehydrateDetachedContainerFromSnapshot(snapshot);\n                let newLeftDiv: HTMLDivElement;\n                if (rightDiv !== undefined) {\n                    newLeftDiv = makeSideBySideDiv(uuid());\n                } else {\n                    newLeftDiv = document.createElement(\"div\");\n                }\n                currentLeftDiv.replaceWith(newLeftDiv);\n                currentLeftDiv = newLeftDiv;\n                // Load and render the component.\n                await getFluidObjectAndRender(currentContainer, fluidObjectUrl, newLeftDiv);\n                // Handle the code upgrade scenario (which fires contextChanged)\n                currentContainer.on(\"contextChanged\", () => {\n                    getFluidObjectAndRender(currentContainer, fluidObjectUrl, newLeftDiv).catch(() => { });\n                });\n            };\n        };\n\n        attachButton.onclick = () => {\n            currentContainer.attach(attachUrl)\n                .then(() => {\n                    attachDiv.remove();\n                    replaceUrl();\n\n                    if (rightDiv) {\n                        rightDiv.innerText = \"\";\n                    }\n\n                    attached.resolve();\n                }, (error) => {\n                    console.error(error);\n                });\n        };\n\n        // If we are in side-by-side mode, we need to display the following message in the right div passed here.\n        if (rightDiv) {\n            rightDiv.innerText = \"Waiting for container attach\";\n        }\n    } else {\n        await currentContainer.attach(attachUrl);\n        replaceUrl();\n        attached.resolve();\n    }\n    await attached.promise;\n    return currentContainer;\n}\n"]}