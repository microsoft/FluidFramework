/*!
 * Copyright (c) Microsoft Corporation and contributors. All rights reserved.
 * Licensed under the MIT License.
 */
/*
 * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
 * Generated by fluid-type-validator in @fluidframework/build-tools.
 */
/* eslint-disable max-lines */
import * as old from "@fluid-tools/webpack-fluid-loader-previous";
import * as current from "../../index";

type TypeOnly<T> = {
    [P in keyof T]: TypeOnly<T[P]>;
};

/*
* Validate forward compat by using old type in place of current type
* If breaking change required, add in package.json under typeValidation.broken.0.58.2000:
* "VariableDeclaration_after": {"forwardCompat": false}
*/
declare function get_old_VariableDeclaration_after():
    TypeOnly<typeof old.after>;
declare function use_current_VariableDeclaration_after(
    use: TypeOnly<typeof current.after>);
use_current_VariableDeclaration_after(
    get_old_VariableDeclaration_after());

/*
* Validate back compat by using current type in place of old type
* If breaking change required, add in package.json under typeValidation.broken.0.58.2000:
* "VariableDeclaration_after": {"backCompat": false}
*/
declare function get_current_VariableDeclaration_after():
    TypeOnly<typeof current.after>;
declare function use_old_VariableDeclaration_after(
    use: TypeOnly<typeof old.after>);
use_old_VariableDeclaration_after(
    get_current_VariableDeclaration_after());

/*
* Validate forward compat by using old type in place of current type
* If breaking change required, add in package.json under typeValidation.broken.0.58.2000:
* "VariableDeclaration_before": {"forwardCompat": false}
*/
declare function get_old_VariableDeclaration_before():
    TypeOnly<typeof old.before>;
declare function use_current_VariableDeclaration_before(
    use: TypeOnly<typeof current.before>);
use_current_VariableDeclaration_before(
    get_old_VariableDeclaration_before());

/*
* Validate back compat by using current type in place of old type
* If breaking change required, add in package.json under typeValidation.broken.0.58.2000:
* "VariableDeclaration_before": {"backCompat": false}
*/
declare function get_current_VariableDeclaration_before():
    TypeOnly<typeof current.before>;
declare function use_old_VariableDeclaration_before(
    use: TypeOnly<typeof old.before>);
use_old_VariableDeclaration_before(
    get_current_VariableDeclaration_before());
