/*!
 * Copyright (c) Microsoft Corporation and contributors. All rights reserved.
 * Licensed under the MIT License.
 */

import { ITelemetryBaseEvent } from "@fluidframework/common-definitions";
import { IDebuggerMessage } from "./Messages";

// #region Outbound messages

/**
 * Base interface for telemetry log events.
 * @public
 */
export interface TelemetryLogEvent {
	/**
	 * The contents of the telemetry event.
	 */
	logContent: ITelemetryBaseEvent;

	/**
	 * The timestamp of the telemetry event.
	 */
	timestamp: number;
}

/**
 * Message data format used by {@link TelemetryEventMessage}.
 *
 * @public
 */
export interface TelemetryEventMessageData {
	/**
	 * Contents of the telemetry event. This can be a single latest event or all the history events.
	 */
	contents: TelemetryLogEvent[];
}

/**
 * Outbound event indicating that a telemetry event has been generated by the application.
 * Includes the contents of the telemetry event.
 *
 * @public
 */
export interface TelemetryEventMessage extends IDebuggerMessage<TelemetryEventMessageData> {
	/**
	 * {@inheritDoc IDebuggerMessage."type"}
	 */
	type: "TELEMETRY_EVENT";
}

/**
 * Outbound message including the entire history of telemetry events.
 *
 * @public
 */
export interface TelemetryHistoryMessage extends IDebuggerMessage<TelemetryEventMessageData> {
	/**
	 * {@inheritDoc IDebuggerMessage."type"}
	 */
	type: "TELEMETRY_HISTORY";
}

/**
 * Inbound message requesting a complete history of telemetry events.
 *
 * @public
 */
export interface GetTelemetryHistoryMessage extends IDebuggerMessage {
	/**
	 * {@inheritDoc IDebuggerMessage."type"}
	 */
	type: "GET_TELEMETRY_HISTORY";
}
// #endregion
