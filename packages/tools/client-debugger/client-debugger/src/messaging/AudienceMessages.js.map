{"version":3,"file":"AudienceMessages.js","sourceRoot":"","sources":["AudienceMessages.ts"],"names":[],"mappings":"","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { IClient } from \"@fluidframework/protocol-definitions\";\nimport { AudienceChangeLogEntry } from \"../Logs\";\nimport { HasContainerId } from \"./DebuggerMessages\";\n\nimport { IDebuggerMessage } from \"./Messages\";\n\n/**\n * Inbound event requesting {@link AudienceChangeLogEntry} of the Container with the specific ID.\n * Will result in the {@link AudienceEventMessage} message being posted.\n *\n * @public\n */\nexport interface GetAudienceMessage extends IDebuggerMessage<HasContainerId> {\n\ttype: \"GET_AUDIENCE_EVENT\";\n}\n\n/**\n * Message data format used by {@link AudienceEventMessage}.\n * @public\n */\nexport interface AudienceEventMessageData extends HasContainerId {\n\t/**\n\t * Contents of the Audience event\n\t */\n\taudienceState: Map<string, IClient>;\n\taudienceHistory: readonly AudienceChangeLogEntry[];\n}\n\n/**\n * Outbound event listing the current audience and audience history of the application\n * Includes the contents of the audience event\n *\n * @public\n */\nexport interface AudienceEventMessage extends IDebuggerMessage<AudienceEventMessageData> {\n\ttype: \"AUDIENCE_EVENT\";\n}\n"]}