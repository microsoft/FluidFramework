{"version":3,"file":"Messages.js","sourceRoot":"","sources":["Messages.ts"],"names":[],"mappings":"AAAA;;;GAGG","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Message structure expected for window event listeners used by the Fluid Client Debugger.\n *\n * @public\n */\nexport interface IDebuggerMessage<TData = unknown> {\n\t/**\n\t * Identifies the source of the message.\n\t * Can be used to filter the messages being listened to / accepted.\n\t *\n\t * @remarks\n\t *\n\t * All messages sent by this library will have the same `source`: {@link debuggerMessageSource}.\n\t * Listeners that only want to accept messages coming from this library can filter to those with\n\t * a matching source.\n\t *\n\t * Consumers are encouraged to use a single `source` for all messages they send to this library.\n\t * This will help the system differentiate messages it has received from different sources for\n\t * the purpose of logging, etc.\n\t */\n\tsource: string;\n\n\t/**\n\t * The type of message being sent.\n\t * Informs the action that needs to be taken, and the form that the {@link IDebuggerMessage.data} will take.\n\t */\n\ttype: string;\n\n\t/**\n\t * Message payload.\n\t * The type of data is informed by the {@link IDebuggerMessage.\"type\"}.\n\t */\n\tdata: TData;\n}\n"]}