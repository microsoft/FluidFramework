{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsCG;AAEH,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,wBAAwB,EAAE,MAAM,aAAa,CAAC;AAUvD,OAAO,EAIN,qBAAqB,EAYrB,qBAAqB,EACrB,2BAA2B,EAE3B,iBAAiB,EAEjB,mBAAmB,GACnB,MAAM,aAAa,CAAC;AACrB,OAAO,EACN,gBAAgB,EAEhB,qBAAqB,EACrB,wBAAwB,EAExB,mBAAmB,EACnB,sBAAsB,EACtB,uBAAuB,EACvB,6BAA6B,GAC7B,MAAM,YAAY,CAAC;AACpB,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Contains a simple API for initializing debug sessions for recording and propogating information\n * about a given {@link @fluidframework/container-definitions#IContainer | Fluid Container} and its\n * {@link @fluidframework/container-definitions#Audience}.\n *\n * Debugger instances are created per `Container` instance and are bound to the `globalThis` context\n * to be accessible to related tools.\n *\n * - See the package README for more details on related tools that are enabled via these debugger instances.\n *\n * @remarks\n *\n * The general usage pattern for this library is to first initialize a debugger for a given Fluid Client\n * ({@link @fluidframework/container-definitions#IContainer} and {@link @fluidframework/container-definitions#IAudience})\n * by calling {@link initializeFluidClientDebugger} during application setup / any time after your container has been\n * attached.\n *\n * Then, during application teardown, call {@link closeFluidClientDebugger} to clean up the debugger and its resources.\n *\n * @example Initialization\n *\n * ```typescript\n * initializeFluidClientDebugger({\n *  containerId,\n *  container,\n *  containerData: {\n *      rootMap: sharedMap\n *  },\n * });\n * ```\n *\n * @example Disposal\n *\n * ```typescript\n * closeFluidClientDebugger(containerId);\n * ```\n *\n * @packageDocumentation\n */\n\nexport { MemberChangeKind } from \"./AudienceMetadata\";\nexport { ContainerStateChangeKind } from \"./Container\";\nexport { ContainerMetadata, ContainerStateMetadata } from \"./ContainerMetadata\";\n\nexport { IFluidClientDebugger, IFluidClientDebuggerEvents } from \"./IFluidClientDebugger\";\nexport {\n\tAudienceChangeLogEntry,\n\tConnectionStateChangeLogEntry,\n\tLogEntry,\n\tStateChangeLogEntry,\n} from \"./Logs\";\nexport {\n\tAudienceEventMessageData,\n\tAudienceEventMessage,\n\tGetAudienceMessage,\n\tdebuggerMessageSource,\n\tHasContainerId,\n\tContainerStateChangeMessage,\n\tContainerStateChangeMessageData,\n\tIDebuggerMessage,\n\tGetContainerListMessage,\n\tGetContainerStateMessage,\n\tGetContainerStateMessageData,\n\tRegistryChangeMessage,\n\tRegistryChangeMessageData,\n\tTelemetryEventMessage,\n\tTelemetryEventMessageData,\n\thandleIncomingMessage,\n\thandleIncomingWindowMessage,\n\tInboundHandlers,\n\tisDebuggerMessage,\n\tMessageLoggingOptions,\n\tpostMessageToWindow,\n} from \"./messaging\";\nexport {\n\tDebuggerRegistry,\n\tDebuggerRegistryEvents,\n\tclearDebuggerRegistry,\n\tcloseFluidClientDebugger,\n\tFluidClientDebuggerProps,\n\tgetDebuggerRegistry,\n\tgetFluidClientDebugger,\n\tgetFluidClientDebuggers,\n\tinitializeFluidClientDebugger,\n} from \"./Registry\";\nexport { FluidDebuggerLogger } from \"./FluidDebuggerLogger\";\n"]}