/*!
 * Copyright (c) Microsoft Corporation and contributors. All rights reserved.
 * Licensed under the MIT License.
 */

import { VisualizeSharedObject } from "@fluid-tools/client-debugger";
import { IFluidContainer } from "@fluidframework/fluid-static";

/**
 * Properties for configuring Devtools for an individual {@link @fluidframework/fluid-static#IFluidContainer}.
 *
 * @public
 */
export interface RouterliciousContainerDevtoolsProps {
	/**
	 * The Container to register with the Devtools.
	 */
	container: IFluidContainer;

	/**
	 * The ID of the {@link RouterliciousContainerDevtoolsProps.container | Container}.
	 */
	containerId: string;

	/**
	 * (optional) Nickname for the {@link RouterliciousContainerDevtoolsProps.container | Container} and corresponding
	 * stats generated by the Devtools.
	 *
	 * @remarks
	 *
	 * Associated tooling may take advantage of this to differentiate between instances using
	 * semantically meaningful information.
	 *
	 * If not provided, the {@link RouterliciousContainerDevtoolsProps.containerId} will be used for the purpose of distinguishing
	 * instances.
	 */
	containerNickname?: string;

	/**
	 * (optional) Configurations for generating visual representations of
	 * {@link @fluidframework/shared-object-base#ISharedObject}s under each Container's
	 * {@link @fluidframework/fluid-static#IFluidContainer.initialObjects}.
	 *
	 * @remarks
	 *
	 * If not specified, then only `SharedObject` types natively known by the system will be visualized, and using
	 * default visualization implementations.
	 *
	 * If a visualizer configuration is specified for a shared object type that has a default visualizer, the custom
	 * one will be used.
	 */
	dataVisualizers?: Record<string, VisualizeSharedObject>;
}
