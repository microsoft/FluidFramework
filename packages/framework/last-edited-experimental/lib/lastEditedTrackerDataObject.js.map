{"version":3,"file":"lastEditedTrackerDataObject.js","sourceRoot":"","sources":["../src/lastEditedTrackerDataObject.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AACzE,OAAO,EAAE,kBAAkB,EAAE,MAAM,sCAAsC,CAAC;AAE1E,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAGxD;;GAEG;AACH,MAAM,OAAO,2BAA4B,SAAQ,UAAU;IAA3D;;QAcqB,yBAAoB,GAAG,yBAAyB,CAAC;IAwBtE,CAAC;IA5BU,MAAM,CAAC,UAAU;QACpB,OAAO,2BAA2B,CAAC,OAAO,CAAC;IAC/C,CAAC;IAKD,IAAY,iBAAiB;QACzB,IAAI,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAE;YACvC,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;SACvE;QAED,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAED,IAAW,uBAAuB,KAAK,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAE7D,KAAK,CAAC,qBAAqB;QACjC,MAAM,kBAAkB,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,MAAM,CAAC,CAAC;IACxE,CAAC;IAES,KAAK,CAAC,cAAc;QAC1B,MAAM,kBAAkB;QACpB,oEAAoE;QACpE,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmC,IAAI,CAAC,oBAAoB,CAAE,CAAC,GAAG,EAAE,CAAC;QAC5F,IAAI,CAAC,kBAAkB,GAAG,IAAI,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;IACxE,CAAC;;AAnCuB,mCAAO,GAAG,IAAI,iBAAiB,CACnD,0CAA0C,EAC1C,2BAA2B,EAC3B,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC,EACjC,EAAE,EACF,SAAS,CACZ,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { DataObject, DataObjectFactory } from \"@fluidframework/aqueduct\";\nimport { SharedSummaryBlock } from \"@fluidframework/shared-summary-block\";\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\nimport { LastEditedTracker } from \"./lastEditedTracker\";\nimport { IProvideFluidLastEditedTracker } from \"./interfaces\";\n\n/**\n * LastEditedTrackerDataObject creates a LastEditedTracker that keeps track of the latest edits to the document.\n */\nexport class LastEditedTrackerDataObject extends DataObject\n    implements IProvideFluidLastEditedTracker {\n    private static readonly factory = new DataObjectFactory(\n        \"@fluidframework/last-edited-experimental\",\n        LastEditedTrackerDataObject,\n        [SharedSummaryBlock.getFactory()],\n        {},\n        undefined,\n    );\n\n    public static getFactory() {\n        return LastEditedTrackerDataObject.factory;\n    }\n\n    private readonly sharedSummaryBlockId = \"shared-summary-block-id\";\n    private _lastEditedTracker: LastEditedTracker | undefined;\n\n    private get lastEditedTracker() {\n        if (this._lastEditedTracker === undefined) {\n            throw new Error(\"Last Edited tracker was not initialized properly\");\n        }\n\n        return this._lastEditedTracker;\n    }\n\n    public get IFluidLastEditedTracker() { return this.lastEditedTracker; }\n\n    protected async initializingFirstTime() {\n        const sharedSummaryBlock = SharedSummaryBlock.create(this.runtime);\n        this.root.set(this.sharedSummaryBlockId, sharedSummaryBlock.handle);\n    }\n\n    protected async hasInitialized() { // hasInitialized\n        const sharedSummaryBlock =\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            await this.root.get<IFluidHandle<SharedSummaryBlock>>(this.sharedSummaryBlockId)!.get();\n        this._lastEditedTracker = new LastEditedTracker(sharedSummaryBlock);\n    }\n}\n"]}