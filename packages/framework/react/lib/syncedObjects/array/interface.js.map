{"version":3,"file":"interface.js","sourceRoot":"","sources":["../../../src/syncedObjects/array/interface.ts"],"names":[],"mappings":"","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { SharedObjectSequence } from \"@fluidframework/sequence\";\nimport {\n    IViewState,\n    IFluidState,\n    IFluidReducer,\n    IFluidDataProps,\n    FluidStateUpdateFunction,\n} from \"../..\";\n\n/**\n * The state interface exposed to the view for the synced array\n */\nexport interface ISyncedArrayViewState<T> extends IViewState {\n    values: T[];\n}\n\n/**\n * The state interface for the Fluid data source that powers the synced array\n */\nexport interface ISyncedArrayFluidState<T> extends IFluidState {\n    values: SharedObjectSequence<T>;\n}\n\n/**\n * The reducer interface for modifying the synced array\n * TODO: Add more functions that further expose the SharedObjectSequence interface for use\n */\nexport interface ISyncedArrayReducer<T> {\n    add: (value: T) => void;\n}\n\n/**\n * The underlying reducer interface passed to the useReducerFluid hook to bind the view and Fluid\n * state definitions together\n */\nexport interface IFluidSyncedArrayReducer<\n    SV extends IViewState,\n    SF extends IFluidState\n    > extends IFluidReducer<SV, SF, IFluidDataProps> {\n    add: FluidStateUpdateFunction<SV, SF, IFluidDataProps>;\n}\n"]}