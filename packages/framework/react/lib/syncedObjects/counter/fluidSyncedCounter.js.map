{"version":3,"file":"fluidSyncedCounter.js","sourceRoot":"","sources":["../../../src/syncedObjects/counter/fluidSyncedCounter.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AACxD,OAAO,EAKH,eAAe,GAElB,MAAM,OAAO,CAAC;AAGf,MAAM,UAAU,2BAA2B,CAIvC,gBAAkC,EAClC,aAAqB,EACrB,OAAiB,EACjB,QAAkB,EAClB,gBAAoB,EACpB,kBAAkB,GAAG,aAAa,CAAC,MAAM;IAEzC,gBAAgB,CAAC,cAAc,CAAS,aAAa,EAAE;QACnD,aAAa;QACb,WAAW,EAAE,IAAI,GAAG,CAAC;YACjB;gBACI,QAAQ;gBACR;oBACI,IAAI,EAAE,aAAa,CAAC,IAAI;oBACxB,OAAO;oBACP,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,EAAE;wBACrC,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;4BACpC,MAAM,KAAK,CAAC,iCAAiC,CAAC,CAAC;yBAClD;wBACD,SAAS,CAAC,OAAO,CAAC,GAAI,UAAU,CAC5B,QAAQ,CACH,CAAC,KAAK,CAAC;wBAChB,OAAO,SAAS,CAAC;oBACrB,CAAC;oBACD,kBAAkB;oBAClB,cAAc,EAAE,CAAC,aAAa,CAAC;iBAClC;aACJ;SACJ,CAAC;QACF,WAAW,EAAE,IAAI,GAAG,CAAC;YACjB;gBACI,OAAO;gBACP;oBACI,IAAI,EAAE,QAAQ;oBACd,QAAQ;oBACR,cAAc,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,EAAE;wBACtC,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;4BACpC,MAAM,KAAK,CAAC,iCAAiC,CAAC,CAAC;yBAClD;wBACD,SAAS,CAAC,OAAO,CAAC,GAAI,UAAU,CAC5B,QAAQ,CACH,CAAC,KAAK,CAAC;wBAChB,OAAO,UAAU,CAAC;oBACtB,CAAC;iBACJ;aACJ;SACJ,CAAC;QACF,gBAAgB;KACnB,CAAC,CAAC;AACP,CAAC;AAED,MAAM,UAAU,4BAA4B,CAG1C,OAAiB,EAAE,QAAkB;IACnC,MAAM,oBAAoB,GAAG;QACzB,SAAS,EAAE;YACP,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAY,EAAE,EAAE;;gBAC9B,IAAI,OAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,0CAAG,QAAQ,OAAM,SAAS,EAAE;oBAC7C,MAAM,KAAK,CACP,kDAAkD,CACrD,CAAC;iBACL;gBACD,MAAM,OAAO,GAAG,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAC3C,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACxB,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;gBACzC,OAAO,EAAE,KAAK,EAAE,CAAC;YACrB,CAAC;SACJ;KACJ,CAAC;IACF,OAAO,oBAAoB,CAAC;AAChC,CAAC;AAED,MAAM,UAAU,4BAA4B,CAIxC,gBAAkC,EAClC,aAAqB,EACrB,OAAiB,EACjB,QAAkB,EAClB,gBAAoB;IAGpB,MAAM,oBAAoB,GAAG,4BAA4B,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC7E,OAAO,eAAe,CAQlB;QACI,gBAAgB;QAChB,aAAa;QACb,OAAO,EAAE,oBAAoB;QAC7B,QAAQ,EAAE,EAAE;KACf,EACD,gBAAgB,CACnB,CAAC;AACN,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { SharedCounter } from \"@fluidframework/counter\";\nimport {\n    IViewState,\n    IFluidState,\n    ICombinedState,\n    IFluidDataProps,\n    useReducerFluid,\n    SyncedDataObject,\n} from \"../..\";\nimport { IFluidSyncedCounterReducer } from \"./interface\";\n\nexport function setFluidSyncedCounterConfig<\n    SV extends IViewState,\n    SF extends IFluidState\n>(\n    syncedDataObject: SyncedDataObject,\n    syncedStateId: string,\n    viewKey: keyof SV,\n    fluidKey: keyof SF,\n    defaultViewState: SV,\n    sharedObjectCreate = SharedCounter.create,\n) {\n    syncedDataObject.setFluidConfig<SV, SF>(syncedStateId, {\n        syncedStateId,\n        fluidToView: new Map([\n            [\n                fluidKey,\n                {\n                    type: SharedCounter.name,\n                    viewKey,\n                    viewConverter: (viewState, fluidState) => {\n                        if (fluidState[fluidKey] === undefined) {\n                            throw Error(\"Fluid state was not initialized\");\n                        }\n                        viewState[viewKey] = (fluidState[\n                            fluidKey\n                        ] as any).value;\n                        return viewState;\n                    },\n                    sharedObjectCreate,\n                    listenedEvents: [\"incremented\"],\n                },\n            ],\n        ]),\n        viewToFluid: new Map([\n            [\n                viewKey,\n                {\n                    type: \"number\",\n                    fluidKey,\n                    fluidConverter: (viewState, fluidState) => {\n                        if (fluidState[fluidKey] === undefined) {\n                            throw Error(\"Fluid state was not initialized\");\n                        }\n                        viewState[viewKey] = (fluidState[\n                            fluidKey\n                        ] as any).value;\n                        return fluidState;\n                    },\n                },\n            ],\n        ]),\n        defaultViewState,\n    });\n}\n\nexport function generateSyncedCounterReducer<\n    SV extends IViewState,\n    SF extends IFluidState\n>(viewKey: keyof SV, fluidKey: keyof SF): IFluidSyncedCounterReducer<SV, SF> {\n    const syncedCounterReducer = {\n        increment: {\n            function: (state, step: number) => {\n                if (state?.fluidState?.[fluidKey] === undefined) {\n                    throw Error(\n                        \"State was not initialized prior to dispatch call\",\n                    );\n                }\n                const counter = state.fluidState[fluidKey];\n                counter.increment(step);\n                state.viewState[viewKey] = counter.value;\n                return { state };\n            },\n        },\n    };\n    return syncedCounterReducer;\n}\n\nexport function useSyncedCounterReducerFluid<\n    SV extends IViewState,\n    SF extends IFluidState\n>(\n    syncedDataObject: SyncedDataObject,\n    syncedStateId: string,\n    viewKey: keyof SV,\n    fluidKey: keyof SF,\n    defaultViewState: SV,\n// eslint-disable-next-line @typescript-eslint/ban-types\n): [ICombinedState<SV, SF, IFluidDataProps>, IFluidSyncedCounterReducer<SV, SF>, {}] {\n    const syncedCounterReducer = generateSyncedCounterReducer(viewKey, fluidKey);\n    return useReducerFluid<\n        SV,\n        SF,\n        IFluidSyncedCounterReducer<SV, SF>,\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        {},\n        IFluidDataProps\n    >(\n        {\n            syncedDataObject,\n            syncedStateId,\n            reducer: syncedCounterReducer,\n            selector: {},\n        },\n        defaultViewState,\n    );\n}\n"]}