{"version":3,"file":"interface.js","sourceRoot":"","sources":["../../../src/syncedObjects/counter/interface.ts"],"names":[],"mappings":"","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { ISharedCounter } from \"@fluidframework/counter\";\nimport {\n    IViewState,\n    IFluidState,\n    IFluidReducer,\n    IFluidDataProps,\n    FluidStateUpdateFunction,\n} from \"../..\";\n\n/**\n * The state interface exposed to the view for the synced counter\n */\nexport interface ISyncedCounterViewState extends IViewState {\n    value: number;\n}\n\n/**\n * The state interface for the Fluid data source that powers the synced counter\n */\nexport interface ISyncedCounterFluidState extends IFluidState {\n    counter: ISharedCounter;\n}\n\n/**\n * The reducer interface for incrementing the synced counter\n */\nexport interface ISyncedCounterReducer {\n    increment: (step: number) => void;\n}\n\n/**\n * The underlying reducer interface passed to the useReducerFluid hook to bind the view and Fluid\n * state definitions together\n */\nexport interface IFluidSyncedCounterReducer<\n    SV extends IViewState,\n    SF extends IFluidState\n    > extends IFluidReducer<SV, SF, IFluidDataProps> {\n    increment: FluidStateUpdateFunction<SV, SF, IFluidDataProps>;\n}\n"]}