{"version":3,"file":"initializeState.js","sourceRoot":"","sources":["../../src/helpers/initializeState.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\nimport {\n    IValueChanged,\n    SharedMap,\n} from \"@fluidframework/map\";\nimport {\n    IFluidDataProps,\n    FluidToViewMap,\n    ViewToFluidMap,\n    IViewState,\n    IFluidState,\n    ISyncedState,\n} from \"../interface\";\nimport {\n    syncedStateCallbackListener,\n    updateStateAndFluidObjectMap,\n    getSchema,\n    getFluidState,\n} from \".\";\n\n/**\n * Fetch the synced state for this view from the SyncedDataObject sharedState and add\n * listeners for all state updates\n * @param syncedStateId - Unique ID for this synced data object's state\n * @param syncedState - The synced data object's shared state map\n * @param fluidToView - A map of the Fluid state values that need conversion to their view state counterparts and the\n * respective converters\n * @param dataProps - Contains the runtime and fluidObjectMap to create and store DDSes\n * @param state - Current view state\n * @param setState - Callback to update view state\n * @param viewToFluid - A map of the view state values that need conversion to their Fluid state counterparts and the\n * respective converters\n * @param fluidToView - A map of the Fluid state values that need conversion to their view state counterparts and the\n * respective converters\n */\nexport async function initializeState<\n    SV extends IViewState,\n    SF extends IFluidState\n>(\n    syncedStateId: string,\n    syncedState: ISyncedState,\n    dataProps: IFluidDataProps,\n    state: SV,\n    setState: (\n        newState: SV,\n        fromRootUpdate?: boolean,\n        isLocal?: boolean\n    ) => void,\n    fluidToView: FluidToViewMap<SV, SF>,\n    viewToFluid?: ViewToFluidMap<SV, SF>,\n): Promise<void> {\n    const schemaHandles = getSchema(\n        syncedStateId,\n        syncedState,\n    );\n    if (schemaHandles?.storedHandleMapHandle.absolutePath === undefined) {\n        throw Error(`Schema not initialized prior to render for ${syncedStateId}`);\n    }\n    const storedHandleMap = dataProps.fluidObjectMap.get(\n        schemaHandles?.storedHandleMapHandle.absolutePath,\n    )?.fluidObject as SharedMap;\n    if (storedHandleMap === undefined) {\n        throw Error(`Stored handle map not initialized prior to render for ${syncedStateId}`);\n    }\n    const unlistenedHandles: IFluidHandle[] = [];\n    for (const handle of storedHandleMap.values()) {\n        unlistenedHandles.push(handle);\n    }\n\n    const currentFluidState = getFluidState(\n        syncedStateId,\n        syncedState,\n        dataProps.fluidObjectMap,\n        fluidToView,\n    );\n    if (currentFluidState === undefined) {\n        throw Error(\"Synced state update triggered before Fluid state was initialized\");\n    }\n\n    for (const fluidStateKey of fluidToView.keys()) {\n        const value = fluidToView.get(fluidStateKey);\n        if (value === undefined) {\n            throw Error(\"Cannot find fluidToView value\");\n        }\n        if (value.sharedObjectCreate !== undefined) {\n            const fluidObject = currentFluidState[fluidStateKey] as any;\n            unlistenedHandles.push(fluidObject.handle);\n        }\n    }\n\n    state.isInitialized = true;\n    state.syncedStateId = syncedStateId;\n    // Define the synced state callback listener that will be responsible for triggering state updates on synced state\n    // value changes\n    const syncedStateCallback = (\n        change: IValueChanged,\n        local: boolean,\n    ) => {\n        const callback = syncedStateCallbackListener(\n            dataProps.fluidObjectMap,\n            storedHandleMap,\n            syncedStateId,\n            syncedState,\n            dataProps.runtime,\n            state,\n            setState,\n            fluidToView,\n            viewToFluid,\n        );\n        return callback(change, local);\n    };\n\n    // Add the callback to the fluidObject's own synced state\n    syncedState.addValueChangedListener(syncedStateCallback);\n    storedHandleMap.on(\"valueChanged\", (\n        change: IValueChanged,\n        local: boolean,\n    ) => {\n        const handle = storedHandleMap.get<IFluidHandle>(change.key);\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (handle !== undefined && !state.fluidObjectMap?.has(handle.absolutePath)) {\n            state.fluidObjectMap?.set(handle.absolutePath, {\n                isListened: false,\n            });\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            updateStateAndFluidObjectMap<SV, SF>(\n                [handle],\n                dataProps.fluidObjectMap,\n                storedHandleMap,\n                true,\n                syncedStateId,\n                syncedState,\n                dataProps.runtime,\n                state,\n                setState,\n                syncedStateCallback,\n                fluidToView,\n                viewToFluid,\n            );\n        }\n    });\n\n    return updateStateAndFluidObjectMap<SV, SF>(\n        unlistenedHandles,\n        dataProps.fluidObjectMap,\n        storedHandleMap,\n        true,\n        syncedStateId,\n        syncedState,\n        dataProps.runtime,\n        state,\n        setState,\n        syncedStateCallback,\n        fluidToView,\n        viewToFluid,\n    );\n}\n"]}