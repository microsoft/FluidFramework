{
	"name": "@fluidframework/presence",
	"version": "2.13.0",
	"description": "A component for lightweight data sharing within a single session",
	"homepage": "https://fluidframework.com",
	"repository": {
		"type": "git",
		"url": "https://github.com/microsoft/FluidFramework.git",
		"directory": "packages/framework/presence"
	},
	"license": "MIT",
	"author": "Microsoft and contributors",
	"sideEffects": false,
	"type": "module",
	"exports": {
		"./alpha": {
			"import": {
				"types": "./lib/alpha.d.ts",
				"default": "./lib/index.js"
			},
			"require": {
				"types": "./dist/alpha.d.ts",
				"default": "./dist/index.js"
			}
		},
		"./internal/container-definitions/internal": {
			"import": "./lib/container-definitions/index.js",
			"require": "./dist/container-definitions/index.js"
		},
		"./internal/core-interfaces": {
			"import": "./lib/core-interfaces/index.js",
			"require": "./dist/core-interfaces/index.js"
		},
		"./internal/exposedInternalTypes": {
			"import": "./lib/exposedInternalTypes.js",
			"require": "./dist/exposedInternalTypes.js"
		},
		"./internal/exposedUtilityTypes": {
			"import": "./lib/exposedUtilityTypes.js",
			"require": "./dist/exposedUtilityTypes.js"
		}
	},
	"files": [
		"dist/**/*",
		"lib/**/*",
		"*.d.ts",
		"!**/test/**"
	],
	"scripts": {
		"api": "fluid-build . --task api",
		"api-extractor:commonjs": "flub generate entrypoints --outDir ./dist",
		"api-extractor:esnext": "flub generate entrypoints --outDir ./lib",
		"build": "fluid-build . --task build",
		"build:commonjs": "fluid-build . --task commonjs",
		"build:compile": "fluid-build . --task compile",
		"build:docs": "api-extractor run --local",
		"build:esnext": "tsc --project ./tsconfig.json",
		"build:test": "npm run build:test:esm && npm run build:test:cjs && npm run build:test:esm:core-interfaces-no-exactOptionalPropertyTypes",
		"build:test:cjs": "fluid-tsc commonjs --project ./src/test/tsconfig.cjs.json",
		"build:test:esm": "tsc --project ./src/test/tsconfig.json",
		"build:test:esm:core-interfaces-no-exactOptionalPropertyTypes": "tsc --project ./src/test/core-interfaces/tsconfig.no-exactOptionalPropertyTypes.json",
		"check:are-the-types-wrong": "attw --pack . --profile node16",
		"check:biome": "biome check .",
		"check:exports": "concurrently \"npm:check:exports:*\"",
		"check:exports:bundle-release-tags": "api-extractor run --config api-extractor/api-extractor-lint-bundle.json",
		"check:exports:cjs:alpha": "api-extractor run --config api-extractor/api-extractor-lint-alpha.cjs.json",
		"check:exports:esm:alpha": "api-extractor run --config api-extractor/api-extractor-lint-alpha.esm.json",
		"check:prettier": "prettier --check . --cache --ignore-path ../../../.prettierignore",
		"ci:build:docs": "api-extractor run",
		"clean": "rimraf --glob dist lib \"**/*.tsbuildinfo\" \"**/*.build.log\" _api-extractor-temp nyc",
		"eslint": "eslint --format stylish src",
		"eslint:fix": "eslint --format stylish src --fix --fix-type problem,suggestion,layout",
		"format": "npm run format:biome",
		"format:biome": "biome check . --write",
		"format:prettier": "prettier --write . --cache --ignore-path ../../../.prettierignore",
		"lint": "fluid-build . --task lint",
		"lint:fix": "fluid-build . --task eslint:fix --task format",
		"test": "npm run test:mocha",
		"test:coverage": "c8 npm test",
		"test:mocha": "npm run test:mocha:esm && npm run test:mocha:cjs",
		"test:mocha:cjs": "mocha --recursive \"dist/test/**/*.spec.*js\" --exit",
		"test:mocha:esm": "mocha --recursive \"lib/test/**/*.spec.*js\" --exit",
		"test:mocha:verbose": "cross-env FLUID_TEST_VERBOSE=1 npm run test:mocha",
		"tsc": "fluid-tsc commonjs --project ./tsconfig.cjs.json && copyfiles -f ./src/cjs/package.json ./dist",
		"typetests:gen": "flub generate typetests --dir . -v",
		"typetests:prepare": "flub typetests --dir . --reset --previous --normalize"
	},
	"c8": {
		"all": true,
		"cache-dir": "nyc/.cache",
		"exclude": [
			"src/test/**/*.*ts",
			"dist/test/**/*.*js",
			"lib/test/**/*.*js"
		],
		"exclude-after-remap": false,
		"include": [
			"src/**/*.*ts",
			"dist/**/*.*js",
			"lib/**/*.*js"
		],
		"report-dir": "nyc/report",
		"reporter": [
			"cobertura",
			"html",
			"text"
		],
		"temp-directory": "nyc/.nyc_output"
	},
	"dependencies": {
		"@fluid-internal/client-utils": "workspace:~",
		"@fluidframework/container-definitions": "workspace:~",
		"@fluidframework/container-loader": "workspace:~",
		"@fluidframework/container-runtime-definitions": "workspace:~",
		"@fluidframework/core-interfaces": "workspace:~",
		"@fluidframework/core-utils": "workspace:~",
		"@fluidframework/datastore": "workspace:~",
		"@fluidframework/datastore-definitions": "workspace:~",
		"@fluidframework/fluid-static": "workspace:~",
		"@fluidframework/id-compressor": "workspace:~",
		"@fluidframework/runtime-definitions": "workspace:~",
		"@fluidframework/runtime-utils": "workspace:~",
		"@fluidframework/shared-object-base": "workspace:~",
		"@fluidframework/telemetry-utils": "workspace:~"
	},
	"devDependencies": {
		"@arethetypeswrong/cli": "^0.17.1",
		"@biomejs/biome": "~1.9.3",
		"@fluid-tools/build-cli": "^0.51.0",
		"@fluidframework/build-common": "^2.0.3",
		"@fluidframework/build-tools": "^0.51.0",
		"@fluidframework/driver-definitions": "workspace:~",
		"@fluidframework/eslint-config-fluid": "^5.6.0",
		"@fluidframework/test-runtime-utils": "workspace:~",
		"@fluidframework/test-utils": "workspace:~",
		"@microsoft/api-extractor": "7.47.8",
		"@types/mocha": "^9.1.1",
		"@types/node": "^18.19.0",
		"@types/sinon": "^17.0.3",
		"c8": "^8.0.1",
		"concurrently": "^8.2.1",
		"copyfiles": "^2.4.1",
		"cross-env": "^7.0.3",
		"eslint": "~8.55.0",
		"mocha": "^10.2.0",
		"mocha-multi-reporters": "^1.5.1",
		"prettier": "~3.0.3",
		"rimraf": "^4.4.0",
		"sinon": "^18.0.1",
		"typescript": "~5.4.5"
	},
	"fluidBuild": {
		"tasks": {
			"build:test:esm:core-interfaces-no-exactOptionalPropertyTypes": [
				"build:esnext"
			],
			"check:exports:bundle-release-tags": [
				"build:esnext"
			],
			"eslint": [
				"build:esnext",
				"^build:test:esm"
			]
		}
	},
	"typeValidation": {
		"disabled": true,
		"broken": {},
		"entrypoint": "internal"
	}
}
