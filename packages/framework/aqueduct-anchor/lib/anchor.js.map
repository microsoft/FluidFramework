{"version":3,"file":"anchor.js","sourceRoot":"","sources":["../src/anchor.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,eAAe,EAAE,sBAAsB,EAAE,MAAM,2BAA2B,CAAC;AAEpF,OAAO,EAAoB,kBAAkB,EAAE,MAAM,sCAAsC,CAAC;AAO5F,MAAM,OAAO,cAAe,SAAQ,eAAe;IAY/C,YAAY,OAA0B,EAAE,OAA0B;QAC9D,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAVrB,SAAI,GAAW,SAAS,CAAC;IAWhC,CAAC;IAbM,MAAM,CAAC,UAAU,KAAK,OAAO,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;IAe7D,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;IACzC,CAAC;IAEM,GAAG,CAAC,IAAsB,EAAE,cAAsB;QACrD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IACvD,CAAC;IAES,KAAK,CAAC,8BAA8B;QAC1C,MAAM,MAAM,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,qBAAqB,CAAC,CAAC;QAC9E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IACxD,CAAC;IAES,KAAK,CAAC,uBAAuB;QACnC,IAAI,CAAC,mBAAmB;YACpB,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuC,qBAAqB,CAAC,CAAC,GAAG,EAAE,CAAC;IAC/F,CAAC;;AA5BuB,sBAAO,GAAG,IAAI,sBAAsB,CACxD,cAAc,EAAE;IACZ,kBAAkB,CAAC,UAAU,EAAE;CAClC,CACJ,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { PrimedComponent, PrimedComponentFactory } from \"@microsoft/fluid-aqueduct\";\nimport { IComponentHandle } from \"@microsoft/fluid-component-core-interfaces\";\nimport { SummarizableData, SummarizableObject } from \"@microsoft/fluid-summarizable-object\";\nimport {\n    IComponentContext,\n    IComponentRuntime,\n} from \"@microsoft/fluid-runtime-definitions\";\nimport { IAqueductAnchor } from \"./interfaces\";\n\nexport class AqueductAnchor extends PrimedComponent implements IAqueductAnchor {\n    public static getFactory() { return AqueductAnchor.factory; }\n\n    public name: string = \"default\";\n    private static readonly factory = new PrimedComponentFactory(\n        AqueductAnchor, [\n            SummarizableObject.getFactory(),\n        ],\n    );\n\n    private _summarizableObject!: SummarizableObject;\n\n    constructor(runtime: IComponentRuntime, context: IComponentContext) {\n        super(runtime, context);\n    }\n\n    public get data(): SummarizableData {\n        return this._summarizableObject.data;\n    }\n\n    public set(data: SummarizableData, sequenceNumber: number) {\n        this._summarizableObject.set(data, sequenceNumber);\n    }\n\n    protected async componentInitializingFirstTime() {\n        const object = SummarizableObject.create(this.runtime, \"anchor-summarizable\");\n        this.root.set(\"summarizable-object\", object.handle);\n    }\n\n    protected async componentHasInitialized() {\n        this._summarizableObject =\n            await this.root.get<IComponentHandle<SummarizableObject>>(\"summarizable-object\").get();\n    }\n}\n"]}