{"version":3,"file":"collection.js","sourceRoot":"","sources":["../src/collection.ts"],"names":[],"mappings":"AAAA;;;GAGG;AASH,MAAM,CAAC,MAAM,sBAAsB,GAAwC,wBAAwB,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidObject } from \"@fluidframework/core-interfaces\";\n\ndeclare module \"@fluidframework/core-interfaces\" {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    export interface IFluidObject extends Readonly<Partial<IProvideFluidObjectCollection>> { }\n}\n\nexport const IFluidObjectCollection: keyof IProvideFluidObjectCollection = \"IFluidObjectCollection\";\n\nexport interface IProvideFluidObjectCollection {\n    readonly IFluidObjectCollection: IFluidObjectCollection;\n}\n\n/**\n * A data store that implements a collection of fluid objects.  Typically, the\n * fluid objects in the collection would be like-typed.\n */\nexport interface IFluidObjectCollection extends IProvideFluidObjectCollection {\n    createCollectionItem<TOpt = object>(options?: TOpt): IFluidObject;\n    removeCollectionItem(instance: IFluidObject): void;\n    // Need iteration\n}\n"]}