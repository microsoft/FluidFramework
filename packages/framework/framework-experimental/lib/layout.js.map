{"version":3,"file":"layout.js","sourceRoot":"","sources":["../src/layout.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAWH,MAAM,CAAC,MAAM,gBAAgB,GAAkC,kBAAkB,CAAC;AAoBlF;;GAEG;AACH,MAAM,CAAN,IAAY,wBAOX;AAPD,WAAY,wBAAwB;IAChC,uEAAI,CAAA;IACJ,yEAAK,CAAA;IACL,mEAAE,CAAA;IACF,uEAAI,CAAA;IACJ,6EAAO,CAAA;IACP,yEAAK,CAAA;AACT,CAAC,EAPW,wBAAwB,KAAxB,wBAAwB,QAOnC;AAED,MAAM,CAAC,MAAM,gBAAgB,GAAkC,kBAAkB,CAAC;AAclF,MAAM,CAAC,MAAM,qBAAqB,GAAuC,uBAAuB,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\ndeclare module \"@fluidframework/component-core-interfaces\" {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    export interface IFluidObject extends Readonly<Partial<\n        IProvideComponentLayout\n        & IProvideComponentCursor\n        & IProvideComponentKeyHandlers>> {\n    }\n}\n\nexport const IComponentLayout: keyof IProvideComponentLayout = \"IComponentLayout\";\n\nexport interface IProvideComponentLayout {\n    readonly IComponentLayout: IComponentLayout;\n}\n\n/**\n * Provide information about component preferences for layout.\n */\nexport interface IComponentLayout extends IProvideComponentLayout {\n    aspectRatio?: number;\n    minimumWidth?: number;\n    minimumHeight?: number;\n    variableHeight?: boolean;\n    requestedWidthPercentage?: number;\n    canInline?: boolean;\n    preferInline?: boolean;\n    preferPersistentElement?: boolean;\n}\n\n/**\n * Direction from which the cursor has entered or left a component.\n */\nexport enum ComponentCursorDirection {\n    Left,\n    Right,\n    Up,\n    Down,\n    Airlift,\n    Focus,\n}\n\nexport const IComponentCursor: keyof IProvideComponentCursor = \"IComponentCursor\";\n\nexport interface IProvideComponentCursor {\n    readonly IComponentCursor: IComponentCursor;\n}\n\nexport interface IComponentCursor extends IProvideComponentCursor {\n    enter(direction: ComponentCursorDirection): void;\n    leave(direction: ComponentCursorDirection): void;\n    // Returns true if cursor leaves the component\n    fwd(): boolean;\n    rev(): boolean;\n}\n\nexport const IComponentKeyHandlers: keyof IProvideComponentKeyHandlers = \"IComponentKeyHandlers\";\n\nexport interface IProvideComponentKeyHandlers {\n    readonly IComponentKeyHandlers: IComponentKeyHandlers;\n}\n\n// Used when another component will forward keyboard events to this component\nexport interface IComponentKeyHandlers extends IProvideComponentKeyHandlers {\n    onKeypress(e: KeyboardEvent): void;\n    onKeydown(e: KeyboardEvent): void;\n}\n"]}