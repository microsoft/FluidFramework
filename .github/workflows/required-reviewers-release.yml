name: Required release approval
on:
  # This workflow needs to run on review changes because it evaluates the review state.
  pull_request_review:
    types:
      - submitted
      - dismissed

permissions:
  # Needed to write the comments to the PRs themselves
  pull-requests: write

jobs:
  check_branch:
    name: Check target branch
    runs-on: ubuntu-latest
    outputs:
      is_release_branch: |
        ${{ steps.is-release-branch.outputs.is_release_branch || steps.not-release-branch.outputs.is_release_branch }}
    steps:
      - name: Check if target branch is a release branch
        id: is-release-branch
        if: |
          startsWith(github.event.pull_request.base.ref, 'release/client/') ||
          startsWith(github.event.pull_request.base.ref, 'release/server/') ||
          startsWith(github.event.pull_request.base.ref, 'test/release/')
        run: |
          echo "::set-output name=is_release_branch::true"
          echo ":ship: Release branch detected" >> $GITHUB_STEP_SUMMARY
      - name: Target branch is a release branch
        id: not-release-branch
        if: |
          !(startsWith(github.event.pull_request.base.ref, 'release/client/') ||
          startsWith(github.event.pull_request.base.ref, 'release/server/') ||
          startsWith(github.event.pull_request.base.ref, 'test/release/'))
        run: |
          echo "::set-output name=is_release_branch::false"
          echo ":no_entry_sign: No release branch detected" >> $GITHUB_STEP_SUMMARY

  not_release_branch:
    name: Check approval requirements
    needs: check_branch
    if: needs.check_branch.outputs.is_release_branch != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Not special approval requirements
        run: |
          echo ":white_check_mark: No approval required!" >> $GITHUB_STEP_SUMMARY

  check_approval:
    name: Approved by required reviewers
    needs: check_branch
    if: needs.check_branch.outputs.is_release_branch == 'true'
    runs-on: ubuntu-latest
    steps:
      # release notes: https://github.com/actions/checkout/releases/tag/v4.1.7
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # ratchet:actions/checkout@v4
        with:
          persist-credentials: false
          submodules: false

      # install and configure node, pnpm and the changeset tools
      # release notes: https://github.com/pnpm/action-setup/releases/tag/v4.0.0
      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # ratchet:pnpm/action-setup@v4

      # release notes: https://github.com/actions/setup-node/releases/tag/v4.0.3
      - uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # ratchet:actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Install Fluid build tools
        continue-on-error: true
        run: |
          cd build-tools
          pnpm install --frozen-lockfile
          pnpm run build:compile
          # We want flub available to call, so we run npm link in the build-cli package, which creates shims that are avilable on the PATH
          # Use npm link instead of pnpm link because it handles bins better
          cd packages/build-cli
          npm link

      - name: Check build-tools installation
        run: |
          # Info for debugging
          which flub
          flub --help
          flub commands

      - name: Check PR approval
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # This command will fail with an error if the PR is not approved, which
          # will in turn cause the CI job to fail.
          flub check prApproval \
            --pr ${{ github.event.pull_request.number }} \
            --repo ${{ github.repository }} \
            --team FluidFramework-ReleaseApprovers
