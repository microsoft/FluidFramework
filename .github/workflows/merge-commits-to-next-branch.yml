#https://www.jessesquires.com/blog/2021/08/24/useful-label-based-github-actions-workflows/

name: Merge commits to next branch

on:
  schedule:
    - cron: "0 */2 * * *"

env:
  COMMIT_INFO: commit-info

jobs:
  dequeue:
    runs-on: ubuntu-latest
    steps:
      - name: Check queue first item
        uses: actions/github-script@v6
        with:
          script: |
              const connectionString = ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
              const queueName = ${{ secrets.AZURE_QUEUE_NAME }}
              const queueServiceClient = QueueServiceClient.fromConnectionString(connectionString);
              const queueClient = queueServiceClient.getQueueClient(queueName);
              var receivedMessages = await queueClient.receiveMessages();
              const message = receivedMessages.receivedMessageItems[0];
              $COMMIT_INFO = JSON.parse(message.messageText);
  createPullRequest:
    runs-on: ubuntu-latest
    if: ( $COMMIT_INFO.label == 'queued' )
    steps:
      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: '[Main:Next] Integrate $COMMIT_INFO.sha',
              $COMMIT_INFO.author,
              repo,
              head: '${{ github.ref_name }}',
              base: 'next',
              body: [
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script).'
              ].join('\n')
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['merge-with-next', 'automated pr']
            });
  update-commit-status:
    runs-on: ubuntu-latest
    needs: [createPullRequest]
    if: ( needs.createPullRequest.result == 'success' )
    steps:
      - name: Update Queue label
        uses: actions/github-script@v6
        steps:
          - name: Update Queue
            uses: actions/github-script@v6
            with:
              script: |
                var receivedMessages = await queueClient.receiveMessages();
                const firstMessage = receivedMessages.receivedMessageItems[0];
                await queueClient.updateMessage(
                    firstMessage.sha,
                    firstMessage.assignee,
                    'in-progress');
  remove-from-queue:
    runs-on: ubuntu-latest
    needs: [createPullRequest]
    if: ( needs.createPullRequest.result == 'success' ) && (needs.createPullRequest.result.action == 'closed' || needs.createPullRequest.result.merged == 'true' )
    steps:
      - name: Remove from Queue
        uses: actions/github-script@v6
        with:
          script: |
            const connectionString = ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }};
            const queueServiceClient = QueueServiceClient.fromConnectionString(connectionString);
            const queueName = ${{ secrets.AZURE_QUEUE_NAME }};
            const queueClient = queueServiceClient.getQueueClient(queueName);
            receivedMessages = await queueClient.receiveMessages();
            var message = receivedMessages.receivedMessageItems[0];
            await queueClient.deleteMessage(message.messageId, message.popReceipt);
