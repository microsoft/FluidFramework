{
  "name": "root",
  "version": "0.14.0",
  "private": true,
  "homepage": "https://fluidframework.com",
  "repository": "microsoft/FluidFramework",
  "license": "MIT",
  "author": "Microsoft",
  "scripts": {
    "build": "npm run policy-check && npm run layer-check && npm run build:genver && npm run build:compile && npm run lint && npm run build:docs",
    "build:ci": "npm run build:genver && lerna run build:compile --stream",
    "build:compile": "lerna run build:compile --stream",
    "build:docs": "lerna run build:docs --stream --parallel",
    "build:fast": "fluid-build --root .",
    "build:full": "npm run build:genver && npm run build:full:compile && npm run lint && npm run build:docs",
    "build:full:compile": "lerna run build:full:compile --stream",
    "build:gendocs": "copyfiles server/routerlicious/_api-extractor-temp/** ./_api-extractor-temp/doc-models/ -f -V && cd docs && npm run build",
    "build:genver": "lerna run build:genver --stream --parallel",
    "bump-version": "fluid-bump-version --root .",
    "bundle-analysis": "npm run webpack:profile && fluid-collect-bundle-analyses",
    "ci:build": "npm run build:genver && lerna run build:compile --stream",
    "ci:test": "npm run test:report;t1=$?;npm run test:copyresults; exit $t1",
    "ci:test:coverage": "npm run test:coverage;t1=$?;npm run test:copyresults; exit $t1",
    "clean": "lerna run clean --stream --parallel && npm run clean:docs && npm run clean:nyc",
    "clean:docs": "rimraf **/_api-extractor-temp docs/api/*/**",
    "clean:nyc": "rimraf nyc/**",
    "clean:r11s": "cd server/routerlicious && npm run clean",
    "postinstall": "npm run postinstall:lerna",
    "layer-check": "fluid-layer-check --info tools/build-tools/data/layerInfo.json",
    "lint": "lerna run lint --no-sort --stream",
    "lint:fix": "lerna run lint:fix --no-sort --stream",
    "policy-check": "fluid-repo-policy-check",
    "policy-check:fix": "fluid-repo-policy-check -r",
    "post-lerna-install:default": "[ -f package-lock.json ] && mv package-lock.json lerna-package-lock.json; [ -f package-lock.json.bak ] && mv package-lock.json.bak package-lock.json; exit 0",
    "post-lerna-install:win32": "if exist package-lock.json move package-lock.json lerna-package-lock.json && if exist package-lock.json.bak move package-lock.json.bak package-lock.json",
    "postinstall:lerna": "run-script-os",
    "postinstall:lerna:default": "npm run pre-lerna-install:default && { lerna bootstrap --strict --hoist;t1=$?;npm run post-lerna-install:default;exit $t1;}",
    "postinstall:lerna:win32": "npm run pre-lerna-install:win32 && (lerna bootstrap --strict --hoist & npm run post-lerna-install:win32)",
    "pre-lerna-install:default": "[ -f package-lock.json ] && mv package-lock.json package-lock.json.bak; [ -f lerna-package-lock.json ] && mv lerna-package-lock.json package-lock.json; exit 0",
    "pre-lerna-install:win32": "if exist package-lock.json move package-lock.json package-lock.json.bak && if exist lerna-package-lock.json move lerna-package-lock.json package-lock.json",
    "restart": "cd server/routerlicious && npm run restart",
    "start:docker": "docker-compose -f server/docker-compose.yml up",
    "stop:docker": "docker-compose -f server/docker-compose.yml down",
    "stop:docker:full": "docker-compose -f server/docker-compose.yml down && docker volume prune --force",
    "test": "npm run test:mocha && npm run test:jest && npm run test:types",
    "test:bail": "npm run test:mocha:bail && npm run test:jest:bail",
    "test:ci": "npm run test:report;t1=$?;npm run test:copyresults; exit $t1",
    "test:ci:coverage": "npm run test:coverage;t1=$?;npm run test:copyresults; exit $t1",
    "test:copyresults": "copyfiles --exclude \"**/node_modules/**\" \"**/nyc/**\" nyc",
    "test:coverage": "nyc npm run test:report",
    "test:fromroot": "mocha \"packages/**/dist/test/**/*.spec.js\" --exit",
    "test:full": "npm run test:ci:coverage",
    "test:jest": "assign-test-ports && lerna run test:jest --concurrency 4 --stream --no-bail --no-sort",
    "test:jest:bail": "assign-test-ports && lerna run test:jest --concurrency 4 --stream",
    "test:jest:report": "assign-test-ports && lerna run test:jest --concurrency 4 --stream --no-bail --no-sort -- -- --ci --reporters=default --reporters=jest-junit",
    "test:mocha": "lerna run test:mocha --stream --no-bail --no-sort",
    "test:mocha:bail": "lerna run test:mocha --stream",
    "test:mocha:report": "lerna run test:mocha --stream --no-bail --no-sort -- -- --timeout 4s --reporter mocha-junit-reporter --reporter-options mochaFile=nyc/mocha-junit-report.xml",
    "test:report": "npm run test:mocha:report && npm run test:jest:report",
    "test:types": "lerna run test:types --stream --no-bail --no-sort",
    "tsc": "lerna run tsc --stream",
    "tsc:fast": "fluid-build  --root . -s tsc",
    "tsfmt": "lerna run tsfmt:fix --no-sort --stream --no-bail",
    "tsfmt:fix": "lerna run tsfmt:fix --no-sort --stream --no-bail",
    "watch": "concurrently \"npm run watch:tsc\" \"npm run watch:esnext\" \"npm run watch:webpack\"",
    "watch:esnext": "lerna run --parallel build:esnext -- -- --watch",
    "watch:tsc": "lerna run --parallel tsc -- -- --watch",
    "watch:webpack": "lerna run --parallel webpack -- -- --watch",
    "webpack": "lerna run --no-sort webpack --stream",
    "webpack:profile": "lerna run --no-sort webpack:profile --stream"
  },
  "nyc": {
    "all": true,
    "cache-dir": "nyc/.cache",
    "exclude": [
      "**/*.d.ts",
      "packages/**/src/test/**/*.ts",
      "packages/**/dist/test/**/*.js",
      "**/*.bundle.js"
    ],
    "exclude-after-remap": false,
    "extension": [
      ".ts",
      ".tsx",
      ".js",
      ".jsx"
    ],
    "include": [
      "packages/**/src/**/*.ts",
      "packages/**/dist/**/*.js"
    ],
    "report-dir": "nyc/report",
    "reporter": [
      "cobertura",
      "html",
      "text"
    ],
    "temp-directory": "nyc/.nyc_output"
  },
  "devDependencies": {
    "@fluidframework/build-tools": "^0.2.3049",
    "@fluidframework/test-tools": "^0.2.3074",
    "@mattetti/custom-api-documenter": "^0.2.1",
    "@microsoft/api-extractor": "^7.7.2",
    "concurrently": "^5.2.0",
    "copyfiles": "^2.1.0",
    "lerna": "^3.14.1",
    "nyc": "^15.0.0",
    "rimraf": "^2.6.2",
    "run-script-os": "^1.0.7",
    "typescript": "~3.7.4"
  }
}
