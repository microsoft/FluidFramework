{"version":3,"file":"FluidFeature.js","sourceRoot":"","sources":["../src/FluidFeature.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport yaml = require('js-yaml');\r\nimport { FileSystem } from '@rushstack/node-core-library';\r\nimport {\r\n  MarkdownDocumenterFeature,\r\n  IMarkdownDocumenterFeatureOnBeforeWritePageArgs,\r\n  IMarkdownDocumenterFeatureOnFinishedArgs\r\n} from '@microsoft/api-documenter';\r\nimport {\r\n  CustomMarkdownEmitter\r\n} from '@microsoft/api-documenter/lib/markdown/CustomMarkdownEmitter'\r\n\r\nimport {\r\n  DocSection,\r\n  DocPlainText,\r\n  DocLinkTag,\r\n  TSDocConfiguration,\r\n  StringBuilder,\r\n  // DocNodeKind,\r\n  // DocParagraph,\r\n  // DocCodeSpan,\r\n  // DocFencedCode,\r\n  // StandardTags,\r\n  // DocBlock,\r\n  // DocComment,\r\n  // DocNodeContainer\r\n} from '@microsoft/tsdoc';\r\n\r\nimport {\r\n  // ApiModel,\r\n  ApiItem,\r\n  // ApiEnum,\r\n  // ApiPackage,\r\n  ApiItemKind,\r\n  // ApiReleaseTagMixin,\r\n  // ApiDocumentedItem,\r\n  // ApiClass,\r\n  // ReleaseTag,\r\n  // ApiStaticMixin,\r\n  // ApiPropertyItem,\r\n  // ApiInterface,\r\n  // Excerpt,\r\n  // ApiParameterListMixin,\r\n  // ApiReturnTypeMixin,\r\n  // ApiDeclaredItem,\r\n  // ApiNamespace,\r\n  // ExcerptTokenKind,\r\n  // IResolveDeclarationReferenceResult\r\n} from '@microsoft/api-extractor-model';\r\n// import { throws } from 'assert';\r\n\r\ninterface INavigationNode {\r\n  title: string;\r\n  url?: string;\r\n  subitems?: INavigationNode[];\r\n}\r\ninterface INavigationFile {\r\n  api_nav: INavigationNode[];\r\n}\r\n\r\nexport class FluidFeature extends MarkdownDocumenterFeature {\r\n  private _apiItemsWithPages: Set<ApiItem> = new Set<ApiItem>();\r\n  private _tsdocConfiguration: TSDocConfiguration = new TSDocConfiguration();\r\n  private _markdownEmitter: CustomMarkdownEmitter;\r\n\r\n  public onInitialized(): void {\r\n    console.log('FluidFeature: onInitialized()');\r\n    this._markdownEmitter = new CustomMarkdownEmitter(this.context.apiModel);\r\n  }\r\n\r\n  public onBeforeWritePage(eventArgs: IMarkdownDocumenterFeatureOnBeforeWritePageArgs): void {\r\n    // Add the Hugo header\r\n    const header: string = [\r\n      '---',\r\n      'title: \\\"' + this._pageTitle(eventArgs.apiItem) + '\\\"',\r\n      'draft: false',\r\n      '---',\r\n      ''\r\n    ].join('\\n');\r\n    eventArgs.pageContent = header + this._customContent(eventArgs.apiItem).toString();\r\n    // eventArgs.pageContent;\r\n\r\n    this._apiItemsWithPages.add(eventArgs.apiItem);\r\n  }\r\n\r\n  public onFinished(eventArgs: IMarkdownDocumenterFeatureOnFinishedArgs): void {\r\n    const navigationFile: INavigationFile = {\r\n      api_nav: [\r\n        {\r\n          title: 'API Reference',\r\n          url: '/api/'\r\n        }\r\n      ]\r\n    };\r\n    this._buildNavigation(navigationFile.api_nav, this.context.apiModel);\r\n\r\n    const navFilePath: string = path.join(this.context.outputFolder, '..', 'api_nav.yaml');\r\n    const navFileContent: string = yaml.safeDump(navigationFile, { lineWidth: 120 });\r\n\r\n    FileSystem.writeFile(navFilePath, navFileContent, { ensureFolderExists: true });\r\n\r\n    const indexFilePath: string = path.join(this.context.outputFolder, '_index.md');\r\n    const indexFileContent: string = \"---\\ntitle: API Docs\\n---\"\r\n    FileSystem.writeFile(indexFilePath, indexFileContent, { ensureFolderExists: true })\r\n    FileSystem.move({ sourcePath: path.join(this.context.outputFolder, 'index.md'), destinationPath: path.join(this.context.outputFolder, 'documenter.md') })\r\n  }\r\n\r\n\r\n  private _pageTitle(item: ApiItem): string {\r\n\r\n    switch (item.kind) {\r\n      case ApiItemKind.Method:\r\n        return (item.parent!.displayName + \".\" + item.displayName).replace(/\"/g, '');\r\n      case ApiItemKind.Constructor:\r\n        return (item.parent!.displayName + \" constructor\").replace(/\"/g, '');\r\n      default:\r\n        return item.displayName.replace(/\"/g, '');\r\n    }\r\n  }\r\n\r\n  private _buildNavigation(parentNodes: INavigationNode[], parentApiItem: ApiItem): void {\r\n    for (const apiItem of parentApiItem.members) {\r\n      if (this._apiItemsWithPages.has(apiItem)) {\r\n        const newNode: INavigationNode = {\r\n          title: apiItem.displayName,\r\n          url: path.posix\r\n            .join('/api/', this.context.documenter.getLinkForApiItem(apiItem)!)\r\n            .replace(/\\.md$/, '')\r\n        };\r\n        parentNodes.push(newNode);\r\n\r\n        const newNodeSubitems: INavigationNode[] = [];\r\n        this._buildNavigation(newNodeSubitems, apiItem);\r\n        if (newNodeSubitems.length > 0) {\r\n          newNode.subitems = newNodeSubitems;\r\n        }\r\n      } else {\r\n        this._buildNavigation(parentNodes, apiItem);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _customContent(apiItem: ApiItem): StringBuilder {\r\n    const output: DocSection = new DocSection({ configuration: this._tsdocConfiguration });\r\n    const str: StringBuilder = new StringBuilder();\r\n    this._writeBreadcrumb(output, apiItem);\r\n    this._markdownEmitter.emit(str, output, {\r\n      contextApiItem: apiItem,\r\n      onGetFilenameForApiItem: (apiItemForFilename: ApiItem) => {\r\n        return this.context.documenter.getLinkForApiItem(apiItemForFilename);\r\n      }\r\n    });\r\n    return str;\r\n    /*\r\n\r\n    const scopedName: string = apiItem.getScopedNameWithinPackage();\r\n\r\n    switch (apiItem.kind) {\r\n      case ApiItemKind.Class:\r\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} class` }));\r\n        break;\r\n      case ApiItemKind.Enum:\r\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} enum` }));\r\n        break;\r\n      case ApiItemKind.Interface:\r\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} interface` }));\r\n        break;\r\n      case ApiItemKind.Constructor:\r\n      case ApiItemKind.ConstructSignature:\r\n        output.appendNode(new DocHeading({ configuration, title: scopedName }));\r\n        break;\r\n      case ApiItemKind.Method:\r\n      case ApiItemKind.MethodSignature:\r\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} method` }));\r\n        break;\r\n      case ApiItemKind.Function:\r\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} function` }));\r\n        break;\r\n      case ApiItemKind.Model:\r\n        output.appendNode(new DocHeading({ configuration, title: `API Reference` }));\r\n        break;\r\n      case ApiItemKind.Namespace:\r\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} namespace` }));\r\n        break;\r\n      case ApiItemKind.Package:\r\n        console.log(`Writing ${apiItem.displayName} package`);\r\n        const unscopedPackageName: string = PackageName.getUnscopedName(apiItem.displayName);\r\n        output.appendNode(new DocHeading({ configuration, title: `${unscopedPackageName} package` }));\r\n        break;\r\n      case ApiItemKind.Property:\r\n      case ApiItemKind.PropertySignature:\r\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} property` }));\r\n        break;\r\n      case ApiItemKind.TypeAlias:\r\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} type` }));\r\n        break;\r\n      case ApiItemKind.Variable:\r\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} variable` }));\r\n        break;\r\n      default:\r\n        throw new Error('Unsupported API item kind: ' + apiItem.kind);\r\n    }\r\n\r\n    if (ApiReleaseTagMixin.isBaseClassOf(apiItem)) {\r\n      if (apiItem.releaseTag === ReleaseTag.Beta) {\r\n        this._writeBetaWarning(output);\r\n      }\r\n    }\r\n\r\n    if (apiItem instanceof ApiDocumentedItem) {\r\n      const tsdocComment: DocComment | undefined = apiItem.tsdocComment;\r\n\r\n      if (tsdocComment) {\r\n        if (tsdocComment.deprecatedBlock) {\r\n          output.appendNode(\r\n            new DocNoteBox({ configuration: this._tsdocConfiguration }, [\r\n              new DocParagraph({ configuration: this._tsdocConfiguration }, [\r\n                new DocPlainText({\r\n                  configuration: this._tsdocConfiguration,\r\n                  text: 'Warning: This API is now obsolete. '\r\n                })\r\n              ]),\r\n              ...tsdocComment.deprecatedBlock.content.nodes\r\n            ])\r\n          );\r\n        }\r\n\r\n        this._appendSection(output, tsdocComment.summarySection);\r\n      }\r\n    }\r\n\r\n    if (apiItem instanceof ApiDeclaredItem) {\r\n      if (apiItem.excerpt.text.length > 0) {\r\n        output.appendNode(\r\n          new DocParagraph({ configuration }, [\r\n            new DocEmphasisSpan({ configuration, bold: true }, [\r\n              new DocPlainText({ configuration, text: 'Signature:' })\r\n            ])\r\n          ])\r\n        );\r\n        output.appendNode(\r\n          new DocFencedCode({\r\n            configuration,\r\n            code: apiItem.getExcerptWithModifiers(),\r\n            language: 'typescript'\r\n          })\r\n        );\r\n      }\r\n\r\n      this._writeHeritageTypes(output, apiItem);\r\n    }\r\n\r\n    let appendRemarks: boolean = true;\r\n    switch (apiItem.kind) {\r\n      case ApiItemKind.Class:\r\n      case ApiItemKind.Interface:\r\n      case ApiItemKind.Namespace:\r\n      case ApiItemKind.Package:\r\n        this._writeRemarksSection(output, apiItem);\r\n        appendRemarks = false;\r\n        break;\r\n    }\r\n\r\n    switch (apiItem.kind) {\r\n      case ApiItemKind.Class:\r\n        this._writeClassTables(output, apiItem as ApiClass);\r\n        break;\r\n      case ApiItemKind.Enum:\r\n        this._writeEnumTables(output, apiItem as ApiEnum);\r\n        break;\r\n      case ApiItemKind.Interface:\r\n        this._writeInterfaceTables(output, apiItem as ApiInterface);\r\n        break;\r\n      case ApiItemKind.Constructor:\r\n      case ApiItemKind.ConstructSignature:\r\n      case ApiItemKind.Method:\r\n      case ApiItemKind.MethodSignature:\r\n      case ApiItemKind.Function:\r\n        this._writeParameterTables(output, apiItem as ApiParameterListMixin);\r\n        this._writeThrowsSection(output, apiItem);\r\n        break;\r\n      case ApiItemKind.Namespace:\r\n        this._writePackageOrNamespaceTables(output, apiItem as ApiNamespace);\r\n        break;\r\n      case ApiItemKind.Model:\r\n        this._writeModelTable(output, apiItem as ApiModel);\r\n        break;\r\n      case ApiItemKind.Package:\r\n        this._writePackageOrNamespaceTables(output, apiItem as ApiPackage);\r\n        break;\r\n      case ApiItemKind.Property:\r\n      case ApiItemKind.PropertySignature:\r\n        break;\r\n      case ApiItemKind.TypeAlias:\r\n        break;\r\n      case ApiItemKind.Variable:\r\n        break;\r\n      default:\r\n        throw new Error('Unsupported API item kind: ' + apiItem.kind);\r\n    }\r\n\r\n    if (appendRemarks) {\r\n      this._writeRemarksSection(output, apiItem);\r\n    }\r\n\r\n    const filename: string = path.join(this._outputFolder, this._getFilenameForApiItem(apiItem));\r\n    const stringBuilder: StringBuilder = new StringBuilder();\r\n\r\n    stringBuilder.append(\r\n      '<!-- Do not edit this file. It is automatically generated by API Documenter. -->\\n\\n'\r\n    );\r\n\r\n    this._markdownEmitter.emit(stringBuilder, output, {\r\n      contextApiItem: apiItem,\r\n      onGetFilenameForApiItem: (apiItemForFilename: ApiItem) => {\r\n        return this._getLinkFilenameForApiItem(apiItemForFilename);\r\n      }\r\n    });\r\n\r\n    let pageContent: string = stringBuilder.toString();\r\n\r\n    if (this._pluginLoader.markdownDocumenterFeature) {\r\n      // Allow the plugin to customize the pageContent\r\n      const eventArgs: IMarkdownDocumenterFeatureOnBeforeWritePageArgs = {\r\n        apiItem: apiItem,\r\n        outputFilename: filename,\r\n        pageContent: pageContent\r\n      };\r\n      this._pluginLoader.markdownDocumenterFeature.onBeforeWritePage(eventArgs);\r\n      pageContent = eventArgs.pageContent;\r\n    }\r\n\r\n    FileSystem.writeFile(filename, pageContent, {\r\n      convertLineEndings: this._documenterConfig ? this._documenterConfig.newlineKind : NewlineKind.CrLf\r\n    });\r\n  */\r\n  }\r\n\r\n  private _writeBreadcrumb(output: DocSection, apiItem: ApiItem): void {\r\n    output.appendNodeInParagraph(\r\n      new DocLinkTag({\r\n        configuration: this._tsdocConfiguration,\r\n        tagName: '@link',\r\n        linkText: 'Fluid API',\r\n        urlDestination: '/api/'\r\n      })\r\n    );\r\n\r\n    for (const hierarchyItem of apiItem.getHierarchy()) {\r\n      switch (hierarchyItem.kind) {\r\n        case ApiItemKind.Model:\r\n        case ApiItemKind.EntryPoint:\r\n          // We don't show the model as part of the breadcrumb because it is the root-level container.\r\n          // We don't show the entry point because today API Extractor doesn't support multiple entry points;\r\n          // this may change in the future.\r\n          break;\r\n        default:\r\n          output.appendNodesInParagraph([\r\n            new DocPlainText({\r\n              configuration: this._tsdocConfiguration,\r\n              text: ' > '\r\n            }),\r\n            new DocLinkTag({\r\n              configuration: this._tsdocConfiguration,\r\n              tagName: '@link',\r\n              linkText: hierarchyItem.displayName,\r\n              urlDestination: this.context.documenter.getLinkForApiItem(hierarchyItem)!.replace('./', '/api/')\r\n            })\r\n          ]);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n"]}