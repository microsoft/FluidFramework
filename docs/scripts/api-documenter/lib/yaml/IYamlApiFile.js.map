{"version":3,"file":"IYamlApiFile.js","sourceRoot":"","sources":["../../src/yaml/IYamlApiFile.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/**\r\n * TypeScript interface describing a Universal Reference YAML documentation file,\r\n * as defined by typescript.schema.json.\r\n *\r\n * NOTE: Corresponds to `Microsoft.DocAsCode.DataContracts.UniversalReference.PageViewModel` in DocFX.\r\n */\r\nexport interface IYamlApiFile {\r\n  /**\r\n   * The items contained in this file.\r\n   *\r\n   * NOTE: Corresponds to `ExceptionInfo.Items` in DocFX.\r\n   */\r\n  items: IYamlItem[];\r\n\r\n  /**\r\n   * References to other items.\r\n   *\r\n   * NOTE: Corresponds to `ExceptionInfo.References` in DocFX.\r\n   */\r\n  references?: IYamlReference[];\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ExceptionInfo.ShouldSkipMarkup` in DocFX.\r\n   */\r\n  shouldSkipMarkup?: boolean;\r\n}\r\n\r\n/**\r\n * Part of the IYamlApiFile structure. Represents basic API elements such as\r\n * classes, interfaces, members, etc.\r\n *\r\n * NOTE: Corresponds to `Microsoft.DocAsCode.DataContracts.UniversalReference.ItemViewModel` in DocFX.\r\n */\r\nexport interface IYamlItem {\r\n  /**\r\n   * The Unique Identifier (UID) for this item.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Uid` in DocFX.\r\n   */\r\n  uid: string;\r\n\r\n  /**\r\n   * A Roslyn comment ID (unused).\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.CommentId` in DocFX.\r\n   */\r\n  commentId?: string;\r\n\r\n  /**\r\n   * The ID for this item.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Id` in DocFX.\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * The Unique Identifier (UID) of the parent item. This value can vary by development language\r\n   * by setting the relevant `parent.${lang}` property.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Parent` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.ParentInDevLangs` in DocFX when `parent.${lang}` is used.\r\n   */\r\n  parent?: string;\r\n  'parent.typeScript'?: string;\r\n\r\n  /**\r\n   * The Unique Identifiers (UID) of the children of this item. This value can vary by development language\r\n   * by setting the relevant `children.${lang}` property.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Children` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.ChildrenInDevLangs` in DocFX when `children.${lang}` is used.\r\n   */\r\n  children?: string[];\r\n  'children.typeScript'?: string[];\r\n\r\n  /**\r\n   * Item's link URL. An item can only have a single link in cross references, so varying `href` by development\r\n   * languages is not supported.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Href` in DocFX.\r\n   */\r\n  href?: string;\r\n\r\n  /**\r\n   * The development languages supported by this item.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.SupportedLanguages` in DocFX.\r\n   */\r\n  langs?: YamlDevLangs[];\r\n\r\n  /**\r\n   * The local name of this item. This name should generally not be namespace qualified or include\r\n   * parent type information. This value can vary by development language by setting the relevant\r\n   * `name.${lang}` property.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Name` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.Names` in DocFX when `name.${lang}` is used.\r\n   */\r\n  name?: string;\r\n  'name.typeScript'?: string;\r\n\r\n  /**\r\n   * The name of this item including its parent type, if it has one. This name should generally not be namespace\r\n   * qualified. This value can vary by development language by setting the relevant `nameWithType.${lang}` property.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.NameWithType` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.NamesWithType` in DocFX when `nameWithType.${lang}` is used.\r\n   */\r\n  nameWithType?: string;\r\n  'nameWithType.typeScript'?: string;\r\n\r\n  /**\r\n   * The namespace-qualified name of this item including its parent type. This value can vary by development language\r\n   * by setting the relevant `fullName.${lang}` property.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.FullName` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.FullNames` in DocFX when `fullName.${lang}` is used.\r\n   */\r\n  fullName?: string;\r\n  'fullName.typeScript'?: string;\r\n\r\n  /**\r\n   * The type of source element this item represents. This value cannot vary by development language.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Type` in DocFX.\r\n   */\r\n  type: YamlTypeId;\r\n\r\n  /**\r\n   * The location of the item's source. This value can vary by development language by setting the relevant\r\n   * `source.${lang}` property.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Source` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.SourceInDevLangs` in DocFX when `source.${lang}` is used.\r\n   */\r\n  source?: IYamlSource;\r\n  'source.typeScript'?: IYamlSource;\r\n\r\n  /**\r\n   * The location of the item's documentation overrides. This value cannot vary by development language.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Documentation` in DocFX.\r\n   */\r\n  documentation?: IYamlSource;\r\n\r\n  /**\r\n   * The names of managed assemblies that contain this item. This value can vary by development language by setting\r\n   * the relevant `assemblies.${lang}` property.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.AssemblyNameList` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.AssemblyNameListInDevLangs` in DocFX when `assemblies.${lang}` is used.\r\n   */\r\n  assemblies?: string[];\r\n  'assemblies.typeScript'?: string[];\r\n\r\n  /**\r\n   * The Unique Identifier (UID) of the namespace that contains this item. This value can vary by development language\r\n   * by setting the relevant `namespace.${lang}` property.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.NamespaceName` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.NamespaceNameInDevLangs` in DocFX.\r\n   */\r\n  namespace?: string;\r\n  'namespace.typeScript'?: string;\r\n\r\n  /**\r\n   * The summary for the item. This value cannot vary by development language.\r\n   * Markdown is permitted.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Summary` in DocFX.\r\n   */\r\n  summary?: string;\r\n\r\n  /**\r\n   * The remarks for the item. This value cannot vary by development language.\r\n   * Markdown is permitted.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Remarks` in DocFX.\r\n   */\r\n  remarks?: string;\r\n\r\n  /**\r\n   * The examples for the item. This value cannot vary by development language.\r\n   * Markdown is permitted.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Examples` in DocFX.\r\n   */\r\n  examples?: string[];\r\n\r\n  /**\r\n   * The syntax for this item. This value itself cannot vary by development language, but\r\n   * instead contains properties that may vary by development language.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Syntax` in DocFX.\r\n   */\r\n  syntax?: IYamlSyntax;\r\n\r\n  /**\r\n   * The Unique Identifier (UID) of the member this item overrides. This value can vary by development language\r\n   * by setting the relevant `overridden.${lang}` property.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Overridden` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.OverriddenInDevLangs` in DocFX when `overriden.${lang}` is used.\r\n   */\r\n  overridden?: string;\r\n  'overridden.typeScript'?: string;\r\n\r\n  /**\r\n   * The Unique Identifier (UID) of the member this item overloads. This value can vary by development language\r\n   * by setting the relevant `overload.${lang}` property.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Overload` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.OverloadInDevLangs` in DocFX when `overload.${lang}` is used.\r\n   */\r\n  overload?: string;\r\n  'overload.typeScript'?: string;\r\n\r\n  /**\r\n   * The exceptions thrown by this item. This value can vary by development language by setting the relevant\r\n   * `exceptions.${lang}` property.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Exceptions` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.ExceptionsInDevLangs` in DocFX when `exceptions.${lang}` is used.\r\n   */\r\n  exceptions?: IYamlException[];\r\n  'exceptions.typeScript'?: IYamlException[];\r\n\r\n  /**\r\n   * Links to additional content related to this item.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.SeeAlsos` in DocFX.\r\n   */\r\n  seealso?: IYamlLink[];\r\n\r\n  /**\r\n   * Additional information about other content related to this item.\r\n   * Markdown is permitted.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.SeeAlsoContent` in DocFX.\r\n   */\r\n  seealsoContent?: string;\r\n\r\n  /**\r\n   * Links to additional content related to this item.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Sees` in DocFX.\r\n   */\r\n  see?: IYamlLink[];\r\n\r\n  /**\r\n   * The inheritance tree for this item. Multiple inheritance is permitted for languages like Python.\r\n   *\r\n   * NOTE: Corresponds to `ItemViewModel.Inheritance` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.InheritanceInDevLangs` in DocFX when `inheritance.${lang}` is used.\r\n   */\r\n  inheritance?: IYamlInheritanceTree[];\r\n  'inheritance.typeScript'?: IYamlInheritanceTree[];\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ItemViewModel.DerivedClassses` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.DerivedClasssesInDevLangs` in DocFX when `derivedClasses.${lang}` is used.\r\n   */\r\n  derivedClasses?: string[];\r\n  'derivedClasses.typeScript'?: string[];\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ItemViewModel.Implements` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.ImplementsInDevLangs` in DocFX when `implements.${lang}` is used.\r\n   */\r\n  implements?: string[];\r\n  'implements.typeScript'?: string[];\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ItemViewModel.InheritedMembers` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.InheritedMembersInDevLangs` in DocFX when `inheritedMembers.${lang}` is used.\r\n   */\r\n  inheritedMembers?: string[];\r\n  'inheritedMembers.typeScript'?: string[];\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ItemViewModel.ExtensionMethods` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.ExtensionMethodsInDevLangs` in DocFX when `extensionMethods.${lang}` is used.\r\n   */\r\n  extensionMethods?: string[];\r\n  'extensionMethods.typeScript'?: string[];\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ItemViewModel.Conceptual` in DocFX.\r\n   */\r\n  conceptual?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ItemViewModel.Platform` in DocFX.\r\n   * NOTE: Corresponds to `ItemViewModel.PlatformInDevLangs` in DocFX when `platform.${lang}` is used.\r\n   */\r\n  platform?: string[];\r\n  'platform.typeScript'?: string[];\r\n\r\n  /**\r\n   * NOTE: This is an extension and corresponds to `ItemViewModel.Metadata` in DocFX.\r\n   */\r\n  deprecated?: IYamlDeprecatedNotice;\r\n\r\n  /**\r\n   * NOTE: This is an extension and corresponds to `ItemViewModel.Metadata` in DocFX.\r\n   */\r\n  extends?: string[];\r\n\r\n  /**\r\n   * NOTE: This is an extension and corresponds to `ItemViewModel.Metadata` in DocFX.\r\n   */\r\n  isPreview?: boolean;\r\n\r\n  /**\r\n   * NOTE: In TypeScript, enum members can be strings or integers.\r\n   * If it is an integer, then enumMember.value will be a string representation of the integer.\r\n   * If it is a string, then enumMember.value will include the quotation marks.\r\n   *\r\n   * NOTE: This is an extension and corresponds to `ItemViewModel.Metadata` in DocFX.\r\n   */\r\n  numericValue?: string;\r\n\r\n  /**\r\n   * NOTE: This is an extension and corresponds to `ItemViewModel.Metadata` in DocFX.\r\n   */\r\n  package?: string;\r\n}\r\n\r\n/**\r\n * Part of the IYamlApiFile structure. Represents the type of an IYamlItem.\r\n */\r\nexport type YamlTypeId =\r\n  | 'class'\r\n  | 'constructor'\r\n  | 'enum'\r\n  | 'field'\r\n  | 'function'\r\n  | 'interface'\r\n  | 'method'\r\n  | 'package'\r\n  | 'property'\r\n  | 'event'\r\n  | 'typealias'\r\n  | 'variable'\r\n  | 'namespace';\r\n\r\n/**\r\n * Development languages supported by the Universal Reference file format, as defined by typescript.schema.json.\r\n */\r\nexport type YamlDevLangs = 'typeScript';\r\n\r\n/**\r\n * Part of the IYamlApiFile structure.  Documents the source file where an IYamlItem is defined.\r\n *\r\n * NOTE: Corresponds to `Microsoft.DocAsCode.DataContracts.Common.SourceDetail` in DocFX.\r\n */\r\nexport interface IYamlSource {\r\n  /**\r\n   * Information about the Git repository where this source can be found.\r\n   *\r\n   * NOTE: Corresponds to `SourceDetail.Remote` in DocFX.\r\n   */\r\n  remote?: IYamlRemote;\r\n\r\n  /**\r\n   * The base path for the source for this item.\r\n   *\r\n   * NOTE: Corresponds to `SourceDetail.BasePath` in DocFX.\r\n   */\r\n  basePath?: string;\r\n\r\n  /**\r\n   * The name of the item.\r\n   *\r\n   * NOTE: Corresponds to `SourceDetail.Name` in DocFX.\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * A link to the source for this item.\r\n   *\r\n   * NOTE: Corresponds to `SourceDetail.Href` in DocFX.\r\n   */\r\n  href?: string;\r\n\r\n  /**\r\n   * The path to the source for this item. This path will be made relative to `basePath` in the documentation.\r\n   *\r\n   * NOTE: Corresponds to `SourceDetail.Path` in DocFX.\r\n   */\r\n  path?: string;\r\n\r\n  /**\r\n   * The starting line of the source for this item.\r\n   *\r\n   * NOTE: Corresponds to `SourceDetail.StartLine` in DocFX.\r\n   */\r\n  startLine?: number;\r\n\r\n  /**\r\n   * The ending line of the source for this item.\r\n   *\r\n   * NOTE: Corresponds to `SourceDetail.EndLine` in DocFX.\r\n   */\r\n  endLine?: number;\r\n\r\n  /**\r\n   * The content of the source for this item.\r\n   *\r\n   * NOTE: Corresponds to `SourceDetail.Content` in DocFX.\r\n   */\r\n  content?: string;\r\n\r\n  /**\r\n   * Indicates whether the path to the source is not locally available.\r\n   *\r\n   * NOTE: Corresponds to `SourceDetail.IsExternal` in DocFX.\r\n   */\r\n  isExternal?: boolean;\r\n}\r\n\r\n/**\r\n * Part of the IYamlApiFile structure.  Indicates the open source Git repository\r\n * where an IYamlItem is defined.\r\n *\r\n * NOTE: Corresponds to `Microsoft.DocAsCode.DataContracts.Common.GitDetail` in DocFX.\r\n */\r\nexport interface IYamlRemote {\r\n  /**\r\n   * The relative path of the current item to the Git repository root directory.\r\n   *\r\n   * NOTE: Corresponds to `GitDetail.RelativePath` in DocFX.\r\n   */\r\n  path?: string;\r\n\r\n  /**\r\n   * The Git branch in which this item can be found.\r\n   *\r\n   * NOTE: Corresponds to `GitDetail.RemoteBranch` in DocFX.\r\n   */\r\n  branch?: string;\r\n\r\n  /**\r\n   * The Git repository in which this item can be found.\r\n   *\r\n   * NOTE: Corresponds to `GitDetail.RemoteRepositoryUrl` in DocFX.\r\n   */\r\n  repo?: string;\r\n}\r\n\r\n/**\r\n * Part of the IYamlApiFile structure.  Documents the type signature for an IYamlItem.\r\n *\r\n * NOTE: Corresponds to `Microsoft.DocAsCode.DataContracts.UniversalReference.SyntaxDetailViewModel` in DocFX.\r\n */\r\nexport interface IYamlSyntax {\r\n  /**\r\n   * The content for the syntax of this item.\r\n   *\r\n   * NOTE: Corresponds to `SyntaxDetailViewModel.Content` in DocFX.\r\n   * NOTE: Corresponds to `SyntaxDetailViewModel.Contents` in DocFX when `content.${lang}` is used.\r\n   */\r\n  content?: string;\r\n  'content.typeScript'?: string;\r\n\r\n  /**\r\n   * The parameters for this item.\r\n   *\r\n   * NOTE: Corresponds to `SyntaxDetailViewModel.Parameters` in DocFX.\r\n   */\r\n  parameters?: IYamlParameter[];\r\n\r\n  /**\r\n   * The type parameters for this item.\r\n   *\r\n   * NOTE: Corresponds to `SyntaxDetailViewModel.TypeParameters` in DocFX.\r\n   */\r\n  typeParameters?: IYamlParameter[];\r\n\r\n  /**\r\n   * The return type for this item.\r\n   *\r\n   * NOTE: Corresponds to `SyntaxDetailViewModel.Return` in DocFX.\r\n   * NOTE: Corresponds to `SyntaxDetailViewModel.ReturnInDevLangs` in DocFX when `return.${lang}` is used.\r\n   */\r\n  return?: IYamlReturn;\r\n  'return.typeScript'?: IYamlReturn;\r\n}\r\n\r\n/**\r\n * Part of the IYamlApiFile structure.  Represents a method or function parameter.\r\n *\r\n * NOTE: Corresponds to `Microsoft.DocAsCode.DataContracts.UniversalReference.ApiParameter` in DocFX.\r\n */\r\nexport interface IYamlParameter {\r\n  /**\r\n   * The name of the parameter.\r\n   *\r\n   * NOTE: Corresponds to `ApiParameter.Name` in DocFX.\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * The Unique Identifiers (UIDs) of the types for this parameter.\r\n   *\r\n   * NOTE: Corresponds to `ApiParameter.Type` in DocFX.\r\n   */\r\n  type?: string[];\r\n\r\n  /**\r\n   * The description for this parameter.\r\n   * Markdown is permitted.\r\n   *\r\n   * NOTE: Corresponds to `ApiParameter.Description` in DocFX.\r\n   */\r\n  description?: string;\r\n\r\n  /**\r\n   * Indicates whether the parameter is optional.\r\n   *\r\n   * NOTE: Corresponds to `ApiParameter.Optional` in DocFX.\r\n   */\r\n  optional?: boolean;\r\n\r\n  /**\r\n   * The default value for the parameter.\r\n   *\r\n   * NOTE: Corresponds to `ApiParameter.DefaultValue` in DocFX.\r\n   */\r\n  defaultValue?: string;\r\n}\r\n\r\n/**\r\n * Part of the IYamlApiFile structure. Documents the return value of a function\r\n * or method.\r\n *\r\n * NOTE: Corresponds to `Microsoft.DocAsCode.DataContracts.UniversalReference.ApiParameter` in DocFX.\r\n */\r\nexport interface IYamlReturn {\r\n  /**\r\n   * The Unique Identifiers (UIDs) of the types for this parameter.\r\n   *\r\n   * NOTE: Corresponds to `ApiParameter.Type` in DocFX.\r\n   */\r\n  type?: string[];\r\n\r\n  /**\r\n   * The description for this parameter.\r\n   * Markdown is permitted.\r\n   *\r\n   * NOTE: Corresponds to `ApiParameter.Description` in DocFX.\r\n   */\r\n  description?: string;\r\n}\r\n\r\n/**\r\n * Part of the IYamlApiFile structure.  Used to document exceptions that can be thrown\r\n * by a method, property, function, or constructor.\r\n *\r\n * NOTE: Corresponds to `Microsoft.DocAsCode.DataContracts.UniversalReference.ExceptionInfo` in DocFX.\r\n */\r\nexport interface IYamlException {\r\n  /**\r\n   * The Unique Identifier (UID) of the type for this exception.\r\n   *\r\n   * NOTE: Corresponds to `ExceptionInfo.Type` in DocFX.\r\n   */\r\n  type?: string;\r\n\r\n  /**\r\n   * The description for this exception.\r\n   *\r\n   * NOTE: Corresponds to `ExceptionInfo.Description` in DocFX.\r\n   */\r\n  description?: string;\r\n}\r\n\r\n/**\r\n * Part of the IYamlApiFile structure. Used to indicate links to external content or other documentation.\r\n *\r\n * NOTE: Corresponds to `Microsoft.DocAsCode.DataContracts.UniversalReference.LinkInfo` in DocFX.\r\n */\r\nexport interface IYamlLink {\r\n  /**\r\n   * The type of link.\r\n   *\r\n   * The value `\"CRef\"` indicates that `linkId` is a Unique Identifier (UID) reference to\r\n   * another documentation entry.\r\n   *\r\n   * The value `\"HRef\"` indicates that `linkId` is a link to external documentation.\r\n   * NOTE: Corresponds to `LinkInfo.LinkType` in DocFX.\r\n   */\r\n  linkType: 'CRef' | 'HRef';\r\n\r\n  /**\r\n   * When `linkType` is `\"CRef\"`, this is a Unique Identifier (UID) reference to another documentation entry.\r\n   *\r\n   * When `linkType` is `\"HRef\"`, this is a link to external documentation.\r\n   *\r\n   * NOTE: Corresponds to `LinkInfo.LinkId` in DocFX.\r\n   */\r\n  linkId: string;\r\n\r\n  /**\r\n   * A Roslyn comment ID for this link.\r\n   *\r\n   * NOTE: Corresponds to `LinkInfo.CommentId` in DocFX.\r\n   */\r\n  commentId?: string;\r\n\r\n  /**\r\n   * Alternate text to display for thie link.\r\n   *\r\n   * NOTE: Corresponds to `LinkInfo.AltText` in DocFX.\r\n   */\r\n  altText?: string;\r\n}\r\n\r\n/**\r\n * Part of the IYamlApiFile structure. Represents the inheritance hierarchy of an item.\r\n *\r\n * NOTE: Corresponds to `Microsoft.DocAsCode.DataContracts.UniversalReference.InheritanceTree` in DocFX.\r\n */\r\nexport interface IYamlInheritanceTree {\r\n  /**\r\n   * The Unique Identifier (UID) of the type from which an item or type inherits.\r\n   *\r\n   * NOTE: Corresponds to `InheritanceTree.Type` in DocFX.\r\n   */\r\n  type: string;\r\n\r\n  /**\r\n   * The inheritance tree for the specified type. Multiple inheritance is permitted for languages like Python.\r\n   *\r\n   * NOTE: Corresponds to `InheritanceTree.Inheritance` in DocFX.\r\n   */\r\n  inheritance?: IYamlInheritanceTree[];\r\n}\r\n\r\n/**\r\n * Part of the IYamlApiFile structure. Represents a reference to an item that is\r\n * declared in a separate YAML file.\r\n *\r\n * NOTE: Corresponds to `Microsoft.DocAsCode.DataContracts.Common.ReferenceViewModel` in DocFX.\r\n */\r\nexport interface IYamlReference {\r\n  /**\r\n   * NOTE: Corresponds to `ReferenceViewModel.Uid` in DocFX.\r\n   */\r\n  uid?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ReferenceViewModel.CommentId` in DocFX.\r\n   */\r\n  commentId?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ReferenceViewModel.Parent` in DocFX.\r\n   */\r\n  parent?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ReferenceViewModel.Definition` in DocFX.\r\n   */\r\n  definition?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ReferenceViewModel.IsExternal` in DocFX.\r\n   */\r\n  isExternal?: boolean;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ReferenceViewModel.Href` in DocFX.\r\n   */\r\n  href?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ReferenceViewModel.Name` in DocFX.\r\n   * NOTE: Corresponds to `ReferenceViewModel.NameInDevLangs` in DocFX when `name.${lang}` is used.\r\n   */\r\n  name?: string;\r\n  'name.typeScript'?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ReferenceViewModel.NameWithType` in DocFX.\r\n   * NOTE: Corresponds to `ReferenceViewModel.NameWithTypeInDevLangs` in DocFX when `nameWithType.${lang}` is used.\r\n   */\r\n  nameWithType?: string;\r\n  'nameWithType.typeScript'?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ReferenceViewModel.FullName` in DocFX.\r\n   * NOTE: Corresponds to `ReferenceViewModel.FullNameInDevLangs` in DocFX when `fullName.${lang}` is used.\r\n   */\r\n  fullName?: string;\r\n  'fullName.typeScript'?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `ReferenceViewModel.Spec` in DocFX.\r\n   */\r\n  'spec.typeScript'?: IYamlReferenceSpec[];\r\n}\r\n\r\n/**\r\n * Part of the IYamlApiFile structure. Represents a text specification for a reference.\r\n *\r\n * NOTE: Corresponds to `Microsoft.DocAsCode.DataContracts.Common.SpecViewModel` in DocFX.\r\n */\r\nexport interface IYamlReferenceSpec {\r\n  /**\r\n   * NOTE: Corresponds to `SpecViewModel.Uid` in DocFX.\r\n   */\r\n  uid?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `SpecViewModel.Name` in DocFX.\r\n   */\r\n  name?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `SpecViewModel.NameWithType` in DocFX.\r\n   */\r\n  nameWithType?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `SpecViewModel.FullName` in DocFX.\r\n   */\r\n  fullName?: string;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `SpecViewModel.IsExternal` in DocFX.\r\n   */\r\n  isExternal?: boolean;\r\n\r\n  /**\r\n   * NOTE: Corresponds to `SpecViewModel.Href` in DocFX.\r\n   */\r\n  href?: string;\r\n}\r\n\r\n/**\r\n * NOTE: This is an extension to the Universal Reference format and does not correspond to\r\n * a known type in DocFX.\r\n */\r\nexport interface IYamlDeprecatedNotice {\r\n  content: string;\r\n}\r\n"]}