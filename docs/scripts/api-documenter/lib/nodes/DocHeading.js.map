{"version":3,"file":"DocHeading.js","sourceRoot":"","sources":["../../src/nodes/DocHeading.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,4CAA+D;AAY/D;;GAEG;AACH,MAAa,UAAW,SAAQ,eAAO;IAKrC;;;OAGG;IACH,YAAmB,UAAiC;QAClD,KAAK,CAAC,UAAU,CAAC,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAE3D,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;YACpC,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;SACjF;IACH,CAAC;IAED,gBAAgB;IAChB,IAAW,IAAI;QACb,+BAAiC;IACnC,CAAC;CACF;AAxBD,gCAwBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { IDocNodeParameters, DocNode } from '@microsoft/tsdoc';\r\nimport { CustomDocNodeKind } from './CustomDocNodeKind';\r\n\r\n/**\r\n * Constructor parameters for {@link DocHeading}.\r\n */\r\nexport interface IDocHeadingParameters extends IDocNodeParameters {\r\n  title: string;\r\n  level?: number;\r\n  id?: string;\r\n}\r\n\r\n/**\r\n * Represents a section header similar to an HTML `<h1>` or `<h2>` element.\r\n */\r\nexport class DocHeading extends DocNode {\r\n  public readonly title: string;\r\n  public readonly level: number;\r\n  public readonly id: string;\r\n\r\n  /**\r\n   * Don't call this directly.  Instead use {@link TSDocParser}\r\n   * @internal\r\n   */\r\n  public constructor(parameters: IDocHeadingParameters) {\r\n    super(parameters);\r\n    this.title = parameters.title;\r\n    this.level = parameters.level !== undefined ? parameters.level : 1;\r\n    this.id = parameters.id !== undefined ? parameters.id : '';\r\n\r\n    if (this.level < 1 || this.level > 5) {\r\n      throw new Error('IDocHeadingParameters.level must be a number between 1 and 5');\r\n    }\r\n  }\r\n\r\n  /** @override */\r\n  public get kind(): string {\r\n    return CustomDocNodeKind.Heading;\r\n  }\r\n}\r\n"]}