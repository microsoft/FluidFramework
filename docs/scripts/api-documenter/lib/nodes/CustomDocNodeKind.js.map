{"version":3,"file":"CustomDocNodeKind.js","sourceRoot":"","sources":["../../src/nodes/CustomDocNodeKind.ts"],"names":[],"mappings":";;AAAA,4CAAmE;AACnE,uDAAoD;AACpD,6CAA0C;AAC1C,6CAA0C;AAC1C,yCAAsC;AACtC,iDAA8C;AAC9C,+CAA4C;AAkB5C,MAAa,cAAc;IAGhB,MAAM,KAAK,aAAa;QAC3B,IAAI,cAAc,CAAC,cAAc,KAAK,SAAS,EAAE;YAC7C,MAAM,aAAa,GAAuB,IAAI,0BAAkB,EAAE,CAAC;YAEnE,aAAa,CAAC,cAAc,CAAC,gBAAgB,CAAC,4BAA4B,EAAE;gBACxE,EAAE,WAAW,mCAAgC,EAAE,WAAW,EAAE,iCAAe,EAAE;gBAC7E,EAAE,WAAW,yBAA2B,EAAE,WAAW,EAAE,uBAAU,EAAE;gBACnE,EAAE,WAAW,yBAA2B,EAAE,WAAW,EAAE,uBAAU,EAAE;gBACnE,EAAE,WAAW,qBAAyB,EAAE,WAAW,EAAE,mBAAQ,EAAE;gBAC/D,EAAE,WAAW,6BAA6B,EAAE,WAAW,EAAE,2BAAY,EAAE;gBACvE,EAAE,WAAW,2BAA4B,EAAE,WAAW,EAAE,yBAAW,EAAE;aACxE,CAAC,CAAC;YAEH,aAAa,CAAC,cAAc,CAAC,yBAAyB,oCAAiC;;;aAGtF,CAAC,CAAC;YAEH,aAAa,CAAC,cAAc,CAAC,yBAAyB,0BAAsB;;;;;aAK3E,CAAC,CAAC;YAEH,aAAa,CAAC,cAAc,CAAC,yBAAyB,8BAAwB;;;;;;;;aAQ7E,CAAC,CAAC;YAEH,cAAc,CAAC,cAAc,GAAG,aAAa,CAAC;SACjD;QACD,OAAO,cAAc,CAAC,cAAc,CAAC;IACzC,CAAC;CACJ;AA1CD,wCA0CC","sourcesContent":["import { TSDocConfiguration, DocNodeKind } from '@microsoft/tsdoc';\nimport { DocEmphasisSpan } from './DocEmphasisSpan';\nimport { DocHeading } from './DocHeading';\nimport { DocNoteBox } from './DocNoteBox';\nimport { DocTable } from './DocTable';\nimport { DocTableCell } from './DocTableCell';\nimport { DocTableRow } from './DocTableRow';\n\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\n/**\n * Identifies custom subclasses of {@link DocNode}.\n */\nexport const enum CustomDocNodeKind {\n    EmphasisSpan = 'EmphasisSpan',\n    Heading = 'Heading',\n    NoteBox = 'NoteBox',\n    Table = 'Table',\n    TableCell = 'TableCell',\n    TableRow = 'TableRow',\n    HtmlLink = 'HtmlLink'\n}\n\nexport class CustomDocNodes {\n    private static _configuration: TSDocConfiguration | undefined;\n\n    public static get configuration(): TSDocConfiguration {\n        if (CustomDocNodes._configuration === undefined) {\n            const configuration: TSDocConfiguration = new TSDocConfiguration();\n\n            configuration.docNodeManager.registerDocNodes('@micrososft/api-documenter', [\n                { docNodeKind: CustomDocNodeKind.EmphasisSpan, constructor: DocEmphasisSpan },\n                { docNodeKind: CustomDocNodeKind.Heading, constructor: DocHeading },\n                { docNodeKind: CustomDocNodeKind.NoteBox, constructor: DocNoteBox },\n                { docNodeKind: CustomDocNodeKind.Table, constructor: DocTable },\n                { docNodeKind: CustomDocNodeKind.TableCell, constructor: DocTableCell },\n                { docNodeKind: CustomDocNodeKind.TableRow, constructor: DocTableRow }\n            ]);\n\n            configuration.docNodeManager.registerAllowableChildren(CustomDocNodeKind.EmphasisSpan, [\n                DocNodeKind.PlainText,\n                DocNodeKind.SoftBreak\n            ]);\n\n            configuration.docNodeManager.registerAllowableChildren(DocNodeKind.Section, [\n                CustomDocNodeKind.Heading,\n                CustomDocNodeKind.NoteBox,\n                CustomDocNodeKind.Table,\n                DocNodeKind.Section\n            ]);\n\n            configuration.docNodeManager.registerAllowableChildren(DocNodeKind.Paragraph, [\n                CustomDocNodeKind.EmphasisSpan,\n                CustomDocNodeKind.Heading,\n                DocNodeKind.Paragraph,\n                CustomDocNodeKind.NoteBox,\n                CustomDocNodeKind.Table,\n                CustomDocNodeKind.Table,\n                DocNodeKind.FencedCode\n            ]);\n\n            CustomDocNodes._configuration = configuration;\n        }\n        return CustomDocNodes._configuration;\n    }\n}\n"]}