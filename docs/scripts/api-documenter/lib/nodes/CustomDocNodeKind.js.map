{"version":3,"file":"CustomDocNodeKind.js","sourceRoot":"","sources":["../../src/nodes/CustomDocNodeKind.ts"],"names":[],"mappings":";;AAAA,4CAAmE;AACnE,uDAAoD;AACpD,6CAA0C;AAC1C,6CAA0C;AAC1C,yCAAsC;AACtC,iDAA8C;AAC9C,+CAA4C;AAiB5C,MAAa,cAAc;IAGlB,MAAM,KAAK,aAAa;QAC7B,IAAI,cAAc,CAAC,cAAc,KAAK,SAAS,EAAE;YAC/C,MAAM,aAAa,GAAuB,IAAI,0BAAkB,EAAE,CAAC;YAEnE,aAAa,CAAC,cAAc,CAAC,gBAAgB,CAAC,4BAA4B,EAAE;gBAC1E,EAAE,WAAW,mCAAgC,EAAE,WAAW,EAAE,iCAAe,EAAE;gBAC7E,EAAE,WAAW,yBAA2B,EAAE,WAAW,EAAE,uBAAU,EAAE;gBACnE,EAAE,WAAW,yBAA2B,EAAE,WAAW,EAAE,uBAAU,EAAE;gBACnE,EAAE,WAAW,qBAAyB,EAAE,WAAW,EAAE,mBAAQ,EAAE;gBAC/D,EAAE,WAAW,6BAA6B,EAAE,WAAW,EAAE,2BAAY,EAAE;gBACvE,EAAE,WAAW,2BAA4B,EAAE,WAAW,EAAE,yBAAW,EAAE;aACtE,CAAC,CAAC;YAEH,aAAa,CAAC,cAAc,CAAC,yBAAyB,oCAAiC;;;aAGtF,CAAC,CAAC;YAEH,aAAa,CAAC,cAAc,CAAC,yBAAyB,0BAAsB;;;;aAI3E,CAAC,CAAC;YAEH,aAAa,CAAC,cAAc,CAAC,yBAAyB,8BAAwB;;aAE7E,CAAC,CAAC;YAEH,cAAc,CAAC,cAAc,GAAG,aAAa,CAAC;SAC/C;QACD,OAAO,cAAc,CAAC,cAAc,CAAC;IACvC,CAAC;CACF;AAnCD,wCAmCC","sourcesContent":["import { TSDocConfiguration, DocNodeKind } from '@microsoft/tsdoc';\r\nimport { DocEmphasisSpan } from './DocEmphasisSpan';\r\nimport { DocHeading } from './DocHeading';\r\nimport { DocNoteBox } from './DocNoteBox';\r\nimport { DocTable } from './DocTable';\r\nimport { DocTableCell } from './DocTableCell';\r\nimport { DocTableRow } from './DocTableRow';\r\n\r\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/**\r\n * Identifies custom subclasses of {@link DocNode}.\r\n */\r\nexport const enum CustomDocNodeKind {\r\n  EmphasisSpan = 'EmphasisSpan',\r\n  Heading = 'Heading',\r\n  NoteBox = 'NoteBox',\r\n  Table = 'Table',\r\n  TableCell = 'TableCell',\r\n  TableRow = 'TableRow'\r\n}\r\n\r\nexport class CustomDocNodes {\r\n  private static _configuration: TSDocConfiguration | undefined;\r\n\r\n  public static get configuration(): TSDocConfiguration {\r\n    if (CustomDocNodes._configuration === undefined) {\r\n      const configuration: TSDocConfiguration = new TSDocConfiguration();\r\n\r\n      configuration.docNodeManager.registerDocNodes('@micrososft/api-documenter', [\r\n        { docNodeKind: CustomDocNodeKind.EmphasisSpan, constructor: DocEmphasisSpan },\r\n        { docNodeKind: CustomDocNodeKind.Heading, constructor: DocHeading },\r\n        { docNodeKind: CustomDocNodeKind.NoteBox, constructor: DocNoteBox },\r\n        { docNodeKind: CustomDocNodeKind.Table, constructor: DocTable },\r\n        { docNodeKind: CustomDocNodeKind.TableCell, constructor: DocTableCell },\r\n        { docNodeKind: CustomDocNodeKind.TableRow, constructor: DocTableRow }\r\n      ]);\r\n\r\n      configuration.docNodeManager.registerAllowableChildren(CustomDocNodeKind.EmphasisSpan, [\r\n        DocNodeKind.PlainText,\r\n        DocNodeKind.SoftBreak\r\n      ]);\r\n\r\n      configuration.docNodeManager.registerAllowableChildren(DocNodeKind.Section, [\r\n        CustomDocNodeKind.Heading,\r\n        CustomDocNodeKind.NoteBox,\r\n        CustomDocNodeKind.Table\r\n      ]);\r\n\r\n      configuration.docNodeManager.registerAllowableChildren(DocNodeKind.Paragraph, [\r\n        CustomDocNodeKind.EmphasisSpan\r\n      ]);\r\n\r\n      CustomDocNodes._configuration = configuration;\r\n    }\r\n    return CustomDocNodes._configuration;\r\n  }\r\n}\r\n"]}