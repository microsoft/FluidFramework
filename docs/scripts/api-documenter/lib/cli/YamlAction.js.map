{"version":3,"file":"YamlAction.js","sourceRoot":"","sources":["../../src/cli/YamlAction.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAK3D,6CAA0C;AAE1C,kEAA+D;AAC/D,8EAA2E;AAG3E,MAAa,UAAW,SAAQ,uBAAU;IAIxC,YAAmB,MAAgC;QACjD,KAAK,CAAC;YACJ,UAAU,EAAE,MAAM;YAClB,OAAO,EAAE,kEAAkE;YAC3E,aAAa,EACX,iEAAiE;gBACjE,kFAAkF;gBAClF,YAAY;SACf,CAAC,CAAC;IACL,CAAC;IAES,kBAAkB;QAC1B,WAAW;QACX,KAAK,CAAC,kBAAkB,EAAE,CAAC;QAE3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAC/C,iBAAiB,EAAE,UAAU;YAC7B,WAAW,EAAE,6DAA6D;SAC3E,CAAC,CAAC;QACH,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAC3D,iBAAiB,EAAE,wBAAwB;YAC3C,WAAW,EACT,mGAAmG;gBACnG,oGAAoG;gBACpG,4GAA4G;gBAC5G,0EAA0E;SAC7E,CAAC,CAAC;IACL,CAAC;IAES,SAAS;QACjB,WAAW;QACX,MAAM,QAAQ,GAAa,IAAI,CAAC,aAAa,EAAE,CAAC;QAEhD,MAAM,cAAc,GAAmB,IAAI,CAAC,gBAAgB,CAAC,KAAK;YAChE,CAAC,CAAC,IAAI,2CAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC;YAC/F,CAAC,CAAC,IAAI,+BAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC;QAE1E,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;CACF;AA5CD,gCA4CC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { CommandLineFlagParameter } from '@rushstack/ts-command-line';\r\n\r\nimport { ApiDocumenterCommandLine } from './ApiDocumenterCommandLine';\r\nimport { BaseAction } from './BaseAction';\r\n\r\nimport { YamlDocumenter } from '../documenters/YamlDocumenter';\r\nimport { OfficeYamlDocumenter } from '../documenters/OfficeYamlDocumenter';\r\nimport { ApiModel } from '@microsoft/api-extractor-model';\r\n\r\nexport class YamlAction extends BaseAction {\r\n  private _officeParameter: CommandLineFlagParameter;\r\n  private _newDocfxNamespacesParameter: CommandLineFlagParameter;\r\n\r\n  public constructor(parser: ApiDocumenterCommandLine) {\r\n    super({\r\n      actionName: 'yaml',\r\n      summary: 'Generate documentation as universal reference YAML files (*.yml)',\r\n      documentation:\r\n        'Generates API documentation as a collection of files conforming' +\r\n        ' to the universal reference YAML format, which is used by the docs.microsoft.com' +\r\n        ' pipeline.'\r\n    });\r\n  }\r\n\r\n  protected onDefineParameters(): void {\r\n    // override\r\n    super.onDefineParameters();\r\n\r\n    this._officeParameter = this.defineFlagParameter({\r\n      parameterLongName: '--office',\r\n      description: `Enables some additional features specific to Office Add-ins`\r\n    });\r\n    this._newDocfxNamespacesParameter = this.defineFlagParameter({\r\n      parameterLongName: '--new-docfx-namespaces',\r\n      description:\r\n        `This enables an experimental feature that will be officially released with the next major version` +\r\n        ` of API Documenter.  It requires DocFX 2.46 or newer.  It enables documentation for namespaces and` +\r\n        ` adds them to the table of contents.  This will also affect file layout as namespaced items will be nested` +\r\n        ` under a directory for the namespace instead of just within the package.`\r\n    });\r\n  }\r\n\r\n  protected onExecute(): Promise<void> {\r\n    // override\r\n    const apiModel: ApiModel = this.buildApiModel();\r\n\r\n    const yamlDocumenter: YamlDocumenter = this._officeParameter.value\r\n      ? new OfficeYamlDocumenter(apiModel, this.inputFolder, this._newDocfxNamespacesParameter.value)\r\n      : new YamlDocumenter(apiModel, this._newDocfxNamespacesParameter.value);\r\n\r\n    yamlDocumenter.generateFiles(this.outputFolder);\r\n    return Promise.resolve();\r\n  }\r\n}\r\n"]}