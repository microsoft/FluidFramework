{"version":3,"file":"MarkdownDocumenterAccessor.js","sourceRoot":"","sources":["../../src/plugin/MarkdownDocumenterAccessor.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAS3D;;;;;;;;GAQG;AACH,MAAa,0BAA0B;IAGrC,gBAAgB;IAChB,YAAmB,cAAyD;QAC1E,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;IACxC,CAAC;IAED;;;;OAIG;IACI,iBAAiB,CAAC,OAAgB;QACvC,OAAO,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IACzD,CAAC;CACF;AAhBD,gEAgBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { ApiItem } from '@microsoft/api-extractor-model';\r\n\r\n/** @internal */\r\nexport interface IMarkdownDocumenterAccessorImplementation {\r\n  getLinkForApiItem(apiItem: ApiItem): string | undefined;\r\n}\r\n\r\n/**\r\n * Provides access to the documenter that is generating the output.\r\n *\r\n * @privateRemarks\r\n * This class is wrapper that provides access to the underlying MarkdownDocumenter, while hiding the implementation\r\n * details to ensure that the plugin API contract is stable.\r\n *\r\n * @public\r\n */\r\nexport class MarkdownDocumenterAccessor {\r\n  private _implementation: IMarkdownDocumenterAccessorImplementation;\r\n\r\n  /** @internal */\r\n  public constructor(implementation: IMarkdownDocumenterAccessorImplementation) {\r\n    this._implementation = implementation;\r\n  }\r\n\r\n  /**\r\n   * For a given `ApiItem`, return its markdown hyperlink.\r\n   *\r\n   * @returns The hyperlink, or `undefined` if the `ApiItem` object does not have a hyperlink.\r\n   */\r\n  public getLinkForApiItem(apiItem: ApiItem): string | undefined {\r\n    return this._implementation.getLinkForApiItem(apiItem);\r\n  }\r\n}\r\n"]}