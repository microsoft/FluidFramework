{"version":3,"file":"MarkdownDocumenter.js","sourceRoot":"","sources":["../../src/documenters/MarkdownDocumenter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\nimport { PackageName, FileSystem, NewlineKind } from '@rushstack/node-core-library';\nimport {\n  DocSection,\n  DocPlainText,\n  DocLinkTag,\n  TSDocConfiguration,\n  StringBuilder,\n  DocNodeKind,\n  DocParagraph,\n  DocCodeSpan,\n  DocFencedCode,\n  StandardTags,\n  DocBlock,\n  DocComment,\n  DocNodeContainer,\n  DocHtmlStartTag,\n  DocHtmlEndTag,\n  DocHtmlAttribute\n} from '@microsoft/tsdoc';\nimport {\n  ApiModel,\n  ApiItem,\n  ApiEnum,\n  ApiPackage,\n  ApiItemKind,\n  ApiReleaseTagMixin,\n  ApiDocumentedItem,\n  ApiClass,\n  ReleaseTag,\n  ApiStaticMixin,\n  ApiPropertyItem,\n  ApiInterface,\n  Excerpt,\n  ApiParameterListMixin,\n  ApiReturnTypeMixin,\n  ApiDeclaredItem,\n  ApiNamespace,\n  ExcerptTokenKind,\n  IResolveDeclarationReferenceResult\n} from '@microsoft/api-extractor-model';\n\nimport { CustomDocNodes } from '../nodes/CustomDocNodeKind';\nimport { DocHeading } from '../nodes/DocHeading';\nimport { DocTable } from '../nodes/DocTable';\nimport { DocEmphasisSpan } from '../nodes/DocEmphasisSpan';\nimport { DocTableRow } from '../nodes/DocTableRow';\nimport { DocTableCell } from '../nodes/DocTableCell';\nimport { DocNoteBox } from '../nodes/DocNoteBox';\nimport { Utilities } from '../utils/Utilities';\nimport { CustomMarkdownEmitter } from '../markdown/CustomMarkdownEmitter';\nimport { PluginLoader } from '../plugin/PluginLoader';\nimport {\n  IMarkdownDocumenterFeatureOnBeforeWritePageArgs,\n  MarkdownDocumenterFeatureContext\n} from '../plugin/MarkdownDocumenterFeature';\nimport { DocumenterConfig } from './DocumenterConfig';\nimport { MarkdownDocumenterAccessor } from '../plugin/MarkdownDocumenterAccessor';\nimport { FrontMatter } from './FrontMatter';\n//import { getHeapStatistics } from 'v8';\n\n/**\n * Renders API documentation in the Markdown file format.\n * For more info:  https://en.wikipedia.org/wiki/Markdown\n */\nexport class MarkdownDocumenter {\n  private readonly _apiModel: ApiModel;\n  private readonly _documenterConfig: DocumenterConfig | undefined;\n  private readonly _tsdocConfiguration: TSDocConfiguration;\n  private readonly _markdownEmitter: CustomMarkdownEmitter;\n  private _outputFolder: string;\n  private readonly _pluginLoader: PluginLoader;\n  private _frontMatter: FrontMatter;\n\n  public constructor(apiModel: ApiModel, documenterConfig: DocumenterConfig | undefined) {\n    this._apiModel = apiModel;\n    this._documenterConfig = documenterConfig;\n    this._tsdocConfiguration = CustomDocNodes.configuration;\n    this._markdownEmitter = new CustomMarkdownEmitter(this._apiModel);\n    this._frontMatter = new FrontMatter();\n\n    this._pluginLoader = new PluginLoader();\n  }\n\n  public generateFiles(outputFolder: string): void {\n    this._outputFolder = outputFolder;\n\n    if (this._documenterConfig) {\n      this._pluginLoader.load(this._documenterConfig, () => {\n        return new MarkdownDocumenterFeatureContext({\n          apiModel: this._apiModel,\n          outputFolder: outputFolder,\n          documenter: new MarkdownDocumenterAccessor({\n            getLinkForApiItem: (apiItem: ApiItem) => {\n              return this._getLinkFilenameForApiItem(apiItem);\n            }\n          })\n        });\n      });\n    }\n\n    console.log();\n    this._deleteOldOutputFiles();\n\n    this._writeApiItemPage(this._apiModel);\n\n    if (this._pluginLoader.markdownDocumenterFeature) {\n      this._pluginLoader.markdownDocumenterFeature.onFinished({});\n    }\n    this._writeIndex(this._apiModel);\n  }\n\n  private _writeApiItemPage(apiItem: ApiItem, output?: DocSection | DocParagraph): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n    if (!output) {\n      output = new DocSection({ configuration: this._tsdocConfiguration });\n    }\n\n    if (output instanceof DocSection) {\n      this._writeBreadcrumb(output, apiItem);\n    }\n    const scopedName: string = apiItem.getScopedNameWithinPackage();\n\n    switch (apiItem.kind) {\n      case ApiItemKind.Class:\n        //output.appendNode(new DocHeading({ configuration, title: `${scopedName} class` }));\n        break;\n      case ApiItemKind.Enum:\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} enum`, id: this._htmlIDForItem(apiItem) }));\n        break;\n      case ApiItemKind.Interface:\n        //output.appendNode(new DocHeading({ configuration, title: `${scopedName} interface` }));\n        break;\n      case ApiItemKind.Constructor:\n      case ApiItemKind.ConstructSignature:\n        output.appendNode(new DocHeading({ configuration, title: scopedName, level: 2, id: this._htmlIDForItem(apiItem) }));\n        break;\n      case ApiItemKind.Method:\n      case ApiItemKind.MethodSignature:\n        output.appendNode(new DocHeading({ configuration, title: apiItem.displayName, level: 2, id: this._htmlIDForItem(apiItem) }));\n        break;\n      case ApiItemKind.Function:\n        output.appendNode(new DocHeading({ configuration, title: apiItem.displayName, level: 2, id: this._htmlIDForItem(apiItem) }));\n        break;\n      case ApiItemKind.Model:\n        output.appendNode(new DocHeading({ configuration, title: `API Reference` }));\n        break;\n      case ApiItemKind.Namespace:\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} namespace` }));\n        break;\n      case ApiItemKind.Package:\n        console.log(`Writing ${apiItem.displayName} package`);\n        // const unscopedPackageName: string = PackageName.getUnscopedName(apiItem.displayName);\n        // output.appendNode(new DocHeading({ configuration, title: `${unscopedPackageName} package` }));\n        break;\n      case ApiItemKind.Property:\n      case ApiItemKind.PropertySignature:\n        output.appendNode(new DocHeading({ configuration, title: apiItem.displayName, level: 2, id: this._htmlIDForItem(apiItem) }));\n        break;\n      case ApiItemKind.TypeAlias:\n        output.appendNode(new DocHeading({ configuration, title: apiItem.displayName, level: 2, id: this._htmlIDForItem(apiItem) }));\n        break;\n      case ApiItemKind.Variable:\n        output.appendNode(new DocHeading({ configuration, title: apiItem.displayName, level: 2, id: this._htmlIDForItem(apiItem) }));\n        break;\n      default:\n        throw new Error('Unsupported API item kind: ' + apiItem.kind);\n    }\n\n    if (ApiReleaseTagMixin.isBaseClassOf(apiItem)) {\n      if (apiItem.releaseTag === ReleaseTag.Beta) {\n        this._writeBetaWarning(output);\n      }\n    }\n\n    if (apiItem instanceof ApiDocumentedItem) {\n      const tsdocComment: DocComment | undefined = apiItem.tsdocComment;\n\n      if (tsdocComment) {\n        if (tsdocComment.deprecatedBlock) {\n          output.appendNode(\n            new DocNoteBox({ configuration: this._tsdocConfiguration }, [\n              new DocParagraph({ configuration: this._tsdocConfiguration }, [\n                new DocPlainText({\n                  configuration: this._tsdocConfiguration,\n                  text: 'Warning: This API is now obsolete. '\n                })\n              ]),\n              ...tsdocComment.deprecatedBlock.content.nodes\n            ])\n          );\n        }\n\n        this._appendSection(output, tsdocComment.summarySection);\n      }\n    }\n\n    if (apiItem instanceof ApiDeclaredItem) {\n      if (apiItem.excerpt.text.length > 0) {\n        output.appendNode(\n          new DocParagraph({ configuration }, [\n            new DocEmphasisSpan({ configuration, bold: true }, [\n              new DocPlainText({ configuration, text: 'Signature:' })\n            ])\n          ])\n        );\n        output.appendNode(\n          new DocFencedCode({\n            configuration,\n            code: apiItem.getExcerptWithModifiers(),\n            language: 'typescript'\n          })\n        );\n      }\n\n      this._writeHeritageTypes(output, apiItem);\n    }\n\n    let appendRemarks: boolean = true;\n    switch (apiItem.kind) {\n      case ApiItemKind.Class:\n      case ApiItemKind.Interface:\n      case ApiItemKind.Namespace:\n      case ApiItemKind.Package:\n        this._writeRemarksSection(output, apiItem);\n        appendRemarks = false;\n        break;\n    }\n\n    switch (apiItem.kind) {\n      case ApiItemKind.Class:\n        this._writeClassTables(output, apiItem as ApiClass);\n        break;\n      case ApiItemKind.Enum:\n        this._writeEnumTables(output, apiItem as ApiEnum);\n        break;\n      case ApiItemKind.Interface:\n        this._writeInterfaceTables(output, apiItem as ApiInterface);\n        break;\n      case ApiItemKind.Constructor:\n      case ApiItemKind.ConstructSignature:\n      case ApiItemKind.Method:\n      case ApiItemKind.MethodSignature:\n      case ApiItemKind.Function:\n        this._writeParameterTables(output, apiItem as ApiParameterListMixin);\n        this._writeThrowsSection(output, apiItem);\n        break;\n      case ApiItemKind.Namespace:\n        this._writePackageOrNamespaceTables(output, apiItem as ApiNamespace);\n        break;\n      case ApiItemKind.Model:\n        this._writeModelTable(output, apiItem as ApiModel);\n        break;\n      case ApiItemKind.Package:\n        this._writePackageOrNamespaceTables(output, apiItem as ApiPackage);\n        break;\n      case ApiItemKind.Property:\n      case ApiItemKind.PropertySignature:\n        break;\n      case ApiItemKind.TypeAlias:\n        break;\n      case ApiItemKind.Variable:\n        break;\n      default:\n        throw new Error('Unsupported API item kind: ' + apiItem.kind);\n    }\n\n    if (appendRemarks) {\n      this._writeRemarksSection(output, apiItem);\n    }\n\n    /*\n    /\n    / Fluid hack: only generate doc for the public API\n    /\n    */\n    const pkg: ApiPackage | undefined = apiItem.getAssociatedPackage();\n    if (!pkg || !pkg.name.startsWith(\"@fluidframework\")) {\n      console.log(`skipping ${apiItem.getScopedNameWithinPackage()}`);\n      if (pkg) {\n        console.log(`\\t${pkg.name} package isn't in the allowed list`);\n      }\n      return;\n    }\n\n    // temp hack to reduce the size of the generated content\n    if (!this._shouldHaveStandalonePage(apiItem)) {\n      return;\n    }\n\n    const filename: string = path.join(this._outputFolder, this._getFilenameForApiItem(apiItem));\n    const stringBuilder: StringBuilder = new StringBuilder();\n\n    this._writeFrontMatter(apiItem);\n    stringBuilder.append(this._frontMatter.toString())\n    stringBuilder.append(\n      '[//]: # (Do not edit this file. It is automatically generated by API Documenter.)\\n\\n'\n      //'<!-- Do not edit this file. It is automatically generated by API Documenter. -->\\n\\n'\n    );\n\n    this._markdownEmitter.emit(stringBuilder, output, {\n      contextApiItem: apiItem,\n      onGetFilenameForApiItem: (apiItemForFilename: ApiItem) => {\n        return this._getLinkFilenameForApiItem(apiItemForFilename);\n      }\n    });\n\n    let pageContent: string = stringBuilder.toString();\n\n    if (this._pluginLoader.markdownDocumenterFeature) {\n      // Allow the plugin to customize the pageContent\n      const eventArgs: IMarkdownDocumenterFeatureOnBeforeWritePageArgs = {\n        apiItem: apiItem,\n        outputFilename: filename,\n        pageContent: pageContent\n      };\n      this._pluginLoader.markdownDocumenterFeature.onBeforeWritePage(eventArgs);\n      pageContent = eventArgs.pageContent;\n    }\n\n    FileSystem.writeFile(filename, pageContent, {\n      convertLineEndings: this._documenterConfig ? this._documenterConfig.newlineKind : NewlineKind.CrLf,\n      ensureFolderExists: true\n    });\n    console.log(filename, \"saved to disk\")\n  }\n\n  private _writeHeritageTypes(output: DocSection | DocParagraph, apiItem: ApiDeclaredItem): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    if (apiItem instanceof ApiClass) {\n      if (apiItem.extendsType) {\n        const extendsParagraph: DocParagraph = new DocParagraph({ configuration }, [\n          new DocEmphasisSpan({ configuration, bold: true }, [\n            new DocPlainText({ configuration, text: 'Extends: ' })\n          ])\n        ]);\n        this._appendExcerptWithHyperlinks(extendsParagraph, apiItem.extendsType.excerpt);\n        output.appendNode(extendsParagraph);\n      }\n      if (apiItem.implementsTypes.length > 0) {\n        const extendsParagraph: DocParagraph = new DocParagraph({ configuration }, [\n          new DocEmphasisSpan({ configuration, bold: true }, [\n            new DocPlainText({ configuration, text: 'Implements: ' })\n          ])\n        ]);\n        let needsComma: boolean = false;\n        for (const implementsType of apiItem.implementsTypes) {\n          if (needsComma) {\n            extendsParagraph.appendNode(new DocPlainText({ configuration, text: ', ' }));\n          }\n          this._appendExcerptWithHyperlinks(extendsParagraph, implementsType.excerpt);\n          needsComma = true;\n        }\n        output.appendNode(extendsParagraph);\n      }\n    }\n\n    if (apiItem instanceof ApiInterface) {\n      if (apiItem.extendsTypes.length > 0) {\n        const extendsParagraph: DocParagraph = new DocParagraph({ configuration }, [\n          new DocEmphasisSpan({ configuration, bold: true }, [\n            new DocPlainText({ configuration, text: 'Extends: ' })\n          ])\n        ]);\n        let needsComma: boolean = false;\n        for (const extendsType of apiItem.extendsTypes) {\n          if (needsComma) {\n            extendsParagraph.appendNode(new DocPlainText({ configuration, text: ', ' }));\n          }\n          this._appendExcerptWithHyperlinks(extendsParagraph, extendsType.excerpt);\n          needsComma = true;\n        }\n        output.appendNode(extendsParagraph);\n      }\n    }\n  }\n\n  private _writeRemarksSection(output: DocSection | DocParagraph, apiItem: ApiItem): void {\n    if (apiItem instanceof ApiDocumentedItem) {\n      const tsdocComment: DocComment | undefined = apiItem.tsdocComment;\n\n      if (tsdocComment) {\n        // Write the @remarks block\n        if (tsdocComment.remarksBlock) {\n          output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Remarks' }));\n          this._appendSection(output, tsdocComment.remarksBlock.content);\n        }\n\n        // Write the @example blocks\n        const exampleBlocks: DocBlock[] = tsdocComment.customBlocks.filter(\n          (x) => x.blockTag.tagNameWithUpperCase === StandardTags.example.tagNameWithUpperCase\n        );\n\n        let exampleNumber: number = 1;\n        for (const exampleBlock of exampleBlocks) {\n          const heading: string = exampleBlocks.length > 1 ? `Example ${exampleNumber}` : 'Example';\n\n          output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: heading }));\n\n          this._appendSection(output, exampleBlock.content);\n\n          ++exampleNumber;\n        }\n      }\n    }\n  }\n\n  private _writeThrowsSection(output: DocSection | DocParagraph, apiItem: ApiItem): void {\n    if (apiItem instanceof ApiDocumentedItem) {\n      const tsdocComment: DocComment | undefined = apiItem.tsdocComment;\n\n      if (tsdocComment) {\n        // Write the @throws blocks\n        const throwsBlocks: DocBlock[] = tsdocComment.customBlocks.filter(\n          (x) => x.blockTag.tagNameWithUpperCase === StandardTags.throws.tagNameWithUpperCase\n        );\n\n        if (throwsBlocks.length > 0) {\n          const heading: string = 'Exceptions';\n          output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: heading }));\n\n          for (const throwsBlock of throwsBlocks) {\n            this._appendSection(output, throwsBlock.content);\n          }\n        }\n      }\n    }\n  }\n\n  private _writeIndex(apiItem: ApiItem): void {\n    // const indexPath: string = path.join(this._outputFolder, '_index.md');\n    // const output: StringBuilder = new StringBuilder();\n    // output.append(`---\\nTitle: API Reference\\n---\\n\\n`);\n    // // TODO:\n    // FileSystem.writeFile(indexPath, output.toString());\n  }\n\n  /**\n   * GENERATE PAGE: MODEL\n   */\n  private _writeModelTable(output: DocSection | DocParagraph, apiModel: ApiModel): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const packagesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Package', 'Description']\n    });\n\n    for (const apiMember of apiModel.members) {\n      const row: DocTableRow = new DocTableRow({ configuration }, [\n        this._createTitleCell(apiMember),\n        this._createDescriptionCell(apiMember)\n      ]);\n\n      switch (apiMember.kind) {\n        case ApiItemKind.Package:\n          packagesTable.addRow(row);\n          this._writeApiItemPage(apiMember);\n          break;\n      }\n    }\n\n    if (packagesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Packages' }));\n      output.appendNode(packagesTable);\n    }\n  }\n\n  /**\n   * GENERATE PAGE: PACKAGE or NAMESPACE\n   */\n  private _writePackageOrNamespaceTables(output: DocSection | DocParagraph, apiContainer: ApiPackage | ApiNamespace): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const classesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Class', 'Description']\n    });\n\n    const enumerationsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Enumeration', 'Description']\n    });\n\n    const functionsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Function', 'Description']\n    });\n\n    const interfacesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Interface', 'Description']\n    });\n\n    const namespacesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Namespace', 'Description']\n    });\n\n    const variablesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Variable', 'Description']\n    });\n\n    const typeAliasesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Type Alias', 'Description']\n    });\n\n    const enumsParagraph: DocParagraph = new DocParagraph({ configuration });\n    const varsParagraph: DocParagraph = new DocParagraph({ configuration });\n    const functionsParagraph: DocParagraph = new DocParagraph({ configuration });\n    const aliasesParagraph: DocParagraph = new DocParagraph({ configuration });\n\n    const apiMembers: ReadonlyArray<ApiItem> =\n      apiContainer.kind === ApiItemKind.Package\n        ? (apiContainer as ApiPackage).entryPoints[0].members\n        : (apiContainer as ApiNamespace).members;\n\n    // loop through the members of the package/namespace.\n    for (const apiMember of apiMembers) {\n      const row: DocTableRow = new DocTableRow({ configuration }, [\n        this._createTitleCell(apiMember),\n        this._createDescriptionCell(apiMember)\n      ]);\n\n      switch (apiMember.kind) {\n        case ApiItemKind.Class:\n          classesTable.addRow(row);\n          this._writeApiItemPage(apiMember);\n          break;\n\n        case ApiItemKind.Enum:\n          enumerationsTable.addRow(row);\n          this._writeApiItemPage(apiMember, enumsParagraph);\n          break;\n\n        case ApiItemKind.Interface:\n          interfacesTable.addRow(row);\n          this._writeApiItemPage(apiMember);\n          break;\n\n        case ApiItemKind.Namespace:\n          namespacesTable.addRow(row);\n          this._writeApiItemPage(apiMember, output);\n          break;\n\n        case ApiItemKind.Function:\n          functionsTable.addRow(row);\n          this._writeApiItemPage(apiMember, functionsParagraph);\n          break;\n\n        case ApiItemKind.TypeAlias:\n          typeAliasesTable.addRow(row);\n          this._writeApiItemPage(apiMember, aliasesParagraph);\n          break;\n\n        case ApiItemKind.Variable:\n          variablesTable.addRow(row);\n          this._writeApiItemPage(apiMember, varsParagraph);\n          break;\n      }\n    }\n\n    if (classesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Classes' }));\n      output.appendNode(classesTable);\n    }\n\n    if (enumerationsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Enumerations' }));\n      output.appendNode(enumerationsTable);\n    }\n    if (functionsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Functions' }));\n      output.appendNode(functionsTable);\n    }\n\n    if (interfacesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Interfaces' }));\n      output.appendNode(interfacesTable);\n    }\n\n    if (namespacesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Namespaces' }));\n      output.appendNode(namespacesTable);\n    }\n\n    if (variablesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Variables' }));\n      output.appendNode(variablesTable);\n    }\n\n    if (typeAliasesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Type Aliases' }));\n      output.appendNode(typeAliasesTable);\n    }\n\n    const details: DocSection = new DocSection({ configuration }, [\n      new DocHtmlStartTag({ configuration: this._tsdocConfiguration, name: \"hr\" }),\n      new DocHtmlStartTag({\n        configuration: this._tsdocConfiguration, name: \"div\", htmlAttributes: [\n          new DocHtmlAttribute({ configuration: this._tsdocConfiguration, name: \"id\", value: \"package-details\" })]\n      })\n    ]);\n\n\n    if (enumsParagraph.nodes.length > 0) {\n      details.appendNode(new DocHeading({ configuration, title: 'Enumerations' }));\n      details.appendNode(enumsParagraph);\n    }\n\n    if (functionsParagraph.nodes.length > 0) {\n      details.appendNode(new DocHeading({ configuration, title: 'Functions' }));\n      details.appendNode(functionsParagraph);\n    }\n\n    if (varsParagraph.nodes.length > 0) {\n      details.appendNode(new DocHeading({ configuration, title: 'Variables' }));\n      details.appendNode(varsParagraph);\n    }\n\n    if (aliasesParagraph.nodes.length > 0) {\n      details.appendNode(new DocHeading({ configuration, title: 'Type Aliases' }));\n      details.appendNode(aliasesParagraph);\n    }\n\n    details.appendNode(new DocHtmlEndTag({\n      configuration, name: \"div\"\n    }));\n\n    output.appendNode(details)\n\n  }\n\n  /**\n   * GENERATE PAGE: CLASS\n   */\n  private _writeClassTables(output: DocSection | DocParagraph, apiClass: ApiClass): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const eventsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Property', 'Modifiers', 'Type', 'Description']\n    });\n\n    const constructorsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Constructor', 'Modifiers', 'Description']\n    });\n\n    const propertiesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Property', 'Modifiers', 'Type', 'Description']\n    });\n\n    const methodsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Method', 'Modifiers', 'Description']\n    });\n\n\n    const constructorsParagraph: DocParagraph = new DocParagraph({ configuration });\n    const methodsParagraph: DocParagraph = new DocParagraph({ configuration });\n    const propertiesParagraph: DocParagraph = new DocParagraph({ configuration });\n    const eventsParagraph: DocParagraph = new DocParagraph({ configuration });\n\n    for (const apiMember of apiClass.members) {\n      switch (apiMember.kind) {\n        case ApiItemKind.Constructor: {\n          constructorsTable.addRow(\n            new DocTableRow({ configuration }, [\n              this._createTitleCell(apiMember),\n              this._createModifiersCell(apiMember),\n              this._createDescriptionCell(apiMember)\n            ])\n          );\n\n          this._writeApiItemPage(apiMember, constructorsParagraph);\n          break;\n        }\n        case ApiItemKind.Method: {\n          methodsTable.addRow(\n            new DocTableRow({ configuration }, [\n              this._createTitleCell(apiMember),\n              this._createModifiersCell(apiMember),\n              this._createDescriptionCell(apiMember)\n            ])\n          );\n\n          this._writeApiItemPage(apiMember, methodsParagraph);\n          break;\n        }\n        case ApiItemKind.Property: {\n          if ((apiMember as ApiPropertyItem).isEventProperty) {\n            eventsTable.addRow(\n              new DocTableRow({ configuration }, [\n                this._createTitleCell(apiMember),\n                this._createModifiersCell(apiMember),\n                this._createPropertyTypeCell(apiMember),\n                this._createDescriptionCell(apiMember)\n              ])\n            );\n            this._writeApiItemPage(apiMember, eventsParagraph);\n          } else {\n            propertiesTable.addRow(\n              new DocTableRow({ configuration }, [\n                this._createTitleCell(apiMember),\n                this._createModifiersCell(apiMember),\n                this._createPropertyTypeCell(apiMember),\n                this._createDescriptionCell(apiMember)\n              ])\n            );\n            this._writeApiItemPage(apiMember, propertiesParagraph);\n          }\n\n\n          break;\n        }\n      }\n    }\n\n    if (eventsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Events' }));\n      output.appendNode(eventsTable);\n    }\n\n    if (constructorsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Constructors' }));\n      output.appendNode(constructorsTable);\n    }\n\n    if (propertiesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Properties' }));\n      output.appendNode(propertiesTable);\n    }\n\n    if (methodsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Methods' }));\n      output.appendNode(methodsTable);\n    }\n\n    const details: DocSection = new DocSection({ configuration: this._tsdocConfiguration }, [\n      new DocHtmlStartTag({ configuration: this._tsdocConfiguration, name: \"hr\" }),\n      new DocHtmlStartTag({\n        configuration: this._tsdocConfiguration, name: \"div\", htmlAttributes: [\n          new DocHtmlAttribute({ configuration: this._tsdocConfiguration, name: \"id\", value: \"class-details\" })]\n      })\n    ]);\n\n    if (eventsParagraph.nodes.length > 0) {\n      details.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Events' }));\n      details.appendNode(eventsParagraph);\n    }\n\n    if (constructorsParagraph.nodes.length > 0) {\n      details.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Constructors' }));\n      details.appendNode(constructorsParagraph);\n    }\n\n    if (propertiesParagraph.nodes.length > 0) {\n      details.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Properties' }));\n      details.appendNode(propertiesParagraph);\n    }\n\n    if (methodsParagraph.nodes.length > 0) {\n      details.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Methods' }));\n      details.appendNode(methodsParagraph);\n    }\n\n    details.appendNode(new DocHtmlEndTag({\n      configuration: this._tsdocConfiguration, name: \"div\"\n    }));\n\n    output.appendNode(details);\n\n  }\n\n  /**\n   * GENERATE PAGE: ENUM\n   */\n  private _writeEnumTables(output: DocSection | DocParagraph, apiEnum: ApiEnum): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const enumMembersTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Member', 'Value', 'Description']\n    });\n\n    for (const apiEnumMember of apiEnum.members) {\n      enumMembersTable.addRow(\n        new DocTableRow({ configuration }, [\n          new DocTableCell({ configuration }, [\n            new DocParagraph({ configuration }, [\n              new DocPlainText({ configuration, text: Utilities.getConciseSignature(apiEnumMember) })\n            ])\n          ]),\n\n          new DocTableCell({ configuration }, [\n            new DocParagraph({ configuration }, [\n              new DocCodeSpan({ configuration, code: apiEnumMember.initializerExcerpt.text })\n            ])\n          ]),\n\n          this._createDescriptionCell(apiEnumMember)\n        ])\n      );\n    }\n\n    if (enumMembersTable.rows.length > 0) {\n      output.appendNode(\n        new DocHeading({ configuration: this._tsdocConfiguration, title: 'Enumeration Members' })\n      );\n      output.appendNode(enumMembersTable);\n    }\n  }\n\n  /**\n   * GENERATE PAGE: INTERFACE\n   */\n  private _writeInterfaceTables(output: DocSection | DocParagraph, apiClass: ApiInterface): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const eventsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Property', 'Type', 'Description']\n    });\n\n    const propertiesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Property', 'Type', 'Description']\n    });\n\n    const methodsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Method', 'Description']\n    });\n\n    const eventsParagraph: DocParagraph = new DocParagraph({ configuration });\n    const propertiesParagraph: DocParagraph = new DocParagraph({ configuration });\n    const methodsParagraph: DocParagraph = new DocParagraph({ configuration });\n\n    for (const apiMember of apiClass.members) {\n      switch (apiMember.kind) {\n        case ApiItemKind.ConstructSignature:\n        case ApiItemKind.MethodSignature: {\n          methodsTable.addRow(\n            new DocTableRow({ configuration }, [\n              this._createTitleCell(apiMember),\n              this._createDescriptionCell(apiMember)\n            ])\n          );\n\n          this._writeApiItemPage(apiMember, methodsParagraph);\n          break;\n        }\n        case ApiItemKind.PropertySignature: {\n          if ((apiMember as ApiPropertyItem).isEventProperty) {\n            eventsTable.addRow(\n              new DocTableRow({ configuration }, [\n                this._createTitleCell(apiMember),\n                this._createPropertyTypeCell(apiMember),\n                this._createDescriptionCell(apiMember)\n              ])\n            );\n            this._writeApiItemPage(apiMember, propertiesParagraph);\n          } else {\n            propertiesTable.addRow(\n              new DocTableRow({ configuration }, [\n                this._createTitleCell(apiMember),\n                this._createPropertyTypeCell(apiMember),\n                this._createDescriptionCell(apiMember)\n              ])\n            );\n            this._writeApiItemPage(apiMember, eventsParagraph);\n          }\n\n\n          break;\n        }\n      }\n    }\n\n    if (eventsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Events' }));\n      output.appendNode(eventsTable);\n    }\n\n    if (propertiesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Properties' }));\n      output.appendNode(propertiesTable);\n    }\n\n    if (methodsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Methods' }));\n      output.appendNode(methodsTable);\n    }\n\n    const details: DocSection = new DocSection({ configuration: this._tsdocConfiguration }, [\n      new DocHtmlStartTag({ configuration: this._tsdocConfiguration, name: \"hr\" }),\n      new DocHtmlStartTag({\n        configuration: this._tsdocConfiguration, name: \"div\", htmlAttributes: [\n          new DocHtmlAttribute({ configuration: this._tsdocConfiguration, name: \"id\", value: \"interface-details\" })]\n      })\n    ]);\n\n    if (eventsParagraph.nodes.length > 0) {\n      details.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Events' }));\n      details.appendNode(eventsParagraph);\n    }\n\n    if (propertiesParagraph.nodes.length > 0) {\n      details.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Properties' }));\n      details.appendNode(propertiesParagraph);\n    }\n\n    if (methodsParagraph.nodes.length > 0) {\n      details.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Methods' }));\n      details.appendNode(methodsParagraph);\n    }\n\n    details.appendNode(new DocHtmlEndTag({\n      configuration: this._tsdocConfiguration, name: \"div\"\n    }));\n\n    output.appendNode(details);\n  }\n\n  /**\n   * GENERATE PAGE: FUNCTION-LIKE\n   */\n  private _writeParameterTables(output: DocSection | DocParagraph, apiParameterListMixin: ApiParameterListMixin): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const parametersTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Parameter', 'Type', 'Description']\n    });\n    for (const apiParameter of apiParameterListMixin.parameters) {\n      const parameterDescription: DocSection = new DocSection({ configuration });\n      if (apiParameter.tsdocParamBlock) {\n        this._appendSection(parameterDescription, apiParameter.tsdocParamBlock.content);\n      }\n\n      parametersTable.addRow(\n        new DocTableRow({ configuration }, [\n          new DocTableCell({ configuration }, [\n            new DocParagraph({ configuration }, [\n              new DocPlainText({ configuration, text: apiParameter.name })\n            ])\n          ]),\n          new DocTableCell({ configuration }, [\n            this._createParagraphForTypeExcerpt(apiParameter.parameterTypeExcerpt)\n          ]),\n          new DocTableCell({ configuration }, parameterDescription.nodes)\n        ])\n      );\n    }\n\n    if (parametersTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Parameters', level: 4 }));\n      output.appendNode(parametersTable);\n    }\n\n    if (ApiReturnTypeMixin.isBaseClassOf(apiParameterListMixin)) {\n      const returnTypeExcerpt: Excerpt = apiParameterListMixin.returnTypeExcerpt;\n      output.appendNode(\n        new DocParagraph({ configuration }, [\n          new DocEmphasisSpan({ configuration, bold: true }, [\n            new DocPlainText({ configuration, text: 'Returns:' })\n          ])\n        ])\n      );\n\n      output.appendNode(this._createParagraphForTypeExcerpt(returnTypeExcerpt));\n\n      if (apiParameterListMixin instanceof ApiDocumentedItem) {\n        if (apiParameterListMixin.tsdocComment && apiParameterListMixin.tsdocComment.returnsBlock) {\n          this._appendSection(output, apiParameterListMixin.tsdocComment.returnsBlock.content);\n        }\n      }\n    }\n  }\n\n  private _createParagraphForTypeExcerpt(excerpt: Excerpt): DocParagraph {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const paragraph: DocParagraph = new DocParagraph({ configuration });\n\n    if (!excerpt.text.trim()) {\n      paragraph.appendNode(new DocPlainText({ configuration, text: '(not declared)' }));\n    } else {\n      this._appendExcerptWithHyperlinks(paragraph, excerpt);\n    }\n\n    return paragraph;\n  }\n\n  private _appendExcerptWithHyperlinks(docNodeContainer: DocNodeContainer, excerpt: Excerpt): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    for (const token of excerpt.spannedTokens) {\n      // Markdown doesn't provide a standardized syntax for hyperlinks inside code spans, so we will render\n      // the type expression as DocPlainText.  Instead of creating multiple DocParagraphs, we can simply\n      // discard any newlines and let the renderer do normal word-wrapping.\n      const unwrappedTokenText: string = token.text.replace(/[\\r\\n]+/g, ' ');\n\n      // If it's hyperlinkable, then append a DocLinkTag\n      if (token.kind === ExcerptTokenKind.Reference && token.canonicalReference) {\n        const apiItemResult: IResolveDeclarationReferenceResult = this._apiModel.resolveDeclarationReference(\n          token.canonicalReference,\n          undefined\n        );\n\n        if (apiItemResult.resolvedApiItem) {\n          docNodeContainer.appendNode(\n            new DocLinkTag({\n              configuration,\n              tagName: '@link',\n              linkText: unwrappedTokenText,\n              urlDestination: this._getLinkFilenameForApiItem(apiItemResult.resolvedApiItem)\n            })\n          );\n          continue;\n        }\n      }\n\n      // Otherwise append non-hyperlinked text\n      docNodeContainer.appendNode(new DocPlainText({ configuration, text: unwrappedTokenText }));\n    }\n  }\n\n  private _createTitleCell(apiItem: ApiItem): DocTableCell {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    return new DocTableCell({ configuration }, [\n      new DocParagraph({ configuration }, [\n        new DocLinkTag({\n          configuration,\n          tagName: '@link',\n          linkText: Utilities.getConciseSignature(apiItem),\n          urlDestination: this._getLinkFilenameForApiItem(apiItem)\n        })\n      ])\n    ]);\n  }\n\n  /**\n   * This generates a DocTableCell for an ApiItem including the summary section and \"(BETA)\" annotation.\n   *\n   * @remarks\n   * We mostly assume that the input is an ApiDocumentedItem, but it's easier to perform this as a runtime\n   * check than to have each caller perform a type cast.\n   */\n  private _createDescriptionCell(apiItem: ApiItem): DocTableCell {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const section: DocSection = new DocSection({ configuration });\n\n    if (ApiReleaseTagMixin.isBaseClassOf(apiItem)) {\n      if (apiItem.releaseTag === ReleaseTag.Beta) {\n        section.appendNodesInParagraph([\n          new DocEmphasisSpan({ configuration, bold: true, italic: true }, [\n            new DocPlainText({ configuration, text: '(BETA)' })\n          ]),\n          new DocPlainText({ configuration, text: ' ' })\n        ]);\n      }\n    }\n\n    if (apiItem instanceof ApiDocumentedItem) {\n      if (apiItem.tsdocComment !== undefined) {\n        this._appendAndMergeSection(section, apiItem.tsdocComment.summarySection);\n      }\n    }\n\n    return new DocTableCell({ configuration }, section.nodes);\n  }\n\n  private _createModifiersCell(apiItem: ApiItem): DocTableCell {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const section: DocSection = new DocSection({ configuration });\n\n    if (ApiStaticMixin.isBaseClassOf(apiItem)) {\n      if (apiItem.isStatic) {\n        section.appendNodeInParagraph(new DocCodeSpan({ configuration, code: 'static' }));\n      }\n    }\n\n    return new DocTableCell({ configuration }, section.nodes);\n  }\n\n  private _createPropertyTypeCell(apiItem: ApiItem): DocTableCell {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const section: DocSection = new DocSection({ configuration });\n\n    if (apiItem instanceof ApiPropertyItem) {\n      section.appendNode(this._createParagraphForTypeExcerpt(apiItem.propertyTypeExcerpt));\n    }\n\n    return new DocTableCell({ configuration }, section.nodes);\n  }\n\n  // prepare the markdown frontmatter by providing the metadata needed to nicely render the page.\n  private _writeFrontMatter(item: ApiItem): void {\n    this._frontMatter.kind = item.kind;\n    this._frontMatter.title = item.displayName.replace(/\"/g, '').replace(/!/g, '');\n    switch (item.kind) {\n      case ApiItemKind.Class:\n        this._frontMatter.title += \" Class\"\n        break;\n      case ApiItemKind.Interface:\n        this._frontMatter.title += \" Interface\"\n        break\n      case ApiItemKind.Package:\n        this._frontMatter.title += \" Package\"\n        break\n      default:\n        break;\n    }\n\n    const pkg: ApiPackage | undefined = item.getAssociatedPackage();\n    if (pkg) {\n      this._frontMatter.package = pkg.name.replace(/\"/g, '').replace(/!/g, '');\n    } else {\n      this._frontMatter.package = \"undefined\";\n    }\n    // TODO: list members\n  }\n\n  private _writeBreadcrumb(output: DocSection, apiItem: ApiItem): void {\n    // no breadcrumbs for inner content\n    if ((apiItem.kind !== ApiItemKind.Package) && (apiItem.kind !== ApiItemKind.Class) && (apiItem.kind !== ApiItemKind.Interface)) {\n      return;\n    }\n\n    output.appendNodeInParagraph(\n      new DocLinkTag({\n        configuration: this._tsdocConfiguration,\n        tagName: '@link',\n        linkText: 'Packages',\n        urlDestination: this._getLinkFilenameForApiItem(this._apiModel)\n      })\n    );\n\n    for (const hierarchyItem of apiItem.getHierarchy()) {\n      switch (hierarchyItem.kind) {\n        case ApiItemKind.Model:\n        case ApiItemKind.EntryPoint:\n          // We don't show the model as part of the breadcrumb because it is the root-level container.\n          // We don't show the entry point because today API Extractor doesn't support multiple entry points;\n          // this may change in the future.\n          break;\n        default:\n          output.appendNodesInParagraph([\n            new DocPlainText({\n              configuration: this._tsdocConfiguration,\n              text: ' > '\n            }),\n            new DocLinkTag({\n              configuration: this._tsdocConfiguration,\n              tagName: '@link',\n              linkText: hierarchyItem.displayName,\n              urlDestination: this._getLinkFilenameForApiItem(hierarchyItem)\n            })\n          ]);\n      }\n    }\n  }\n\n  private _writeBetaWarning(output: DocSection | DocParagraph): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n    const betaWarning: string =\n      'This API is provided as a preview for developers and may change' +\n      ' based on feedback that we receive.  Do not use this API in a production environment.';\n    output.appendNode(\n      new DocNoteBox({ configuration }, [\n        new DocParagraph({ configuration }, [new DocPlainText({ configuration, text: betaWarning })])\n      ])\n    );\n  }\n\n  private _appendSection(output: DocSection | DocParagraph, docSection: DocSection): void {\n    for (const node of docSection.nodes) {\n      output.appendNode(node);\n    }\n  }\n\n  private _appendAndMergeSection(output: DocSection, docSection: DocSection): void {\n    let firstNode: boolean = true;\n    for (const node of docSection.nodes) {\n      if (firstNode) {\n        if (node.kind === DocNodeKind.Paragraph) {\n          output.appendNodesInParagraph(node.getChildNodes());\n          firstNode = false;\n          continue;\n        }\n      }\n      firstNode = false;\n\n      output.appendNode(node);\n    }\n  }\n\n  private _getFilenameForApiItem(apiItem: ApiItem): string {\n    if (apiItem.kind === ApiItemKind.Model) {\n      return '/';\n    }\n\n    let baseName: string = '';\n    for (const hierarchyItem of apiItem.getHierarchy()) {\n      // For overloaded methods, add a suffix such as \"MyClass.myMethod_2\".\n      let qualifiedName: string = Utilities.getSafeFilenameForName(hierarchyItem.displayName);\n      if (ApiParameterListMixin.isBaseClassOf(hierarchyItem)) {\n        if (hierarchyItem.overloadIndex > 1) {\n          // Subtract one for compatibility with earlier releases of API Documenter.\n          // (This will get revamped when we fix GitHub issue #1308)\n          qualifiedName += `_${hierarchyItem.overloadIndex - 1}`;\n        }\n      }\n\n      switch (hierarchyItem.kind) {\n        case ApiItemKind.Model:\n        case ApiItemKind.EntryPoint:\n          break;\n        case ApiItemKind.Package:\n          baseName = Utilities.getSafeFilenameForName(PackageName.getUnscopedName(hierarchyItem.displayName));\n          break;\n        default:\n          baseName += '/' + qualifiedName;\n      }\n    }\n\n    switch (apiItem.kind) {\n      case ApiItemKind.Method:\n      case ApiItemKind.Property:\n      case ApiItemKind.Function:\n      case ApiItemKind.Variable:\n        return '#' + baseName;\n        break;\n      default:\n        return baseName + '.md';\n    }\n\n  }\n\n  private _htmlIDForItem(apiItem: ApiItem): string {\n    if (apiItem.kind === ApiItemKind.Model) {\n      return '';\n    }\n\n    let baseName: string = '';\n    for (const hierarchyItem of apiItem.getHierarchy()) {\n      let qualifiedName: string = Utilities.getSafeFilenameForName(hierarchyItem.displayName);\n      if (ApiParameterListMixin.isBaseClassOf(hierarchyItem)) {\n        if (hierarchyItem.overloadIndex > 1) {\n          qualifiedName += `_${hierarchyItem.overloadIndex - 1}`;\n        }\n      }\n\n      switch (hierarchyItem.kind) {\n        case ApiItemKind.Model:\n        case ApiItemKind.EntryPoint:\n          break;\n        case ApiItemKind.Package:\n          baseName = Utilities.getSafeFilenameForName(PackageName.getUnscopedName(hierarchyItem.displayName));\n          break;\n        default:\n          baseName += '-' + qualifiedName;\n      }\n    }\n    return baseName + '-' + apiItem.kind;\n  }\n\n  private _getHrefForApiItem(apiItem: ApiItem): string {\n    return '#' + this._htmlIDForItem(apiItem);\n  }\n\n  /*\n  /\n  / Fluid Hack: set the /apis/ root path (should be in the config).\n  /\n  */\n  private _getLinkFilenameForApiItem(apiItem: ApiItem): string {\n    if (apiItem.kind === ApiItemKind.Model) {\n      return '/apis/'\n    }\n    if (this._shouldHaveStandalonePage(apiItem)) {\n      return '/apis/' + this._getFilenameForApiItem(apiItem);\n    } else {\n      return this._getHrefForApiItem(apiItem);\n    }\n  }\n\n  private _deleteOldOutputFiles(): void {\n    console.log('Deleting old output from ' + this._outputFolder);\n    FileSystem.ensureEmptyFolder(this._outputFolder);\n  }\n\n  private _shouldHaveStandalonePage(apiItem: ApiItem): boolean {\n    return (apiItem.kind === ApiItemKind.Package) || (apiItem.kind === ApiItemKind.Class) || (apiItem.kind === ApiItemKind.Interface)\n  }\n}\n"]}