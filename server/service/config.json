{
    "logger": {
        "colorize": true,
        "morganFormat": "dev",
        "json": false,
        "level": "info",
        "timestamp": true,
        "label": "winston"
    },
    "mongo": {
        "endpoint": "mongodb://mongodb:27017",
        "collectionNames": {
            "deltas": "deltas2",
            "documents": "documents",
            "partitions": "partitions",
            "tenants": "tenants",
            "nodes": "nodes",
            "reservations": "reservations"
        }
    },
    "kafka": {
        "endpoint": "kafka:9092",
        "lib": {
            "name": "kafka-node",
            "endpoint": "zookeeper:2181"
        },
        "maxMessageSize": "1MB"
    },
    "alfred": {
        "kafkaClientId": "alfred",
        "maxMessageSize": "16KB",
        "maxNumberOfClientsPerDocument": 1000000,
        "topic": "rawdeltas2",
        "bucket": "snapshots",
        "restJsonSize": "50mb",
        "tenants": [
            {
                "id": "fluid",
                "key": "43cfc3fbf04a97c0921fd23ff10f9e4b"
            },
            {
                "id": "github",
                "key": "0bea3f87c186991a69245a29dc3f61d2"
            },
            {
                "id": "cobalt",
                "key": "0e3c439e9ba63d85936c7e7e9c79478c"
            },
            {
                "id": "local",
                "key": "43cfc3fbf04a97c0921fd23ff10f9e4b"
            }
        ]
    },
    "client": {
        "type": "browser",
        "permission": []
    },
    "login": {
        "enabled": false,
        "microsoft": {
            "clientId": "",
            "secret": ""
        },
        "accounts": [
            {
                "username": "",
                "password": ""
            }
        ]
    },
    "deli": {
        "topics": {
            "receive": "rawdeltas2",
            "send": "deltas2"
        },
        "kafkaClientId": "deli",
        "groupId": "deli",
        "checkpointBatchSize": 10,
        "checkpointTimeIntervalMsec": 1000
    },
    "system": {
        "topics": {
            "send": "deltas2"
        }
    },
    "auth": {
        "endpoint": "http://riddler:5000"
    },
    "routemaster": {
        "topics": {
            "receive": "deltas2",
            "send": "rawdeltas2"
        },
        "clientId": "routemaster",
        "groupId": "routemaster"
    },
    "lambdas": {
        "deli": {
            "group": "deli",
            "topic": "rawdeltas2"
        },
        "routemaster": {
            "group": "routemaster",
            "topic": "deltas2"
        },
        "scriptorium": {
            "group": "scriptorium",
            "topic": "deltas2"
        },
        "bbc": {
            "group": "bbc",
            "topic": "deltas2"
        },
        "serviceGraph": {
            "group": "serviceGraph",
            "topic": "deltas2"
        },
        "rotograph": {
            "group": "rotograph",
            "topic": "deltas2"
        },
        "tmz": {
            "group": "tmz",
            "topic": "deltas2"
        }
    },
    "scriptorium": {
        "topic": "deltas2",
        "kafkaClientId": "scriptorium",
        "groupId": "scriptorium",
        "checkpointBatchSize": 1,
        "checkpointTimeIntervalMsec": 1000
    },
    "tmz": {
        "alfred": "http://alfred:3000",
        "queues": ["paparazziQueue", "augloopQueue"],
        "permissions": {
            "paparazziQueue": ["snapshot", "spell", "intel", "translation"],
            "augloopQueue": ["augmentation"]
        }
    },
    "rotograph": {
        "alfred": "http://alfred:3000",
        "queues": ["videoQueue"],
        "clientId": "339e853d-1307-4148-aa82-c6bd8a56dccc",
        "clientSecret": "A1LGEWdAVj8doEs5zyGgmikLgwijKliqbKwgs/CKcf0=",
        "endpoint": "https://videoblobstorage.restv2.westus2-2.media.azure.net/api/",
        "authEndpoint": "https://login.microsoftonline.com/microsoft.onmicrosoft.com/oauth2/token",
        "resource": "https://rest.media.azure.net",
        "permissions": {
            "videoQueue": ["encoding"]
        }
    },
    "paparazzi": {
        "queue": "paparazziQueue"
    },
    "rabbitmq": {
        "connectionString": "amqp://rabbitmq"
    },
    "redis": {
        "host": "redis",
        "port": 6379
    },
    "error": {
        "track": false,
        "endpoint" : ""
    },
    "worker": {
        "alfredUrl": "http://alfred:3000",
        "serverUrl": "http://localhost:3000",
        "blobStorageUrl": "http://historian:3000",
        "repository": "prague",
        "npm": "http://localhost:3002",
        "permission": ["snapshot", "spell", "intel", "translation"]
    },
    "tenantConfig": [
        {
            "_id": "fluid",
            "key": "43cfc3fbf04a97c0921fd23ff10f9e4b",
            "storage": {
                "url": "http://gitrest:3000",
                "owner": "prague",
                "repository": "prague"
            }
        },
        {
            "_id": "github",
            "key": "0bea3f87c186991a69245a29dc3f61d2",
            "storage": {
                "url": "https://api.github.com",
                "owner": "kurtb",
                "repository": "praguedocs",
                "direct": "https://api.github.com",
                "credentials": {
                    "user": "praguegit",
                    "password": "8d043006d0a2704d4dd9972f848f1982026672a1"
                }
            }
        },
        {
            "_id": "cobalt",
            "key": "0e3c439e9ba63d85936c7e7e9c79478c",
            "storage": {
                "url": "http://cobalt",
                "owner": "prague",
                "repository": "cobalt"
            }
        },
        {
            "_id": "local",
            "key": "43cfc3fbf04a97c0921fd23ff10f9e4b",
            "storage": {
                "url": "http://gitrest:3000",
                "owner": "prague",
                "repository": "local"
            }
        }
    ],
    "minio": {
        "endpoint": "minio",
        "port": 9000,
        "accessKey": "prague",
        "secretKey": "mhioAkNXTwdX4dXWgKgXVtHo",
        "bucket": "agents"
    }
}