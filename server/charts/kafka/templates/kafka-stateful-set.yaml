apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "kafka.fullname" . }}
  labels:
    app: {{ template "kafka.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "kafka"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "kafka.fullname" . }}
      component: "kafka"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "kafka.fullname" . }}
        component: "kafka"
        release: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: kafka
        image: wurstmeister/kafka:2.11-1.1.1
        ports:
        - name: kafka
          containerPort: 9092
        env:
        - name: "KAFKA_ADVERTISED_HOST_NAME"
          value: "{{ template "kafka.fullname" . }}"
        - name: "KAFKA_ADVERTISED_PORT"
          value: "9092"
        - name: "KAFKA_AUTO_CREATE_TOPICS_ENABLE"
          value: "false"
        - name: "KAFKA_CREATE_TOPICS"
          value: "{{ .Values.createTopics }}"
        - name: "KAFKA_ZOOKEEPER_CONNECT"
          value: "{{ template "zookeeper.fullname" .}}:2181"
        volumeMounts:
        - name: data
          mountPath: /kafka
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      storageClassName: managed-premium
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 2048Gi
