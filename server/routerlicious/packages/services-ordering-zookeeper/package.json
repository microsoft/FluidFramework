{
	"name": "@fluidframework/server-services-ordering-zookeeper",
	"version": "6.0.0",
	"description": "Fluid server services zookeeper client implementation",
	"homepage": "https://fluidframework.com",
	"repository": {
		"type": "git",
		"url": "https://github.com/microsoft/FluidFramework.git",
		"directory": "server/routerlicious/packages/services-ordering-zookeeper"
	},
	"license": "MIT",
	"author": "Microsoft and contributors",
	"main": "dist/index.js",
	"types": "dist/index.d.ts",
	"scripts": {
		"build": "concurrently npm:build:compile npm:lint",
		"build:compile": "npm run tsc && npm run typetests:gen",
		"clean": "rimraf --glob dist lib \"**/*.tsbuildinfo\" \"**/*.build.log\"",
		"eslint": "eslint --format stylish src",
		"eslint:fix": "eslint --format stylish src --fix --fix-type problem,suggestion,layout",
		"format": "npm run prettier:fix",
		"lint": "npm run prettier && npm run eslint",
		"lint:fix": "npm run prettier:fix && npm run eslint:fix",
		"prettier": "prettier --check . --cache --ignore-path ../../.prettierignore",
		"prettier:fix": "prettier --write . --cache --ignore-path ../../.prettierignore",
		"tsc": "tsc",
		"typetests:gen": "fluid-type-test-generator",
		"typetests:prepare": "flub typetests --dir . --reset --previous --normalize"
	},
	"dependencies": {
		"@fluidframework/server-services-core": "workspace:~",
		"zookeeper": "^5.3.2"
	},
	"devDependencies": {
		"@fluid-tools/build-cli": "^0.38.0",
		"@fluidframework/build-common": "^2.0.3",
		"@fluidframework/build-tools": "^0.38.0",
		"@fluidframework/eslint-config-fluid": "^5.2.0",
		"@fluidframework/server-services-ordering-zookeeper-previous": "npm:@fluidframework/server-services-ordering-zookeeper@5.0.0",
		"@fluidframework/server-test-utils": "workspace:~",
		"@types/debug": "^4.1.5",
		"@types/lru-cache": "^5.1.0",
		"@types/node": "^18.17.1",
		"@types/sinon": "^9.0.9",
		"concurrently": "^8.2.1",
		"eslint": "~8.55.0",
		"prettier": "~3.0.3",
		"rimraf": "^4.4.0",
		"sinon": "^9.2.3",
		"typescript": "~5.1.6"
	},
	"fluidBuild": {
		"tasks": {
			"tsc": [
				"...",
				"typetests:gen"
			]
		}
	},
	"typeValidation": {
		"broken": {}
	}
}
