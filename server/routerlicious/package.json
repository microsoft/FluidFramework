{
  "name": "root",
  "private": true,
  "license": "MIT",
  "author": "Microsoft",
  "scripts": {
    "build": "npm run policy-check && npm run build:genver && npm run build:compile && npm run tslint && npm run build:docs",
    "build:ci": "npm run build:genver && lerna run build:compile:min --stream",
    "build:compile": "lerna run build:compile --stream",
    "build:docs": "npm run clean:docs && lerna run build:docs --stream --parallel && npm run build:gendocs",
    "build:fast": "node ../../tools/fluid-build/dist/fluidBuild.js --root .",
    "build:full": "npm run build:genver && npm run build:full:compile && npm run tslint && npm run build:docs",
    "build:full:compile": "lerna run build:full:compile --stream",
    "build:gendocs": "api-documenter yaml -i _api-extractor-temp/doc-models -o docs/api",
    "build:genver": "lerna run build:genver --stream --parallel",
    "bump-version": "lerna version minor --no-push --no-git-tag-version && npm run build:genver",
    "clean": "lerna run clean --stream --parallel && npm run clean:docs && npm run clean:nyc",
    "clean:docs": "rimraf _api-extractor-temp docs/api/*/**",
    "clean:nyc": "rimraf nyc/**",
    "lint": "npm run tslint",
    "docker-build": "docker-compose build",
    "docker-clean": "docker-compose down --rmi local && docker volume prune --force",
    "postinstall": "npm run postinstall:lerna && (npm run postinstall:fluid-build || true) && (npm run postinstall:r11s || true)",
    "policy-check": "cd ../../tools/repo-policy-check && npm run policy-check",
    "policy-check:full": "cd ../../tools/repo-policy-check && npm install && npm run policy-check",
    "postinstall:fluid-build": "cd ../../tools/fluid-build && npm i && npm run build",
    "postinstall:lerna": "lerna bootstrap --hoist --nohoist tslint-microsoft-contrib",
    "postinstall:r11s": "npm run registryAuth",
    "publish-local": "lerna run publish-local --stream",
    "registryAuth": "docker login -u prague -p /vM3i=D+K4+vj+pgha=cg=55OQLDWj3w prague.azurecr.io",
    "restart": "docker-compose restart gateway && docker-compose restart alfred && docker-compose restart deli && docker-compose restart scriptorium && docker-compose restart foreman && docker-compose restart paparazzi",
    "sort-package-json": "sort-package-json ./package.json && lerna exec -- sort-package-json ./package.json",
    "start": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up",
    "start:debug": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.debug.yml up",
    "start:rdkafka": "docker-compose -f docker-compose.rdkafka.yml -f docker-compose.dev.yml up",
    "start:standalone": "docker-compose -f docker-compose.standalone.yml up",
    "stop": "docker-compose down",
    "stop:full": "docker-compose down && docker volume prune --force",
    "test": "lerna run test --stream --no-bail --no-sort",
    "test:ci": "npm run test:report;t1=$?;npm run test:copyresults; exit $t1",
    "test:ci:coverage": "npm run test:coverage;t1=$?;npm run test:copyresults; exit $t1",
    "test:copyresults": "copyfiles --exclude \"**/node_modules/**\" \"**/nyc/**\" nyc",
    "test:coverage": "nyc npm run test:report",
    "test:fromroot": "mocha \"packages/**/dist/test/**/*.spec.js\" --exit",
    "test:full": "npm run test:ci:coverage",
    "test:report": "lerna run test --stream --no-bail --no-sort -- -- --reporter mocha-junit-reporter --reporter-options mochaFile=nyc/junit-report.xml",
    "tsc": "lerna run tsc --stream",
    "tslint": "lerna run tslint --no-sort --stream",
    "watch": "concurrently \"npm run watch:tsc\" \"npm run watch:esnext\" \"npm run watch:webpack\"",
    "watch:esnext": "lerna run --parallel build:esnext -- -- --watch",
    "watch:tsc": "lerna run --parallel tsc -- -- --watch",
    "watch:webpack": "lerna run --parallel webpack -- -- --watch",
    "webpack": "lerna run --no-sort webpack --stream"
  },
  "dependencies": {},
  "devDependencies": {
    "@microsoft/api-documenter": "^7.4.6",
    "@microsoft/api-extractor": "^7.4.4",
    "concurrently": "^4.1.0",
    "copyfiles": "^2.1.0",
    "lerna": "^3.14.1",
    "nyc": "^14.1.1",
    "rimraf": "^2.6.2",
    "sort-package-json": "^1.22.1",
    "typescript": "~3.4.5"
  },
  "nyc": {
    "all": true,
    "exclude": [],
    "include": [],
    "reporter": [
      "cobertura",
      "html",
      "text"
    ],
    "temp-directory": "nyc/.nyc_output",
    "cache-dir": "nyc/.cache",
    "report-dir": "nyc/report"
  }
}
