## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
imagePullPolicy: IfNotPresent

name: routerlicious

alfred:
  name: alfred
  replicas: 4
  externalUrl: alfred_external_url
  host: alfred_host
  cert: cert
  tenants: []
  key: jwt_key
  numberOfMessagesPerTrace: 100
  sessionStickinessDurationMs: 3600000
  ignoreEphemeralFlag: true
  throttling:
    restCallsPerTenant:
      generalRestCall:
        maxPerMs: 1000000
        maxBurst: 1000000
        minCooldownIntervalInMs: 1000000
        minThrottleIntervalInMs: 1000000
        maxInMemoryCacheSize: 1000
        maxInMemoryCacheAgeInMs: 60000
        enableEnhancedTelemetry: false
      createDoc: disabled
      getDeltas: disabled
      getSession: disabled
    restCallsPerCluster:
      createDoc:
        maxPerInterval: 1000000
        intervalInMs: 1000000
      getDeltas: disabled
      getSession: disabled
    submitOps: disabled
    submitSignal: disabled
  enforceServerGeneratedDocumentId: false
  getDeltasRequestMaxOpsRange: 2000

nexus:
  name: nexus
  replicas: 4
  externalUrl: nexus_external_url
  host: nexus_host
  cert: cert
  tenants: []
  key: jwt_key
  maxNumberOfClientsPerDocument: 1000000
  numberOfMessagesPerTrace: 100
  throttling:
    socketConnectionsPerTenant: disabled
    socketConnectionsPerCluster: disabled
    submitOps: disabled
    submitSignal: disabled
  socketIoAdapter:
    enableCustomSocketIoAdapter: true
    shouldDisableDefaultNamespace: false
  socketIo:
    perMessageDeflate: true
    gracefulShutdownEnabled: false
    pingPongLatencyTrackingEnabled: false

storage:
  enableWholeSummaryUpload: false
  storageUrl: storage_url

checkpoints:
  localCheckpointEnabled: false
  checkpointsTTLInSeconds: -1
  kafkaCheckpointOnReprocessingOp: false

session:
  enforceDiscoveryFlow: false

deli:
  name: deli
  replicas: 8
  checkpointHeuristics:
    enable: false
    idleTime: 10000
    maxTime: 60000
    maxMessages: 500
  restartOnCheckpointFailure: true
  enableEphemeralContainerSummaryCleanup: true
  enableLeaveOpNoClientServerMetadata: false
  noOpConsolidationTimeout: 250

scriptorium:
  name: scriptorium
  replicas: 8
  restartOnCheckpointFailure: true
  logSavedOpsTimeIntervalMs: 60000
  opsCountTelemetryEnabled: false

scribe:
  name: scribe
  replicas: 8
  getDeltasViaAlfred: true
  maxLogtailLength: 2000
  verifyLastOpPersistence: false
  disableTransientTenantFiltering: true
  checkpointHeuristics:
    enable: false
    idleTime: 10000
    maxTime: 60000
    maxMessages: 500
  restartOnCheckpointFailure: true
  scrubUserDataInGlobalCheckpoints: false
  scrubUserDataInLocalCheckpoints: false
  scrubUserDataInSummaries: false

riddler:
  name: riddler
  replicas: 2
  tenants: []

historian:
  externalUrl: historian_external_url
  internalUrl: historian_internal_url

zookeeper:
  local: false
  url: zookeeper_url:port

system:
  httpServer:
    connectionTimeoutMs: 0

usage:
  clientConnectivityCountingEnabled: false
  signalUsageCountingEnabled: false
  httpUsageCountingEnabled: false

shared:
  transientTenants: []
  runnerServerCloseTimeoutMs: 30000

mongodb:
  operationsDbEndpoint: mongodb_url
  globalDbEndpoint: mongoglobaldb_url
  globalDbEnabled: false
  expireAfterSeconds: 9000 # Note: CosmosDB supports -1 to disable TTL but MongoDB does not
  createCosmosDBIndexes: false
  directConnection: true
  softDeletionRetentionPeriodMs: 2592000000
  offlineWindowMs: 86400000
  softDeletionEnabled: false
  permanentDeletionEnabled: false
  deletionIntervalMs: 3600000

redis:
  url: redis_url
  port: 6379
  tls: false

redis2:
  url: redis_url
  port: 6379
  tls: false

redisForThrottling:
  url: redis_url
  port: 6379
  tls: false

redisForTenantCache:
  url: redis_url
  port: 6379
  tls: false

kafka:
  topics:
    rawdeltas: rawdeltas
    deltas: deltas
  url: kafka_url:port
  libname: rdkafka
  customRestartOnKafkaErrorCodes: [-195, -192, -187, -185, -181, 14]

ingress:
  class: nginx-prod

error:
  track: true
  endpoint: "error_tracking_endpoint"

lumberjack:
  options:
    enableGlobalTelemetryContext: true
    enableSanitization: false

config:
  configDumpEnabled: false
  secretNamesToRedactInConfigDump:
    - mongo.globalDbEndpoint
    - mongo.operationsDbEndpoint
    - redis.pass
    - redisForTenantCache.pass
    - redis2.pass
    - redisForThrottling.pass
