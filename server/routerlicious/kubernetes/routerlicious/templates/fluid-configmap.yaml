apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "routerlicious.fullname" . }}
  labels:
    app: {{ template "routerlicious.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Values.name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  config.json: |
    {
        "logger": {
            "colorize": false,
            "morganFormat": "short",
            "json": true,
            "level": "info",
            "timestamp": false,
            "label": "winston"
        },
        "mongo": {
            "endpoint": "{{ .Values.mongodb.url }}",
            "collectionNames": {
                "deltas": "deltas",
                "documents": "documents",
                "partitions": "partitions",
                "tenants": "tenants",
                "nodes": "nodes",
                "reservations": "reservations",
                "scribeDeltas": "scribeDeltas"
            }
        },
        "kafka": {
            "lib": {
                "name": "kafka-node",
                "endpoint": "{{ .Values.kafka.url }}"
            },
            "maxMessageSize": "1MB"
        },
        "zookeeper": {
            "endpoint": "{{ .Values.zookeeper.url }}"
        },
        {{- if .Values.eventHub }}
        "eventHub": {
            "endpoint": "{{ .Values.eventHub.endpoint }}",
            "storageEndpoint": "{{ .Values.eventHub.storageEndpoint }}",
            "storageContainer": "{{ .Values.eventHub.storageContainer }}"
        },
        {{- end }}
        "alfred": {
            "kafkaClientId": "{{ template "alfred.fullname" . }}",
            "maxMessageSize": "16KB",
            "maxNumberOfClientsPerDocument": {{ .Values.alfred.maxNumberOfClientsPerDocument }},
            "topic": "{{ .Values.kafka.topics.rawdeltas }}",
            "bucket": "snapshots",
            "restJsonSize": "50mb",
            "key": "{{ .Values.alfred.key }}",
            "tenants": [
                {{- $lastIndex := sub (len .Values.alfred.tenants) 1}}
                {{- range $i, $tenant := .Values.alfred.tenants }}
                {{ toJson . }}{{- if ne $i $lastIndex -}}, {{ end }}
                {{- end }}
            ]
        },
        "client": {
            "type": "browser",
            "permission": []
        },
        "deli": {
            "topics": {
                "receive": "{{ .Values.kafka.topics.rawdeltas }}",
                "send": "{{ .Values.kafka.topics.deltas }}"
            },
            "kafkaClientId": "{{ template "deli.fullname" . }}",
            "groupId": "{{ template "deli.fullname" . }}",
            "checkpointBatchSize": 10,
            "checkpointTimeIntervalMsec": 1000
        },
        "scribe": {
            "kafkaClientId": "{{ template "scribe.fullname" . }}"
        },
        "system": {
            "topics": {
                "send": "{{ .Values.kafka.topics.deltas }}"
            }
        },
        "auth": {
            "endpoint": "http://{{ template "riddler.fullname" . }}",
            "maxTokenLifetimeSec": 3600,
            "enableTokenExpiration": false
        },
        "routemanager": {
            "topics": {
                "receive": "{{ .Values.kafka.topics.deltas }}",
                "send": "{{ .Values.kafka.topics.rawdeltas }}"
            },
            "clientId": "{{ template "routemanager.fullname" . }}",
            "groupId": "{{ template "routemanager.fullname" . }}",
            "checkpointBatchSize": 10,
            "checkpointTimeIntervalMsec": 1000
        },
        "lambdas": {
            "deli": {
                "group": "{{ template "deli.fullname" . }}",
                "topic": "{{ .Values.kafka.topics.rawdeltas }}"
            },
            "routemanager": {
                "group": "{{ template "routemanager.fullname" . }}",
                "topic": "{{ .Values.kafka.topics.deltas }}"
            },
            "scriptorium": {
                "group": "{{ template "scriptorium.fullname" . }}",
                "topic": "{{ .Values.kafka.topics.deltas }}"
            },
            "scribe": {
                "group": "{{ template "scribe.fullname" . }}",
                "topic": "{{ .Values.kafka.topics.deltas }}"
            },
            "foreman": {
                "group": "{{ template "foreman.fullname" . }}",
                "topic": "{{ .Values.kafka.topics.deltas }}"
            }
        },
        "scriptorium": {
            "topic": "{{ .Values.kafka.topics.deltas }}",
            "kafkaClientId": "{{ template "scriptorium.fullname" . }}",
            "groupId": "{{ template "scriptorium.fullname" . }}",
            "checkpointBatchSize": 1,
            "checkpointTimeIntervalMsec": 1000
        },
        "foreman": {
            "alfred": "http://{{ template "alfred.fullname" . }}",
            "topic": "{{ .Values.kafka.topics.deltas }}",
            "kafkaClientId": "{{ template "foreman.fullname" . }}",
            "groupId": "{{ template "foreman.fullname" . }}",
            "queues": ["paparazziQueue", "augloopQueue", "headlessQueue"],
            "permissions": {
                "paparazziQueue": ["snapshot", "spell", "intel", "translation"],
                "augloopQueue": ["augmentation"],
                "headlessQueue": ["chain-snapshot", "chain-intel", "chain-translation", "chain-spell", "chain-cache", "chain-search"]
            }
        },
        "paparazzi": {
            "queue": "paparazziQueue"
        },
        "rabbitmq": {
            "connectionString": "{{ .Values.rabbitmq.connectionString }}"
        },
        "riddler": {
            "port": 5000
        },
        "redis": {
            "host": "{{ .Values.redis.url }}",
            "port": "{{ .Values.redis.port }}",
            "pass": "{{ .Values.redis.password }}",
            "tls": {{ .Values.redis.tls }}
        },
        "redis2": {
            "host": "{{ .Values.redis2.url }}",
            "port": "{{ .Values.redis2.port }}",
            "pass": "{{ .Values.redis2.password }}",
            "tls": {{ .Values.redis2.tls }}
        },
        "error": {
            "track": {{ .Values.error.track }},
            "endpoint": "{{ .Values.error.endpoint }}"
        },
        "worker": {
            "alfredUrl": "http://{{ template "alfred.fullname" . }}",
            "serverUrl": "{{ .Values.alfred.externalUrl }}",
            "blobStorageUrl": "{{ .Values.historian.externalUrl }}",
            "internalBlobStorageUrl": "{{ .Values.historian.internalUrl }}",
            "permission": ["snapshot", "spell", "intel", "translation", "search", "chain-snapshot", "chain-spell", "chain-intel", "chain-translation", "chain-search"]
        },
        "tenantConfig": [
            {{- $lastIndex := sub (len .Values.riddler.tenants) 1}}
            {{- range $i, $tenant := .Values.riddler.tenants }}
            {{ toJson . }}{{- if ne $i $lastIndex -}}, {{ end }}
            {{- end }}
        ]
    }
