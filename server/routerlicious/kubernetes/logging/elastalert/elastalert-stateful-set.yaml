apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: elastalert
spec:
  serviceName: elastalert
  replicas: 1
  template:
    metadata:
      labels:
        app: elastalert
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: elastalert
        image: jertel/elastalert-docker:0.1.29
        env:
          - name: "ELASTICSEARCH_HOST"
            value: "elasticsearch"
          - name: "ELASTICSEARCH_PORT"
            value: "9200"
        volumeMounts:
        - name: logs
          mountPath: /opt/logs
        - name: config
          mountPath: /opt/config/elastalert_config.yaml
          subPath: elastalert_config.yaml
        - name: auth
          mountPath: /opt/config/smtp_auth.yaml
          subPath: smtp_auth.yaml
        - name: rule-unhandledpromise
          mountPath: /opt/rules/unhandledpromise.yaml
          subPath: unhandledpromise.yaml
        - name: rule-error
          mountPath: /opt/rules/error.yaml
          subPath: error.yaml

      volumes:
      - name: rules
        hostPath:
          path: /config/elastalert/rules
      - name: config
        configMap:
          name: elastalert-config
      - name: auth
        configMap:
          name: elastalert-auth
      - name: rule-unhandledpromise
        configMap:
          name: elastalert-unhandledpromise
      - name: rule-error
        configMap:
          name: elastalert-error

  volumeClaimTemplates:
  - metadata:
      name: logs
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 128Gi
