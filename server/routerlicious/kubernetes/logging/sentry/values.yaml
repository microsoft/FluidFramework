# Default values for sentry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: sentry
  tag: "9.1.1"
  pullPolicy: IfNotPresent

# How many web UI instances to run
web:
  replicacount: 1
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 300m
      memory: 300Mi
  env:
    - name: GITHUB_APP_ID
      value: ""
    - name: GITHUB_API_SECRET
      value: ""
    - name: SOCIAL_AUTH_REDIRECT_IS_HTTPS
      value: "true"
    - name: USE_X_FORWARDED_HOST
      value: "true"
    
  nodeSelector: {}
  tolerations: []
  affinity: {}

# How many cron instances to run
cron:
  replicacount: 1
  resources:
    limits:
      cpu: 400m
      memory: 400Mi
    requests:
      cpu: 200m
      memory: 200Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

# How many worker instances to run
worker:
  replicacount: 2
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 200m
      memory: 200Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Initial admin user to create
user:
  email: admin@fluid

# BYO Email server
# TODO: Add exim4 template
# https://docs.sentry.io/server/installation/docker/#outbound-email
email:
  from_address: admin@fluid.local
  host: smtp
  port: 25
  use_tls: false
  user:
  password:
  enable_replies: false

# Name of the service and what port to expose on the pod
# Don't change these unless you know what you're doing
service:
  name: sentry
  type: NodePort
  externalPort: 9000
  internalPort: 9000
  ## External IP addresses of service
  ## Default: nil
  ##
  # externalIPs:
  # - 192.168.0.1

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 512Gi

  # Where to store sentry files
  # https://docs.sentry.io/server/filestore/
  filestore_dir: /var/lib/sentry/files

## Configure ingress resource that allow you to access the
## Sentry installation. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  enabled: true
  hostname: sentry.wu2.prague.office-int.com

  ## Ingress annotations
  ##
  annotations:
    kubernetes.io/ingress.class: nginx-prod
    ingress.kubernetes.io/ssl-redirect: "true"

  ## Ingress TLS configuration
  ## Secrets must be manually created in the namespace
  ##
  tls:
     - secretName: wu2-tls-certificate
       hosts:
         - sentry.wu2.prague.office-int.com

# TODO: add support for plugins https://docs.sentry.io/server/plugins/

postgresql:
  postgresDatabase: sentry
  postgresUser: sentry
  imageTag: "9.5"
  persistence:
    enabled: true

redis:
  persistence:
    enabled: true
