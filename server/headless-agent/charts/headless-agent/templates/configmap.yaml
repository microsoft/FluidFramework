apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Values.name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  config.json: |
    {
        "logger": {
            "colorize": false,
            "morganFormat": "short",
            "json": true,
            "level": "verbose",
            "timestamp": false,
            "label": "winston"
        },
        "kafka": {
            "lib": {
                "name": "kafka-node",
                "endpoint": "{{ .Values.endpoints.kafka }}"
            }
        },
        "redis": {
            "host": "{{ .Values.endpoints.redis.url }}",
            "port": "{{ .Values.endpoints.redis.port }}"",
            "tls": {{ .Values.endpoints.redis.tls }},
            "pass": "{{ .Values.endpoints.redis.password }}"
        },
        "system": {
            "topics": {
                "send": "deltas"
            }
        },
        "error": {
            "track": true,
            "endpoint" : "https://25f5c231660f474fb85fb4daeb070029:3301d25c7ed9434688e4f5bd998b9739@sentry.wu2.prague.office-int.com/2"
        },
        "auth": {
            "endpoint": "{{ .Values.endpoints.riddler }}"
        },
        "worker": {
            "alfredUrl": "{{ .Values.endpoints.alfred }}",
            "serverUrl": "{{ .Values.endpoints.alfredUrl }}",
            "packageUrl": "{{ .Values.endpoints.packageUrl }}",
            "blobStorageUrl": "{{ .Values.endpoints.historianUrl }}",
            "repository": "FluidFramework",
            "permission": ["chain-snapshot", "chain-spell", "chain-intel", "chain-translation", "chain-cache"],
            "key": "VBQyoGpEYrTn3XQPtXW3K8fFDd"
        },
        "tmz": {
            "alfred": "{{ .Values.endpoints.alfred }}",
            "agentExchange": "agentExchange"
        },
        "headless-agent": {
            "queue": "headlessQueue"
        },
        "rabbitmq": {
            "connectionString": "{{ .Values.endpoints.rabbitmq }}"
        }
    }