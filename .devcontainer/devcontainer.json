// Fluid Development Container based on "docker-from-docker" template:
// https://github.com/microsoft/vscode-dev-containers/blob/master/containers/docker-from-docker/.devcontainer/devcontainer.json
// For format details, see https://aka.ms/vscode-remote/devcontainer.json
{
	"name": "Fluid",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'NODE_VERSION' to pick a Node version: 10, 12, 14
		"args": {
			"NODE_VERSION": "18"
		}
	},
	"runArgs": ["--init"],
	"mounts": ["source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind"],
	"overrideCommand": false,

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"dbaeumer.vscode-eslint",
		"ms-azuretools.vscode-docker",
		"mutantdino.resourcemonitor"
	],

	// Forward port for Tinylicious
	"forwardPorts": [7070],

	// Invoke 'nvm' to install our preferred version of node, per the '.nvmrc' file
	// located at the root of the ${workspaceFolder}.
	// Also run corepack enable to allow node to download and use the right version of pnpm.
	"postCreateCommand": ". /usr/local/share/nvm/nvm.sh; nvm install; corepack enable",

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "node",
	"features": {
		"git-lfs": "latest"
		// We do not install Azure CLI and Github CLI because of security considerations
		// when creating Github Codespaces instances. It's ok to install them manually if
		// using this file to develop in a local container.
		// "azure-cli": "latest",  // DO NOT UNCOMMENT
		// "github-cli": "latest", // DO NOT UNCOMMENT
	}
}
