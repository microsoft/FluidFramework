version: '3.4'
services:
    development:
        # Uncomment the next line to use a non-root user. On Linux, this will prevent
        # new files getting created as root, but you may need to update the USER_UID
        # and USER_GID in .devcontainer/Dockerfile to match your user if not 1000.
        user: node

        # Using a Dockerfile is optional, but included for completeness.
        build:
            context: .
            dockerfile: Dockerfile

        # Uncomment to expose one or more ports
        ports:
        - "8080:8080"

        volumes:
            # This is where VS Code should expect to find your project's source code
            # and the value of "workspaceFolder" in .devcontainer/devcontainer.json
            - ..:/workspace
            # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker-compose for details.
            - /var/run/docker.sock:/var/run/docker.sock

        # Overrides default command so things don't shut down after the process ends.
        command: sleep infinity
    gateway:
        image: prague.azurecr.io/prague:12579
        ports:
            - "3000:3000"
        command: node ../gateway/dist/www.js
        environment:
            - DEBUG=fluid:*
            - NODE_ENV=development
            - login__microsoft__clientId
            - login__microsoft__secret
            - login__accounts
        restart: always
    alfred:
        image: prague.azurecr.io/prague:12579
        ports:
            - "3003:3000"
        command: node dist/alfred/www.js
        environment:
            - DEBUG=fluid:*
            - NODE_ENV=development
        restart: always
    deli:
        image: prague.azurecr.io/prague:12579
        command: node dist/kafka-service/index.js deli /usr/src/server/packages/server/routerlicious/dist/deli/index.js
        environment:
            - DEBUG=fluid:*
            - NODE_ENV=development
        restart: always
    scriptorium:
        image: prague.azurecr.io/prague:12579
        command: node dist/kafka-service/index.js scriptorium /usr/src/server/packages/server/routerlicious/dist/scriptorium/index.js
        environment:
            - DEBUG=fluid:*
            - NODE_ENV=development
        restart: always
    broadcaster:
        image: prague.azurecr.io/prague:12579
        command: node dist/kafka-service/index.js broadcaster /usr/src/server/packages/server/routerlicious/dist/broadcaster/index.js
        environment:
            - DEBUG=fluid:*
            - NODE_ENV=development
        restart: always
    scribe:
        image: prague.azurecr.io/prague:12579
        command: node dist/kafka-service/index.js scribe /usr/src/server/packages/server/routerlicious/dist/scribe/index.js
        environment:
            - DEBUG=fluid:*
            - NODE_ENV=development
        restart: always
    riddler:
        image: prague.azurecr.io/prague:12579
        ports:
            - "5000:5000"
        command: node dist/riddler/www.js
        environment:
            - DEBUG=fluid:*
            - NODE_ENV=development
        restart: always
    historian:
        image: prague.azurecr.io/historian:5109
        ports:
            - "3001:3000"
        environment:
            - DEBUG=fluid:*
            - NODE_ENV=development
        restart: always
    gitrest:
        image: prague.azurecr.io/gitrest:4048
        environment:
            - DEBUG=fluid:*
            - NODE_ENV=development
        volumes:
            - git:/home/node/documents
        restart: always
    git:
        image: prague.azurecr.io/gitssh:654
        ports:
            - "3022:22"
        volumes:
            - git:/home/git
        restart: always
    zookeeper:
        image: wurstmeister/zookeeper:latest
        ports:
            - "2181:2181"
        restart: always
    kafka:
        image: wurstmeister/kafka:2.11-1.1.1
        ports:
            - "9092:9092"
        environment:
            KAFKA_ADVERTISED_HOST_NAME: "kafka"
            KAFKA_ADVERTISED_PORT: "9092"
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
            KAFKA_CREATE_TOPICS: "deltas:8:1,rawdeltas:8:1,testtopic:8:1,deltas2:8:1,rawdeltas2:8:1"
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        restart: always
    redis:
        image: "redis:alpine"
    mongodb:
        image: "mongo:3.4.3"
    rabbitmq:
        image: "rabbitmq:alpine"
volumes:
  git:
    driver: local
